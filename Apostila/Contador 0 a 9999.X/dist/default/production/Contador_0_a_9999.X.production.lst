

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Mon Feb 22 13:05:18 2016

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	text11,global,reloc=2,class=CODE,delta=1
    22                           	psect	text12,global,reloc=2,class=CODE,delta=1
    23                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    24                           	psect	text14,global,reloc=2,class=CODE,delta=1
    25                           	psect	text15,global,reloc=2,class=CODE,delta=1
    26                           	psect	text16,global,reloc=2,class=CODE,delta=1
    27                           	psect	text17,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31  0000                     
    32                           	psect	smallconst
    33  001000                     __psmallconst:
    34                           	opt stack 0
    35  001000  00                 	db	0
    36  001001                     _dpowers:
    37                           	opt stack 0
    38  001001  0001               	dw	1
    39  001003  0000               	dw	0
    40  001005  000A               	dw	10
    41  001007  0000               	dw	0
    42  001009  0064               	dw	100
    43  00100B  0000               	dw	0
    44  00100D  03E8               	dw	1000
    45  00100F  0000               	dw	0
    46  001011  2710               	dw	10000
    47  001013  0000               	dw	0
    48  001015  86A0               	dw	34464
    49  001017  0001               	dw	1
    50  001019  4240               	dw	16960
    51  00101B  000F               	dw	15
    52  00101D  9680               	dw	38528
    53  00101F  0098               	dw	152
    54  001021  E100               	dw	57600
    55  001023  05F5               	dw	1525
    56  001025  CA00               	dw	51712
    57  001027  3B9A               	dw	15258
    58  001029                     __end_of_dpowers:
    59                           	opt stack 0
    60  001029                     _Converte_Bcd_7seg:
    61                           	opt stack 0
    62  001029  3F                 	db	63
    63  00102A  06                 	db	6
    64  00102B  5B                 	db	91
    65  00102C  4F                 	db	79
    66  00102D  66                 	db	102
    67  00102E  6D                 	db	109
    68  00102F  7D                 	db	125
    69  001030  07                 	db	7
    70  001031  7F                 	db	127
    71  001032  6F                 	db	111
    72  001033                     __end_of_Converte_Bcd_7seg:
    73                           	opt stack 0
    74  0000                     _ANSELA	set	3896
    75  0000                     _ANSELB	set	3897
    76  0000                     _ANSELDbits	set	3899
    77  0000                     _INTCONbits	set	4082
    78  0000                     _LATB	set	3978
    79  0000                     _LATDbits	set	3980
    80  0000                     _OSCCON2bits	set	4050
    81  0000                     _OSCCONbits	set	4051
    82  0000                     _OSCTUNEbits	set	3995
    83  0000                     _T0CON	set	4053
    84  0000                     _T0CONbits	set	4053
    85  0000                     _TMR0H	set	4055
    86  0000                     _TMR0L	set	4054
    87  0000                     _TRISB	set	3987
    88  0000                     _TRISDbits	set	3989
    89  001033                     STR_1:
    90  001033  25                 	db	37
    91  001034  36                 	db	54	;'6'
    92  001035  6C                 	db	108	;'l'
    93  001036  75                 	db	117	;'u'
    94  001037  00                 	db	0
    95                           
    96                           ; #config settings
    97  001038  00                 	db	0	; dummy byte at the end
    98  0000                     
    99                           	psect	cinit
   100  00169A                     __pcinit:
   101                           	opt stack 0
   102  00169A                     start_initialization:
   103                           	opt stack 0
   104  00169A                     __initialization:
   105                           	opt stack 0
   106                           
   107                           ; Clear objects allocated to BANK0 (15 bytes)
   108  00169A  EE00  F060         	lfsr	0,__pbssBANK0
   109  00169E  0E0F               	movlw	15
   110  0016A0                     clear_0:
   111  0016A0  6AEE               	clrf	postinc0,c
   112  0016A2  06E8               	decf	wreg,f,c
   113  0016A4  E1FD               	bnz	clear_0
   114  0016A6                     end_of_initialization:
   115                           	opt stack 0
   116  0016A6                     __end_of__initialization:
   117                           	opt stack 0
   118  0016A6  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   119  0016A8  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   120  0016AA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   121  0016AC  6EF8               	movwf	tblptru,c
   122  0016AE  0100               	movlb	0
   123  0016B0  EF7F  F00A         	goto	_main	;jump to C main() function
   124                           tblptru	equ	0xFF8
   125                           postinc0	equ	0xFEE
   126                           wreg	equ	0xFE8
   127                           
   128                           	psect	bssBANK0
   129  000060                     __pbssBANK0:
   130                           	opt stack 0
   131  000060                     _Varredura:
   132                           	opt stack 0
   133  000060                     	ds	9
   134  000069                     _Contador:
   135                           	opt stack 0
   136  000069                     	ds	4
   137  00006D                     _TMR0_Eventos:
   138                           	opt stack 0
   139  00006D                     	ds	2
   140                           tblptru	equ	0xFF8
   141                           postinc0	equ	0xFEE
   142                           wreg	equ	0xFE8
   143                           
   144                           	psect	cstackBANK0
   145  00006F                     __pcstackBANK0:
   146                           	opt stack 0
   147  00006F                     
   148                           ; 2 bytes @ 0x0
   149  00006F                     	ds	2
   150  000071                     
   151                           ; 3 bytes @ 0x2
   152  000071                     	ds	3
   153                           tblptru	equ	0xFF8
   154                           postinc0	equ	0xFEE
   155                           wreg	equ	0xFE8
   156                           
   157                           	psect	cstackCOMRAM
   158  000001                     __pcstackCOMRAM:
   159                           	opt stack 0
   160  000001                     i2Latch_EscreveValor@Valor:
   161                           	opt stack 0
   162  000001                     i2Timer0_Recarga@ValorDeCarga:
   163                           	opt stack 0
   164                           
   165                           ; 2 bytes @ 0x0
   166  000001                     	ds	1
   167  000002                     Display_LigaDigito@Digito:
   168                           	opt stack 0
   169                           
   170                           ; 1 bytes @ 0x1
   171  000002                     	ds	1
   172  000003                     Display_LigaDigito@Valor:
   173                           	opt stack 0
   174                           
   175                           ; 1 bytes @ 0x2
   176  000003                     	ds	1
   177  000004                     ??_Interrupt_High:
   178                           
   179                           ; 1 bytes @ 0x3
   180  000004                     	ds	14
   181  000012                     ??_isdigit:
   182  000012                     ?___wmul:
   183                           	opt stack 0
   184  000012                     ?___lldiv:
   185                           	opt stack 0
   186  000012                     Latch_EscreveValor@Valor:
   187                           	opt stack 0
   188  000012                     Timer0_Recarga@ValorDeCarga:
   189                           	opt stack 0
   190  000012                     ___wmul@multiplier:
   191                           	opt stack 0
   192  000012                     ___lldiv@dividend:
   193                           	opt stack 0
   194                           
   195                           ; 4 bytes @ 0x11
   196  000012                     	ds	1
   197  000013                     Latch_Inicializacao@Valor:
   198                           	opt stack 0
   199  000013                     _isdigit$820:
   200                           	opt stack 0
   201                           
   202                           ; 1 bytes @ 0x12
   203  000013                     	ds	1
   204  000014                     isdigit@c:
   205                           	opt stack 0
   206  000014                     ___wmul@multiplicand:
   207                           	opt stack 0
   208                           
   209                           ; 2 bytes @ 0x13
   210  000014                     	ds	2
   211  000016                     ___wmul@product:
   212                           	opt stack 0
   213  000016                     ___lldiv@divisor:
   214                           	opt stack 0
   215                           
   216                           ; 4 bytes @ 0x15
   217  000016                     	ds	4
   218  00001A                     ___lldiv@quotient:
   219                           	opt stack 0
   220                           
   221                           ; 4 bytes @ 0x19
   222  00001A                     	ds	4
   223  00001E                     ___lldiv@counter:
   224                           	opt stack 0
   225                           
   226                           ; 1 bytes @ 0x1D
   227  00001E                     	ds	1
   228  00001F                     ?___llmod:
   229                           	opt stack 0
   230  00001F                     ___llmod@dividend:
   231                           	opt stack 0
   232                           
   233                           ; 4 bytes @ 0x1E
   234  00001F                     	ds	4
   235  000023                     ___llmod@divisor:
   236                           	opt stack 0
   237                           
   238                           ; 4 bytes @ 0x22
   239  000023                     	ds	4
   240  000027                     ___llmod@counter:
   241                           	opt stack 0
   242                           
   243                           ; 1 bytes @ 0x26
   244  000027                     	ds	1
   245  000028                     ?_sprintf:
   246                           	opt stack 0
   247  000028                     sprintf@sp:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x27
   251  000028                     	ds	2
   252  00002A                     sprintf@f:
   253                           	opt stack 0
   254                           
   255                           ; 2 bytes @ 0x29
   256  00002A                     	ds	6
   257  000030                     ??_sprintf:
   258                           
   259                           ; 1 bytes @ 0x2F
   260  000030                     	ds	4
   261  000034                     sprintf@flag:
   262                           	opt stack 0
   263                           
   264                           ; 1 bytes @ 0x33
   265  000034                     	ds	1
   266  000035                     sprintf@prec:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x34
   270  000035                     	ds	2
   271  000037                     sprintf@val:
   272                           	opt stack 0
   273                           
   274                           ; 4 bytes @ 0x36
   275  000037                     	ds	4
   276  00003B                     sprintf@ap:
   277                           	opt stack 0
   278                           
   279                           ; 2 bytes @ 0x3A
   280  00003B                     	ds	2
   281  00003D                     sprintf@width:
   282                           	opt stack 0
   283                           
   284                           ; 2 bytes @ 0x3C
   285  00003D                     	ds	2
   286  00003F                     sprintf@c:
   287                           	opt stack 0
   288                           
   289                           ; 1 bytes @ 0x3E
   290  00003F                     	ds	1
   291  000040                     Display_ExibeNumero@Numero:
   292                           	opt stack 0
   293                           
   294                           ; 4 bytes @ 0x3F
   295  000040                     	ds	4
   296  000044                     ??_Display_ExibeNumero:
   297                           
   298                           ; 1 bytes @ 0x43
   299  000044                     	ds	1
   300  000045                     Display_ExibeNumero@Contagem:
   301                           	opt stack 0
   302                           
   303                           ; 6 bytes @ 0x44
   304  000045                     	ds	6
   305  00004B                     Display_ExibeNumero@i:
   306                           	opt stack 0
   307                           
   308                           ; 1 bytes @ 0x4A
   309  00004B                     	ds	1
   310  00004C                     tblptru	equ	0xFF8
   311                           postinc0	equ	0xFEE
   312                           wreg	equ	0xFE8
   313                           
   314                           ; 1 bytes @ 0x4B
   315 ;;
   316 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   317 ;;
   318 ;; *************** function _main *****************
   319 ;; Defined at:
   320 ;;		line 40 in file "App.c"
   321 ;; Parameters:    Size  Location     Type
   322 ;;  argc            2    0[BANK0 ] int 
   323 ;;  argv            3    2[BANK0 ] PTR PTR unsigned char 
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  2    0[BANK0 ] int 
   328 ;; Registers used:
   329 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   330 ;; Tracked objects:
   331 ;;		On entry : 0/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   335 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   338 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   339 ;;Total ram usage:        5 bytes
   340 ;; Hardware stack levels required when called:    7
   341 ;; This function calls:
   342 ;;		_Display_ExibeNumero
   343 ;;		_Display_InicializaVarredura
   344 ;;		_Oscilador_Inicializacao
   345 ;;		_Timer0_Inicializacao
   346 ;; This function is called by:
   347 ;;		Startup code after reset
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           	psect	text0
   352  0014FE                     __ptext0:
   353                           	opt stack 0
   354  0014FE                     _main:
   355                           	opt stack 24
   356                           
   357                           ;App.c: 42: Oscilador_Inicializacao();
   358                           
   359                           ;incstack = 0
   360  0014FE  EC86  F00B         	call	_Oscilador_Inicializacao	;wreg free
   361                           
   362                           ;App.c: 43: Display_InicializaVarredura();
   363  001502  ECE7  F00A         	call	_Display_InicializaVarredura	;wreg free
   364                           
   365                           ;App.c: 44: Timer0_Inicializacao();
   366  001506  EC3F  F00B         	call	_Timer0_Inicializacao	;wreg free
   367                           
   368                           ;App.c: 46: Contador = 0;
   369  00150A  0E00               	movlw	0
   370  00150C  0100               	movlb	0	; () banked
   371  00150E  6F69               	movwf	_Contador& (0+255),b
   372  001510  0E00               	movlw	0
   373  001512  6F6A               	movwf	(_Contador+1)& (0+255),b
   374  001514  0E00               	movlw	0
   375  001516  6F6B               	movwf	(_Contador+2)& (0+255),b
   376  001518  0E00               	movlw	0
   377  00151A  6F6C               	movwf	(_Contador+3)& (0+255),b
   378                           
   379                           ; BSR set to: 0
   380                           ;App.c: 47: Varredura.Opcoes.OmiteZeros = 1;
   381  00151C  0100               	movlb	0	; () banked
   382  00151E  8168               	bsf	(_Varredura+8)& (0+255),0,b
   383                           
   384                           ; BSR set to: 0
   385                           ;App.c: 48: Varredura.Opcoes.ExibePonto5 = 1;
   386  001520  0100               	movlb	0	; () banked
   387  001522  8B68               	bsf	(_Varredura+8)& (0+255),5,b
   388                           
   389                           ; BSR set to: 0
   390                           ;App.c: 49: Display_ExibeNumero(Contador);
   391  001524  C069  F040         	movff	_Contador,Display_ExibeNumero@Numero
   392  001528  C06A  F041         	movff	_Contador+1,Display_ExibeNumero@Numero+1
   393  00152C  C06B  F042         	movff	_Contador+2,Display_ExibeNumero@Numero+2
   394  001530  C06C  F043         	movff	_Contador+3,Display_ExibeNumero@Numero+3
   395  001534  EC58  F009         	call	_Display_ExibeNumero	;wreg free
   396                           
   397                           ;App.c: 51: INTCONbits.GIEH = 1;
   398  001538  8EF2               	bsf	intcon,7,c	;volatile
   399  00153A                     l1469:
   400                           
   401                           ;App.c: 54: {
   402                           ;App.c: 55: if(TMR0_Eventos.EventosDe100ms.Contador == 1)
   403  00153A  0100               	movlb	0	; () banked
   404  00153C  A16E               	btfss	(_TMR0_Eventos+1)& (0+255),0,b
   405  00153E  D7FD               	goto	l1469
   406                           
   407                           ; BSR set to: 0
   408                           ;App.c: 56: {
   409                           ;App.c: 57: TMR0_Eventos.EventosDe100ms.Contador = 0;
   410  001540  0100               	movlb	0	; () banked
   411  001542  916E               	bcf	(_TMR0_Eventos+1)& (0+255),0,b
   412                           
   413                           ; BSR set to: 0
   414                           ;App.c: 59: Contador++;
   415  001544  0E01               	movlw	1
   416  001546  0100               	movlb	0	; () banked
   417  001548  2769               	addwf	_Contador& (0+255),f,b
   418  00154A  0E00               	movlw	0
   419  00154C  236A               	addwfc	(_Contador+1)& (0+255),f,b
   420  00154E  236B               	addwfc	(_Contador+2)& (0+255),f,b
   421  001550  236C               	addwfc	(_Contador+3)& (0+255),f,b
   422                           
   423                           ; BSR set to: 0
   424                           ;App.c: 60: Display_ExibeNumero(Contador);
   425  001552  C069  F040         	movff	_Contador,Display_ExibeNumero@Numero
   426  001556  C06A  F041         	movff	_Contador+1,Display_ExibeNumero@Numero+1
   427  00155A  C06B  F042         	movff	_Contador+2,Display_ExibeNumero@Numero+2
   428  00155E  C06C  F043         	movff	_Contador+3,Display_ExibeNumero@Numero+3
   429  001562  EC58  F009         	call	_Display_ExibeNumero	;wreg free
   430  001566  D7E9               	goto	l1469
   431  001568                     __end_of_main:
   432                           	opt stack 0
   433                           tblptru	equ	0xFF8
   434                           intcon	equ	0xFF2
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           
   438 ;; *************** function _Timer0_Inicializacao *****************
   439 ;; Defined at:
   440 ;;		line 71 in file "App.c"
   441 ;; Parameters:    Size  Location     Type
   442 ;;		None
   443 ;; Auto vars:     Size  Location     Type
   444 ;;		None
   445 ;; Return value:  Size  Location     Type
   446 ;;                  1    wreg      void 
   447 ;; Registers used:
   448 ;;		wreg, status,2, cstack
   449 ;; Tracked objects:
   450 ;;		On entry : 0/0
   451 ;;		On exit  : 0/0
   452 ;;		Unchanged: 0/0
   453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   454 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   455 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   457 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   458 ;;Total ram usage:        0 bytes
   459 ;; Hardware stack levels used:    1
   460 ;; Hardware stack levels required when called:    5
   461 ;; This function calls:
   462 ;;		_Timer0_Recarga
   463 ;; This function is called by:
   464 ;;		_main
   465 ;; This function uses a non-reentrant model
   466 ;;
   467                           
   468                           	psect	text1
   469  00167E                     __ptext1:
   470                           	opt stack 0
   471  00167E                     _Timer0_Inicializacao:
   472                           	opt stack 25
   473                           
   474                           ;App.c: 73: T0CON = 0;
   475                           
   476                           ;incstack = 0
   477  00167E  0E00               	movlw	0
   478  001680  6ED5               	movwf	4053,c	;volatile
   479                           
   480                           ;App.c: 74: T0CONbits.PSA = 1;
   481  001682  86D5               	bsf	4053,3,c	;volatile
   482                           
   483                           ;App.c: 75: Timer0_Recarga();
   484  001684  EC72  F00B         	call	_Timer0_Recarga	;wreg free
   485                           
   486                           ;App.c: 76: INTCONbits.T0IE = 1;
   487  001688  8AF2               	bsf	intcon,5,c	;volatile
   488                           
   489                           ;App.c: 77: TMR0_Eventos.Temporizador100ms = 100;
   490  00168A  0E64               	movlw	100
   491  00168C  0100               	movlb	0	; () banked
   492  00168E  6F6D               	movwf	_TMR0_Eventos& (0+255),b
   493                           
   494                           ; BSR set to: 0
   495                           ;App.c: 78: TMR0_Eventos.EventosDe100ms.Valor = 0;
   496  001690  0E00               	movlw	0
   497  001692  0100               	movlb	0	; () banked
   498  001694  6F6E               	movwf	(_TMR0_Eventos+1)& (0+255),b
   499                           
   500                           ; BSR set to: 0
   501                           ;App.c: 79: T0CONbits.TMR0ON = 1;
   502  001696  8ED5               	bsf	4053,7,c	;volatile
   503                           
   504                           ; BSR set to: 0
   505  001698  0012               	return		;funcret
   506  00169A                     __end_of_Timer0_Inicializacao:
   507                           	opt stack 0
   508                           tblptru	equ	0xFF8
   509                           intcon	equ	0xFF2
   510                           postinc0	equ	0xFEE
   511                           wreg	equ	0xFE8
   512                           
   513 ;; *************** function _Timer0_Recarga *****************
   514 ;; Defined at:
   515 ;;		line 90 in file "App.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;		None
   518 ;; Auto vars:     Size  Location     Type
   519 ;;  ValorDeCarga    2   17[COMRAM] struct .
   520 ;; Return value:  Size  Location     Type
   521 ;;                  1    wreg      void 
   522 ;; Registers used:
   523 ;;		wreg, status,2
   524 ;; Tracked objects:
   525 ;;		On entry : 0/0
   526 ;;		On exit  : 0/0
   527 ;;		Unchanged: 0/0
   528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   530 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   533 ;;Total ram usage:        2 bytes
   534 ;; Hardware stack levels used:    1
   535 ;; Hardware stack levels required when called:    4
   536 ;; This function calls:
   537 ;;		Nothing
   538 ;; This function is called by:
   539 ;;		_Timer0_Inicializacao
   540 ;; This function uses a non-reentrant model
   541 ;;
   542                           
   543                           	psect	text2
   544  0016E4                     __ptext2:
   545                           	opt stack 0
   546  0016E4                     _Timer0_Recarga:
   547                           	opt stack 25
   548                           
   549                           ;App.c: 92: Uint16 ValorDeCarga;
   550                           ;App.c: 94: INTCONbits.TMR0IF = 0;
   551                           
   552                           ; BSR set to: 0
   553                           ;incstack = 0
   554  0016E4  94F2               	bcf	intcon,2,c	;volatile
   555                           
   556                           ;App.c: 96: ValorDeCarga.valor = 57536;
   557  0016E6  0EE0               	movlw	224
   558  0016E8  6E13               	movwf	Timer0_Recarga@ValorDeCarga+1,c
   559  0016EA  0EC0               	movlw	192
   560  0016EC  6E12               	movwf	Timer0_Recarga@ValorDeCarga,c
   561                           
   562                           ;App.c: 98: TMR0H = ValorDeCarga.bytes.byte1;
   563  0016EE  C013  FFD7         	movff	Timer0_Recarga@ValorDeCarga+1,4055	;volatile
   564                           
   565                           ;App.c: 99: TMR0L = ValorDeCarga.bytes.byte0;
   566  0016F2  C012  FFD6         	movff	Timer0_Recarga@ValorDeCarga,4054	;volatile
   567  0016F6  0012               	return		;funcret
   568  0016F8                     __end_of_Timer0_Recarga:
   569                           	opt stack 0
   570                           tblptru	equ	0xFF8
   571                           intcon	equ	0xFF2
   572                           postinc0	equ	0xFEE
   573                           wreg	equ	0xFE8
   574                           
   575 ;; *************** function _Oscilador_Inicializacao *****************
   576 ;; Defined at:
   577 ;;		line 36 in file "Oscilador.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      void 
   584 ;; Registers used:
   585 ;;		wreg, status,2
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels used:    1
   597 ;; Hardware stack levels required when called:    4
   598 ;; This function calls:
   599 ;;		Nothing
   600 ;; This function is called by:
   601 ;;		_main
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text3
   606  00170C                     __ptext3:
   607                           	opt stack 0
   608  00170C                     _Oscilador_Inicializacao:
   609                           	opt stack 26
   610                           
   611                           ;Oscilador.c: 38: OSCCONbits.SCS = 0;
   612                           
   613                           ;incstack = 0
   614  00170C  0EFC               	movlw	-4
   615  00170E  16D3               	andwf	4051,f,c	;volatile
   616                           
   617                           ;Oscilador.c: 43: OSCCONbits.IRCF = 6;
   618  001710  50D3               	movf	4051,w,c	;volatile
   619  001712  0B8F               	andlw	-113
   620  001714  0960               	iorlw	96
   621  001716  6ED3               	movwf	4051,c	;volatile
   622                           
   623                           ;Oscilador.c: 82: OSCCON2bits.PRISD = 0;
   624  001718  94D2               	bcf	4050,2,c	;volatile
   625                           
   626                           ;Oscilador.c: 88: OSCTUNEbits.PLLEN= 1;
   627  00171A  8C9B               	bsf	3995,6,c	;volatile
   628  00171C  0012               	return		;funcret
   629  00171E                     __end_of_Oscilador_Inicializacao:
   630                           	opt stack 0
   631                           tblptru	equ	0xFF8
   632                           intcon	equ	0xFF2
   633                           postinc0	equ	0xFEE
   634                           wreg	equ	0xFE8
   635                           
   636 ;; *************** function _Display_InicializaVarredura *****************
   637 ;; Defined at:
   638 ;;		line 102 in file "Base_1.c"
   639 ;; Parameters:    Size  Location     Type
   640 ;;		None
   641 ;; Auto vars:     Size  Location     Type
   642 ;;		None
   643 ;; Return value:  Size  Location     Type
   644 ;;                  1    wreg      void 
   645 ;; Registers used:
   646 ;;		wreg, status,2, cstack
   647 ;; Tracked objects:
   648 ;;		On entry : 0/0
   649 ;;		On exit  : 0/0
   650 ;;		Unchanged: 0/0
   651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   656 ;;Total ram usage:        0 bytes
   657 ;; Hardware stack levels used:    1
   658 ;; Hardware stack levels required when called:    6
   659 ;; This function calls:
   660 ;;		_Latch_Inicializacao
   661 ;; This function is called by:
   662 ;;		_main
   663 ;; This function uses a non-reentrant model
   664 ;;
   665                           
   666                           	psect	text4
   667  0015CE                     __ptext4:
   668                           	opt stack 0
   669  0015CE                     _Display_InicializaVarredura:
   670                           	opt stack 24
   671                           
   672                           ;Base_1.c: 104: Latch_Inicializacao (0);
   673                           
   674                           ;incstack = 0
   675  0015CE  0E00               	movlw	0
   676  0015D0  EC06  F00B         	call	_Latch_Inicializacao
   677                           
   678                           ;Base_1.c: 106: Varredura.Sequencia = 0;
   679  0015D4  0E00               	movlw	0
   680  0015D6  0100               	movlb	0	; () banked
   681  0015D8  6F60               	movwf	_Varredura& (0+255),b
   682                           
   683                           ; BSR set to: 0
   684                           ;Base_1.c: 107: Varredura.Buffer.Digito1 = 0;
   685  0015DA  0E00               	movlw	0
   686  0015DC  0100               	movlb	0	; () banked
   687  0015DE  6F61               	movwf	(_Varredura+1)& (0+255),b
   688                           
   689                           ; BSR set to: 0
   690                           ;Base_1.c: 108: Varredura.Buffer.Digito2 = 0;
   691  0015E0  0E00               	movlw	0
   692  0015E2  0100               	movlb	0	; () banked
   693  0015E4  6F62               	movwf	(_Varredura+2)& (0+255),b
   694                           
   695                           ; BSR set to: 0
   696                           ;Base_1.c: 109: Varredura.Buffer.Digito3 = 0;
   697  0015E6  0E00               	movlw	0
   698  0015E8  0100               	movlb	0	; () banked
   699  0015EA  6F63               	movwf	(_Varredura+3)& (0+255),b
   700                           
   701                           ; BSR set to: 0
   702                           ;Base_1.c: 110: Varredura.Buffer.Digito4 = 0;
   703  0015EC  0E00               	movlw	0
   704  0015EE  0100               	movlb	0	; () banked
   705  0015F0  6F64               	movwf	(_Varredura+4)& (0+255),b
   706                           
   707                           ; BSR set to: 0
   708                           ;Base_1.c: 111: Varredura.Buffer.Digito5 = 0;
   709  0015F2  0E00               	movlw	0
   710  0015F4  0100               	movlb	0	; () banked
   711  0015F6  6F65               	movwf	(_Varredura+5)& (0+255),b
   712                           
   713                           ; BSR set to: 0
   714                           ;Base_1.c: 112: Varredura.Buffer.Digito6 = 0;
   715  0015F8  0E00               	movlw	0
   716  0015FA  0100               	movlb	0	; () banked
   717  0015FC  6F66               	movwf	(_Varredura+6)& (0+255),b
   718                           
   719                           ; BSR set to: 0
   720                           ;Base_1.c: 113: Varredura.Buffer.Leds = 0;
   721  0015FE  0E00               	movlw	0
   722  001600  0100               	movlb	0	; () banked
   723  001602  6F67               	movwf	(_Varredura+7)& (0+255),b
   724                           
   725                           ; BSR set to: 0
   726                           ;Base_1.c: 115: Varredura.Opcoes.valor = 0;
   727  001604  0E00               	movlw	0
   728  001606  0100               	movlb	0	; () banked
   729  001608  6F68               	movwf	(_Varredura+8)& (0+255),b
   730                           
   731                           ; BSR set to: 0
   732  00160A  0012               	return		;funcret
   733  00160C                     __end_of_Display_InicializaVarredura:
   734                           	opt stack 0
   735                           tblptru	equ	0xFF8
   736                           intcon	equ	0xFF2
   737                           postinc0	equ	0xFEE
   738                           wreg	equ	0xFE8
   739                           
   740 ;; *************** function _Latch_Inicializacao *****************
   741 ;; Defined at:
   742 ;;		line 29 in file "Base_1.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  Valor           1    wreg     unsigned char 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  Valor           1   18[COMRAM] unsigned char 
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, status,2, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   757 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   759 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   760 ;;Total ram usage:        1 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:    5
   763 ;; This function calls:
   764 ;;		_Latch_EscreveValor
   765 ;; This function is called by:
   766 ;;		_Display_InicializaVarredura
   767 ;;		_Display_Inicializacao
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           
   771                           	psect	text5
   772  00160C                     __ptext5:
   773                           	opt stack 0
   774  00160C                     _Latch_Inicializacao:
   775                           	opt stack 24
   776                           
   777                           ; BSR set to: 0
   778                           ;incstack = 0
   779                           ;Latch_Inicializacao@Valor stored from wreg
   780  00160C  6E13               	movwf	Latch_Inicializacao@Valor,c
   781                           
   782                           ;Base_1.c: 33: LATDbits.LATD3 = 1;
   783  00160E  868C               	bsf	3980,3,c	;volatile
   784                           
   785                           ;Base_1.c: 34: TRISDbits.TRISD3 = 0;
   786  001610  9695               	bcf	3989,3,c	;volatile
   787                           
   788                           ;Base_1.c: 35: ANSELDbits.ANSD3 = 0;
   789  001612  010F               	movlb	15	; () banked
   790  001614  973B               	bcf	59,3,b	;volatile
   791                           
   792                           ;Base_1.c: 39: LATDbits.LATD2 = 0;
   793  001616  948C               	bcf	3980,2,c	;volatile
   794                           
   795                           ;Base_1.c: 40: TRISDbits.TRISD2 = 0;
   796  001618  9495               	bcf	3989,2,c	;volatile
   797                           
   798                           ;Base_1.c: 41: ANSELDbits.ANSD2 = 0;
   799  00161A  010F               	movlb	15	; () banked
   800  00161C  953B               	bcf	59,2,b	;volatile
   801                           
   802                           ; BSR set to: 15
   803                           ;Base_1.c: 44: LATB = 0;
   804  00161E  0E00               	movlw	0
   805  001620  6E8A               	movwf	3978,c	;volatile
   806                           
   807                           ;Base_1.c: 45: TRISB = 0;
   808  001622  0E00               	movlw	0
   809  001624  6E93               	movwf	3987,c	;volatile
   810                           
   811                           ;Base_1.c: 46: ANSELB = 0;
   812  001626  0E00               	movlw	0
   813  001628  010F               	movlb	15	; () banked
   814  00162A  6F39               	movwf	57,b	;volatile
   815                           
   816                           ; BSR set to: 15
   817                           ;Base_1.c: 48: Latch_EscreveValor(Valor);
   818  00162C  5013               	movf	Latch_Inicializacao@Valor,w,c
   819  00162E  EC5A  F00B         	call	_Latch_EscreveValor
   820                           
   821                           ;Base_1.c: 50: LATB = 0;
   822  001632  0E00               	movlw	0
   823  001634  6E8A               	movwf	3978,c	;volatile
   824                           
   825                           ;Base_1.c: 51: LATDbits.LATD3 = 0;
   826  001636  968C               	bcf	3980,3,c	;volatile
   827  001638  0012               	return		;funcret
   828  00163A                     __end_of_Latch_Inicializacao:
   829                           	opt stack 0
   830                           tblptru	equ	0xFF8
   831                           intcon	equ	0xFF2
   832                           postinc0	equ	0xFEE
   833                           wreg	equ	0xFE8
   834                           
   835 ;; *************** function _Latch_EscreveValor *****************
   836 ;; Defined at:
   837 ;;		line 58 in file "Base_1.c"
   838 ;; Parameters:    Size  Location     Type
   839 ;;  Valor           1    wreg     unsigned char 
   840 ;; Auto vars:     Size  Location     Type
   841 ;;  Valor           1   17[COMRAM] unsigned char 
   842 ;; Return value:  Size  Location     Type
   843 ;;                  1    wreg      void 
   844 ;; Registers used:
   845 ;;		wreg, status,2
   846 ;; Tracked objects:
   847 ;;		On entry : 0/0
   848 ;;		On exit  : 0/0
   849 ;;		Unchanged: 0/0
   850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   852 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   854 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   855 ;;Total ram usage:        1 bytes
   856 ;; Hardware stack levels used:    1
   857 ;; Hardware stack levels required when called:    4
   858 ;; This function calls:
   859 ;;		Nothing
   860 ;; This function is called by:
   861 ;;		_Latch_Inicializacao
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           	psect	text6
   866  0016B4                     __ptext6:
   867                           	opt stack 0
   868  0016B4                     _Latch_EscreveValor:
   869                           	opt stack 24
   870                           
   871                           ;incstack = 0
   872                           ;Latch_EscreveValor@Valor stored from wreg
   873  0016B4  6E12               	movwf	Latch_EscreveValor@Valor,c
   874                           
   875                           ;Base_1.c: 60: LATB = Valor;
   876  0016B6  C012  FF8A         	movff	Latch_EscreveValor@Valor,3978	;volatile
   877                           
   878                           ;Base_1.c: 63: LATDbits.LATD2 = 1;
   879  0016BA  848C               	bsf	3980,2,c	;volatile
   880                           
   881                           ;Base_1.c: 64: __nop();
   882  0016BC  F000               	nop	
   883                           
   884                           ;Base_1.c: 65: __nop();
   885  0016BE  F000               	nop	
   886                           
   887                           ;Base_1.c: 66: __nop();
   888  0016C0  F000               	nop	
   889                           
   890                           ;Base_1.c: 67: __nop();
   891  0016C2  F000               	nop	
   892                           
   893                           ;Base_1.c: 68: LATDbits.LATD2 = 0;
   894  0016C4  948C               	bcf	3980,2,c	;volatile
   895                           
   896                           ;Base_1.c: 70: LATB = 0;
   897  0016C6  0E00               	movlw	0
   898  0016C8  6E8A               	movwf	3978,c	;volatile
   899  0016CA  0012               	return		;funcret
   900  0016CC                     __end_of_Latch_EscreveValor:
   901                           	opt stack 0
   902                           tblptru	equ	0xFF8
   903                           intcon	equ	0xFF2
   904                           postinc0	equ	0xFEE
   905                           wreg	equ	0xFE8
   906                           
   907 ;; *************** function _Display_ExibeNumero *****************
   908 ;; Defined at:
   909 ;;		line 155 in file "Base_1.c"
   910 ;; Parameters:    Size  Location     Type
   911 ;;  Numero          4   63[COMRAM] unsigned long 
   912 ;; Auto vars:     Size  Location     Type
   913 ;;  Contagem        6   68[COMRAM] unsigned char [6]
   914 ;;  i               1   74[COMRAM] unsigned char 
   915 ;; Return value:  Size  Location     Type
   916 ;;                  1    wreg      void 
   917 ;; Registers used:
   918 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   925 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   926 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   927 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   928 ;;Total ram usage:       12 bytes
   929 ;; Hardware stack levels used:    1
   930 ;; Hardware stack levels required when called:    6
   931 ;; This function calls:
   932 ;;		_sprintf
   933 ;; This function is called by:
   934 ;;		_main
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           	psect	text7
   939  0012B0                     __ptext7:
   940                           	opt stack 0
   941  0012B0                     _Display_ExibeNumero:
   942                           	opt stack 24
   943                           
   944                           ;Base_1.c: 157: Uchar Contagem[6];
   945                           ;Base_1.c: 158: Uchar i;
   946                           ;Base_1.c: 160: sprintf (&Contagem[0],"%6lu",Numero);
   947                           
   948                           ;incstack = 0
   949  0012B0  0E45               	movlw	low Display_ExibeNumero@Contagem
   950  0012B2  6E28               	movwf	sprintf@sp,c
   951  0012B4  0E00               	movlw	high Display_ExibeNumero@Contagem
   952  0012B6  6E29               	movwf	sprintf@sp+1,c
   953  0012B8  0E33               	movlw	low STR_1
   954  0012BA  6E2A               	movwf	sprintf@f,c
   955  0012BC  0E10               	movlw	high STR_1
   956  0012BE  6E2B               	movwf	sprintf@f+1,c
   957  0012C0  C040  F02C         	movff	Display_ExibeNumero@Numero,?_sprintf+4
   958  0012C4  C041  F02D         	movff	Display_ExibeNumero@Numero+1,?_sprintf+5
   959  0012C8  C042  F02E         	movff	Display_ExibeNumero@Numero+2,?_sprintf+6
   960  0012CC  C043  F02F         	movff	Display_ExibeNumero@Numero+3,?_sprintf+7
   961  0012D0  EC1D  F008         	call	_sprintf	;wreg free
   962                           
   963                           ;Base_1.c: 162: for (i = 0; i < 6;i++)
   964  0012D4  0E00               	movlw	0
   965  0012D6  6E4B               	movwf	Display_ExibeNumero@i,c
   966  0012D8                     l1381:
   967  0012D8  0E05               	movlw	5
   968  0012DA  644B               	cpfsgt	Display_ExibeNumero@i,c
   969  0012DC  D001               	goto	l112
   970  0012DE  D05B               	goto	l113
   971  0012E0                     l112:
   972                           
   973                           ;Base_1.c: 163: {
   974                           ;Base_1.c: 164: if (Varredura.Opcoes.OmiteZeros == 1)
   975  0012E0  0100               	movlb	0	; () banked
   976  0012E2  A168               	btfss	(_Varredura+8)& (0+255),0,b
   977  0012E4  D034               	goto	l1393
   978                           
   979                           ; BSR set to: 0
   980                           ;Base_1.c: 165: {
   981                           ;Base_1.c: 166: if (Contagem[i]== ' ')
   982  0012E6  504B               	movf	Display_ExibeNumero@i,w,c
   983  0012E8  0D01               	mullw	1
   984  0012EA  0E45               	movlw	low Display_ExibeNumero@Contagem
   985  0012EC  24F3               	addwf	prodl,w,c
   986  0012EE  6ED9               	movwf	fsr2l,c
   987  0012F0  0E00               	movlw	high Display_ExibeNumero@Contagem
   988  0012F2  20F4               	addwfc	prodh,w,c
   989  0012F4  6EDA               	movwf	fsr2h,c
   990  0012F6  0E20               	movlw	32
   991  0012F8  18DE               	xorwf	postinc2,w,c
   992  0012FA  A4D8               	btfss	status,2,c
   993  0012FC  D03F               	goto	l1397
   994                           
   995                           ; BSR set to: 0
   996                           ;Base_1.c: 167: {
   997                           ;Base_1.c: 168: Varredura.Buffer.Digitos[i] = 0b00000000;
   998  0012FE  504B               	movf	Display_ExibeNumero@i,w,c
   999  001300  0D01               	mullw	1
  1000  001302  0E61               	movlw	low (_Varredura+1)
  1001  001304  24F3               	addwf	prodl,w,c
  1002  001306  6ED9               	movwf	fsr2l,c
  1003  001308  0E00               	movlw	high (_Varredura+1)
  1004  00130A  20F4               	addwfc	prodh,w,c
  1005  00130C  6EDA               	movwf	fsr2h,c
  1006  00130E  0E00               	movlw	0
  1007  001310  D033               	goto	L1
  1008  001312                     l1391:
  1009                           
  1010                           ; BSR set to: 0
  1011                           ;Base_1.c: 173: Varredura.Buffer.Digitos[i] = Converte_Bcd_7seg[Contagem[i]];
  1012  001312  504B               	movf	Display_ExibeNumero@i,w,c
  1013  001314  0D01               	mullw	1
  1014  001316  0E45               	movlw	low Display_ExibeNumero@Contagem
  1015  001318  24F3               	addwf	prodl,w,c
  1016  00131A  6ED9               	movwf	fsr2l,c
  1017  00131C  0E00               	movlw	high Display_ExibeNumero@Contagem
  1018  00131E  20F4               	addwfc	prodh,w,c
  1019  001320  6EDA               	movwf	fsr2h,c
  1020  001322  50DF               	movf	indf2,w,c
  1021  001324  6E44               	movwf	??_Display_ExibeNumero& (0+255),c
  1022  001326  5044               	movf	??_Display_ExibeNumero,w,c
  1023  001328  0D01               	mullw	1
  1024  00132A  0E29               	movlw	low _Converte_Bcd_7seg
  1025  00132C  24F3               	addwf	prodl,w,c
  1026  00132E  6EF6               	movwf	tblptrl,c
  1027  001330  0E10               	movlw	high _Converte_Bcd_7seg
  1028  001332  20F4               	addwfc	prodh,w,c
  1029  001334  6EF7               	movwf	tblptrh,c
  1030  001336                     	if	0	;There are less than 3 active tblptr bytes
  1031  001336                     	endif
  1032  001336  504B               	movf	Display_ExibeNumero@i,w,c
  1033  001338  0D01               	mullw	1
  1034  00133A  0E61               	movlw	low (_Varredura+1)
  1035  00133C  24F3               	addwf	prodl,w,c
  1036  00133E  6ED9               	movwf	fsr2l,c
  1037  001340  0E00               	movlw	high (_Varredura+1)
  1038  001342  20F4               	addwfc	prodh,w,c
  1039  001344  6EDA               	movwf	fsr2h,c
  1040  001346  0008               	tblrd		*
  1041  001348  CFF5 FFDF          	movff	tablat,indf2
  1042                           
  1043                           ; BSR set to: 0
  1044                           ;Base_1.c: 174: }
  1045                           ;Base_1.c: 175: }
  1046  00134C  D022               	goto	l1401
  1047  00134E                     l1393:
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;Base_1.c: 176: else
  1051                           ;Base_1.c: 177: {
  1052                           ;Base_1.c: 178: if (Contagem[i]== ' ')
  1053  00134E  504B               	movf	Display_ExibeNumero@i,w,c
  1054  001350  0D01               	mullw	1
  1055  001352  0E45               	movlw	low Display_ExibeNumero@Contagem
  1056  001354  24F3               	addwf	prodl,w,c
  1057  001356  6ED9               	movwf	fsr2l,c
  1058  001358  0E00               	movlw	high Display_ExibeNumero@Contagem
  1059  00135A  20F4               	addwfc	prodh,w,c
  1060  00135C  6EDA               	movwf	fsr2h,c
  1061  00135E  0E20               	movlw	32
  1062  001360  18DE               	xorwf	postinc2,w,c
  1063  001362  A4D8               	btfss	status,2,c
  1064  001364  D00B               	goto	l1397
  1065                           
  1066                           ; BSR set to: 0
  1067                           ;Base_1.c: 179: {
  1068                           ;Base_1.c: 180: Varredura.Buffer.Digitos[i] = 0b00111111;
  1069  001366  504B               	movf	Display_ExibeNumero@i,w,c
  1070  001368  0D01               	mullw	1
  1071  00136A  0E61               	movlw	low (_Varredura+1)
  1072  00136C  24F3               	addwf	prodl,w,c
  1073  00136E  6ED9               	movwf	fsr2l,c
  1074  001370  0E00               	movlw	high (_Varredura+1)
  1075  001372  20F4               	addwfc	prodh,w,c
  1076  001374  6EDA               	movwf	fsr2h,c
  1077  001376  0E3F               	movlw	63
  1078  001378                     L1:
  1079  001378  6EDF               	movwf	indf2,c
  1080                           
  1081                           ;Base_1.c: 181: }
  1082  00137A  D00B               	goto	l1401
  1083  00137C                     l1397:
  1084                           
  1085                           ; BSR set to: 0
  1086                           ;Base_1.c: 182: else
  1087                           ;Base_1.c: 183: {
  1088                           ;Base_1.c: 184: Contagem[i] -= 0x30;
  1089  00137C  504B               	movf	Display_ExibeNumero@i,w,c
  1090  00137E  0D01               	mullw	1
  1091  001380  0E45               	movlw	low Display_ExibeNumero@Contagem
  1092  001382  24F3               	addwf	prodl,w,c
  1093  001384  6ED9               	movwf	fsr2l,c
  1094  001386  0E00               	movlw	high Display_ExibeNumero@Contagem
  1095  001388  20F4               	addwfc	prodh,w,c
  1096  00138A  6EDA               	movwf	fsr2h,c
  1097  00138C  0E30               	movlw	48
  1098  00138E  5EDF               	subwf	indf2,f,c
  1099  001390  D7C0               	goto	l1391
  1100  001392                     l1401:
  1101                           
  1102                           ; BSR set to: 0
  1103  001392  2A4B               	incf	Display_ExibeNumero@i,f,c
  1104  001394  D7A1               	goto	l1381
  1105  001396                     l113:
  1106                           
  1107                           ;Base_1.c: 186: }
  1108                           ;Base_1.c: 187: }
  1109                           ;Base_1.c: 188: }
  1110                           ;Base_1.c: 190: if (Varredura.Opcoes.ExibePonto1 == 1)
  1111  001396  0100               	movlb	0	; () banked
  1112  001398  A368               	btfss	(_Varredura+8)& (0+255),1,b
  1113  00139A  D002               	goto	l1407
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;Base_1.c: 191: {
  1117                           ;Base_1.c: 192: Varredura.Buffer.Digito1 |= 0x80;
  1118  00139C  0100               	movlb	0	; () banked
  1119  00139E  8F61               	bsf	(_Varredura+1)& (0+255),7,b
  1120  0013A0                     l1407:
  1121                           
  1122                           ; BSR set to: 0
  1123                           ;Base_1.c: 193: }
  1124                           ;Base_1.c: 194: if (Varredura.Opcoes.ExibePonto2 == 1)
  1125  0013A0  0100               	movlb	0	; () banked
  1126  0013A2  A568               	btfss	(_Varredura+8)& (0+255),2,b
  1127  0013A4  D002               	goto	l1411
  1128                           
  1129                           ; BSR set to: 0
  1130                           ;Base_1.c: 195: {
  1131                           ;Base_1.c: 196: Varredura.Buffer.Digito2 |= 0x80;
  1132  0013A6  0100               	movlb	0	; () banked
  1133  0013A8  8F62               	bsf	(_Varredura+2)& (0+255),7,b
  1134  0013AA                     l1411:
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;Base_1.c: 197: }
  1138                           ;Base_1.c: 198: if (Varredura.Opcoes.ExibePonto3 == 1)
  1139  0013AA  0100               	movlb	0	; () banked
  1140  0013AC  A768               	btfss	(_Varredura+8)& (0+255),3,b
  1141  0013AE  D002               	goto	l1415
  1142                           
  1143                           ; BSR set to: 0
  1144                           ;Base_1.c: 199: {
  1145                           ;Base_1.c: 200: Varredura.Buffer.Digito3 |= 0x80;
  1146  0013B0  0100               	movlb	0	; () banked
  1147  0013B2  8F63               	bsf	(_Varredura+3)& (0+255),7,b
  1148  0013B4                     l1415:
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;Base_1.c: 201: }
  1152                           ;Base_1.c: 202: if (Varredura.Opcoes.ExibePonto4 == 1)
  1153  0013B4  0100               	movlb	0	; () banked
  1154  0013B6  A968               	btfss	(_Varredura+8)& (0+255),4,b
  1155  0013B8  D002               	goto	l1419
  1156                           
  1157                           ; BSR set to: 0
  1158                           ;Base_1.c: 203: {
  1159                           ;Base_1.c: 204: Varredura.Buffer.Digito4 |= 0x80;
  1160  0013BA  0100               	movlb	0	; () banked
  1161  0013BC  8F64               	bsf	(_Varredura+4)& (0+255),7,b
  1162  0013BE                     l1419:
  1163                           
  1164                           ; BSR set to: 0
  1165                           ;Base_1.c: 205: }
  1166                           ;Base_1.c: 206: if (Varredura.Opcoes.ExibePonto5 == 1)
  1167  0013BE  0100               	movlb	0	; () banked
  1168  0013C0  AB68               	btfss	(_Varredura+8)& (0+255),5,b
  1169  0013C2  D002               	goto	l1423
  1170                           
  1171                           ; BSR set to: 0
  1172                           ;Base_1.c: 207: {
  1173                           ;Base_1.c: 208: Varredura.Buffer.Digito5 |= 0x80;
  1174  0013C4  0100               	movlb	0	; () banked
  1175  0013C6  8F65               	bsf	(_Varredura+5)& (0+255),7,b
  1176  0013C8                     l1423:
  1177                           
  1178                           ; BSR set to: 0
  1179                           ;Base_1.c: 209: }
  1180                           ;Base_1.c: 210: if (Varredura.Opcoes.ExibePonto6 == 1)
  1181  0013C8  0100               	movlb	0	; () banked
  1182  0013CA  AD68               	btfss	(_Varredura+8)& (0+255),6,b
  1183  0013CC  0012               	return	
  1184                           
  1185                           ; BSR set to: 0
  1186                           ;Base_1.c: 211: {
  1187                           ;Base_1.c: 212: Varredura.Buffer.Digito6 |= 0x80;
  1188  0013CE  0100               	movlb	0	; () banked
  1189  0013D0  8F66               	bsf	(_Varredura+6)& (0+255),7,b
  1190  0013D2  0012               	return	
  1191  0013D4                     __end_of_Display_ExibeNumero:
  1192                           	opt stack 0
  1193                           tblptru	equ	0xFF8
  1194                           tblptrh	equ	0xFF7
  1195                           tblptrl	equ	0xFF6
  1196                           tablat	equ	0xFF5
  1197                           prodh	equ	0xFF4
  1198                           prodl	equ	0xFF3
  1199                           intcon	equ	0xFF2
  1200                           postinc0	equ	0xFEE
  1201                           wreg	equ	0xFE8
  1202                           indf2	equ	0xFDF
  1203                           postinc2	equ	0xFDE
  1204                           fsr2h	equ	0xFDA
  1205                           fsr2l	equ	0xFD9
  1206                           status	equ	0xFD8
  1207                           
  1208 ;; *************** function _sprintf *****************
  1209 ;; Defined at:
  1210 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\doprnt.c"
  1211 ;; Parameters:    Size  Location     Type
  1212 ;;  sp              2   39[COMRAM] PTR unsigned char 
  1213 ;;		 -> Display_ExibeNumero@Contagem(6), 
  1214 ;;  f               2   41[COMRAM] PTR const unsigned char 
  1215 ;;		 -> STR_1(5), 
  1216 ;; Auto vars:     Size  Location     Type
  1217 ;;  val             4   54[COMRAM] unsigned long 
  1218 ;;  tmpval          4    0        struct .
  1219 ;;  cp              3    0        PTR const unsigned char 
  1220 ;;  width           2   60[COMRAM] int 
  1221 ;;  ap              2   58[COMRAM] PTR void [1]
  1222 ;;		 -> ?_sprintf(2), 
  1223 ;;  prec            2   52[COMRAM] int 
  1224 ;;  len             2    0        unsigned int 
  1225 ;;  c               1   62[COMRAM] char 
  1226 ;;  flag            1   51[COMRAM] unsigned char 
  1227 ;; Return value:  Size  Location     Type
  1228 ;;                  2   39[COMRAM] int 
  1229 ;; Registers used:
  1230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1236 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1237 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1238 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1239 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1240 ;;Total ram usage:       24 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    5
  1243 ;; This function calls:
  1244 ;;		___lldiv
  1245 ;;		___llmod
  1246 ;;		___wmul
  1247 ;;		_isdigit
  1248 ;; This function is called by:
  1249 ;;		_Display_ExibeNumero
  1250 ;; This function uses a non-reentrant model
  1251 ;;
  1252                           
  1253                           	psect	text8
  1254  00103A                     __ptext8:
  1255                           	opt stack 0
  1256  00103A                     _sprintf:
  1257                           	opt stack 24
  1258                           
  1259                           ;doprnt.c: 494: va_list ap;
  1260                           ;doprnt.c: 499: signed char c;
  1261                           ;doprnt.c: 501: int width;
  1262                           ;doprnt.c: 504: int prec;
  1263                           ;doprnt.c: 508: unsigned char flag;
  1264                           ;doprnt.c: 523: union {
  1265                           ;doprnt.c: 524: unsigned long vd;
  1266                           ;doprnt.c: 525: double integ;
  1267                           ;doprnt.c: 526: } tmpval;
  1268                           ;doprnt.c: 528: unsigned long val;
  1269                           ;doprnt.c: 529: unsigned len;
  1270                           ;doprnt.c: 530: const char * cp;
  1271                           ;doprnt.c: 533: *ap = __va_start();
  1272                           
  1273                           ; BSR set to: 0
  1274                           ;incstack = 0
  1275  00103A  0E2C               	movlw	low (?_sprintf+4)
  1276  00103C  6E3B               	movwf	sprintf@ap,c
  1277  00103E  0E00               	movlw	high (?_sprintf+4)
  1278  001040  6E3C               	movwf	sprintf@ap+1,c
  1279                           
  1280                           ;doprnt.c: 536: while(c = *f++) {
  1281  001042  D123               	goto	l1331
  1282  001044                     l1257:
  1283                           
  1284                           ;doprnt.c: 538: if(c != '%')
  1285  001044  0E25               	movlw	37
  1286  001046  183F               	xorwf	sprintf@c,w,c
  1287  001048  B4D8               	btfsc	status,2,c
  1288  00104A  D009               	goto	l1263
  1289                           
  1290                           ;doprnt.c: 540: {
  1291                           ;doprnt.c: 541: ((*sp++ = (c)));
  1292  00104C  C028  FFD9         	movff	sprintf@sp,fsr2l
  1293  001050  C029  FFDA         	movff	sprintf@sp+1,fsr2h
  1294  001054  C03F  FFDF         	movff	sprintf@c,indf2
  1295  001058  4A28               	infsnz	sprintf@sp,f,c
  1296  00105A  2A29               	incf	sprintf@sp+1,f,c
  1297                           
  1298                           ;doprnt.c: 542: continue;
  1299  00105C  D116               	goto	l1331
  1300  00105E                     l1263:
  1301                           
  1302                           ;doprnt.c: 543: }
  1303                           ;doprnt.c: 546: width = 0;
  1304  00105E  0E00               	movlw	0
  1305  001060  6E3E               	movwf	sprintf@width+1,c
  1306  001062  0E00               	movlw	0
  1307  001064  6E3D               	movwf	sprintf@width,c
  1308                           
  1309                           ;doprnt.c: 548: flag = 0;
  1310  001066  0E00               	movlw	0
  1311  001068  6E34               	movwf	sprintf@flag,c
  1312                           
  1313                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1314  00106A  C02A  FFF6         	movff	sprintf@f,tblptrl
  1315  00106E  C02B  FFF7         	movff	sprintf@f+1,tblptrh
  1316  001072                     	if	0	;tblptru may be non-zero
  1317  001072                     	endif
  1318  001072                     	if	0	;tblptru may be non-zero
  1319  001072                     	endif
  1320  001072  0008               	tblrd		*
  1321  001074  50F5               	movf	tablat,w,c
  1322  001076  EC30  F00B         	call	_isdigit
  1323  00107A  A0D8               	btfss	status,0,c
  1324  00107C  D038               	goto	l1283
  1325                           
  1326                           ;doprnt.c: 598: width = 0;
  1327  00107E  0E00               	movlw	0
  1328  001080  6E3E               	movwf	sprintf@width+1,c
  1329  001082  0E00               	movlw	0
  1330  001084  6E3D               	movwf	sprintf@width,c
  1331  001086                     l1269:
  1332                           
  1333                           ;doprnt.c: 600: width *= 10;
  1334  001086  C03D  F012         	movff	sprintf@width,___wmul@multiplier
  1335  00108A  C03E  F013         	movff	sprintf@width+1,___wmul@multiplier+1
  1336  00108E  0E00               	movlw	0
  1337  001090  6E15               	movwf	___wmul@multiplicand+1,c
  1338  001092  0E0A               	movlw	10
  1339  001094  6E14               	movwf	___wmul@multiplicand,c
  1340  001096  EC1D  F00B         	call	___wmul	;wreg free
  1341  00109A  C012  F03D         	movff	?___wmul,sprintf@width
  1342  00109E  C013  F03E         	movff	?___wmul+1,sprintf@width+1
  1343                           
  1344                           ;doprnt.c: 601: width += *f++ - '0';
  1345  0010A2  0ED0               	movlw	208
  1346  0010A4  6E30               	movwf	??_sprintf& (0+255),c
  1347  0010A6  0EFF               	movlw	255
  1348  0010A8  6E31               	movwf	(??_sprintf+1)& (0+255),c
  1349  0010AA  C02A  FFF6         	movff	sprintf@f,tblptrl
  1350  0010AE  C02B  FFF7         	movff	sprintf@f+1,tblptrh
  1351  0010B2                     	if	0	;tblptru may be non-zero
  1352  0010B2                     	endif
  1353  0010B2                     	if	0	;tblptru may be non-zero
  1354  0010B2                     	endif
  1355  0010B2  0008               	tblrd		*
  1356  0010B4  50F5               	movf	tablat,w,c
  1357  0010B6  6E32               	movwf	(??_sprintf+2)& (0+255),c
  1358  0010B8  6A33               	clrf	(??_sprintf+3)& (0+255),c
  1359  0010BA  5030               	movf	??_sprintf,w,c
  1360  0010BC  2632               	addwf	??_sprintf+2,f,c
  1361  0010BE  5031               	movf	??_sprintf+1,w,c
  1362  0010C0  2233               	addwfc	??_sprintf+3,f,c
  1363  0010C2  5032               	movf	??_sprintf+2,w,c
  1364  0010C4  263D               	addwf	sprintf@width,f,c
  1365  0010C6  5033               	movf	??_sprintf+3,w,c
  1366  0010C8  223E               	addwfc	sprintf@width+1,f,c
  1367  0010CA  4A2A               	infsnz	sprintf@f,f,c
  1368  0010CC  2A2B               	incf	sprintf@f+1,f,c
  1369                           
  1370                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1371  0010CE  C02A  FFF6         	movff	sprintf@f,tblptrl
  1372  0010D2  C02B  FFF7         	movff	sprintf@f+1,tblptrh
  1373  0010D6                     	if	0	;tblptru may be non-zero
  1374  0010D6                     	endif
  1375  0010D6                     	if	0	;tblptru may be non-zero
  1376  0010D6                     	endif
  1377  0010D6  0008               	tblrd		*
  1378  0010D8  50F5               	movf	tablat,w,c
  1379  0010DA  EC30  F00B         	call	_isdigit
  1380  0010DE  A0D8               	btfss	status,0,c
  1381  0010E0  D006               	goto	l1283
  1382  0010E2  D7D1               	goto	l1269
  1383  0010E4                     l1277:
  1384                           
  1385                           ;doprnt.c: 643: flag |= 0x10;
  1386  0010E4  8834               	bsf	sprintf@flag,4,c
  1387                           
  1388                           ;doprnt.c: 644: goto loop;
  1389  0010E6  D003               	goto	l1283
  1390  0010E8                     l1279:
  1391                           
  1392                           ;doprnt.c: 818: flag |= 0xC0;
  1393  0010E8  0EC0               	movlw	192
  1394  0010EA  1234               	iorwf	sprintf@flag,f,c
  1395                           
  1396                           ;doprnt.c: 822: }
  1397                           
  1398                           ;doprnt.c: 819: break;
  1399  0010EC  D014               	goto	l153
  1400  0010EE                     l1283:
  1401  0010EE  C02A  FFF6         	movff	sprintf@f,tblptrl
  1402  0010F2  C02B  FFF7         	movff	sprintf@f+1,tblptrh
  1403  0010F6  4A2A               	infsnz	sprintf@f,f,c
  1404  0010F8  2A2B               	incf	sprintf@f+1,f,c
  1405  0010FA                     	if	0	;tblptru may be non-zero
  1406  0010FA                     	endif
  1407  0010FA                     	if	0	;tblptru may be non-zero
  1408  0010FA                     	endif
  1409  0010FA  0008               	tblrd		*
  1410  0010FC  CFF5 F03F          	movff	tablat,sprintf@c
  1411  001100  503F               	movf	sprintf@c,w,c
  1412                           
  1413                           ; Switch size 1, requested type "space"
  1414                           ; Number of cases is 3, Range of values is 0 to 117
  1415                           ; switch strategies available:
  1416                           ; Name         Instructions Cycles
  1417                           ; simple_byte           10     6 (average)
  1418                           ;	Chosen strategy is simple_byte
  1419  001102  0A00               	xorlw	0	; case 0
  1420  001104  B4D8               	btfsc	status,2,c
  1421  001106  D0CD               	goto	l1333
  1422  001108  0A6C               	xorlw	108	; case 108
  1423  00110A  B4D8               	btfsc	status,2,c
  1424  00110C  D7EB               	goto	l1277
  1425  00110E  0A19               	xorlw	25	; case 117
  1426  001110  B4D8               	btfsc	status,2,c
  1427  001112  D7EA               	goto	l1279
  1428  001114  D0BA               	goto	l1331
  1429  001116                     l153:
  1430                           
  1431                           ;doprnt.c: 1273: {
  1432                           ;doprnt.c: 1281: if(flag & 0x10)
  1433  001116  A834               	btfss	sprintf@flag,4,c
  1434  001118  D00E               	goto	l1289
  1435                           
  1436                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  1437  00111A  C03B  FFD9         	movff	sprintf@ap,fsr2l
  1438  00111E  C03C  FFDA         	movff	sprintf@ap+1,fsr2h
  1439  001122  CFDE F037          	movff	postinc2,sprintf@val
  1440  001126  CFDE F038          	movff	postinc2,sprintf@val+1
  1441  00112A  CFDE F039          	movff	postinc2,sprintf@val+2
  1442  00112E  CFDE F03A          	movff	postinc2,sprintf@val+3
  1443  001132  0E04               	movlw	4
  1444  001134  D00F               	goto	L2
  1445  001136                     l1289:
  1446                           
  1447                           ;doprnt.c: 1283: else
  1448                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1449  001136  C03B  FFD9         	movff	sprintf@ap,fsr2l
  1450  00113A  C03C  FFDA         	movff	sprintf@ap+1,fsr2h
  1451  00113E  CFDE F030          	movff	postinc2,??_sprintf
  1452  001142  CFDD F031          	movff	postdec2,??_sprintf+1
  1453  001146  C030  F037         	movff	??_sprintf,sprintf@val
  1454  00114A  C031  F038         	movff	??_sprintf+1,sprintf@val+1
  1455  00114E  6A39               	clrf	sprintf@val+2,c
  1456  001150  6A3A               	clrf	sprintf@val+3,c
  1457  001152  0E02               	movlw	2
  1458  001154                     L2:
  1459  001154  263B               	addwf	sprintf@ap,f,c
  1460  001156  0E00               	movlw	0
  1461  001158  223C               	addwfc	sprintf@ap+1,f,c
  1462                           
  1463                           ;doprnt.c: 1287: }
  1464                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1465  00115A  0E01               	movlw	1
  1466  00115C  6E3F               	movwf	sprintf@c,c
  1467  00115E                     l1295:
  1468  00115E  0E0A               	movlw	10
  1469  001160  183F               	xorwf	sprintf@c,w,c
  1470  001162  B4D8               	btfsc	status,2,c
  1471  001164  D018               	goto	l1307
  1472                           
  1473                           ;doprnt.c: 1306: if(val < dpowers[c])
  1474  001166  503F               	movf	sprintf@c,w,c
  1475  001168  0D04               	mullw	4
  1476  00116A  0E01               	movlw	low _dpowers
  1477  00116C  24F3               	addwf	prodl,w,c
  1478  00116E  6EF6               	movwf	tblptrl,c
  1479  001170  0E10               	movlw	high _dpowers
  1480  001172  20F4               	addwfc	prodh,w,c
  1481  001174  6EF7               	movwf	tblptrh,c
  1482  001176                     	if	0	;There are less than 3 active tblptr bytes
  1483  001176                     	endif
  1484  001176  0009               	tblrd		*+
  1485  001178  50F5               	movf	tablat,w,c
  1486  00117A  5C37               	subwf	sprintf@val,w,c
  1487  00117C  0009               	tblrd		*+
  1488  00117E  50F5               	movf	tablat,w,c
  1489  001180  5838               	subwfb	sprintf@val+1,w,c
  1490  001182  0009               	tblrd		*+
  1491  001184  50F5               	movf	tablat,w,c
  1492  001186  5839               	subwfb	sprintf@val+2,w,c
  1493  001188  0009               	tblrd		*+
  1494  00118A  50F5               	movf	tablat,w,c
  1495  00118C  583A               	subwfb	sprintf@val+3,w,c
  1496  00118E  A0D8               	btfss	status,0,c
  1497  001190  D002               	goto	l1307
  1498                           
  1499                           ;doprnt.c: 1307: break;
  1500  001192  2A3F               	incf	sprintf@c,f,c
  1501  001194  D7E4               	goto	l1295
  1502  001196                     l1307:
  1503                           
  1504                           ;doprnt.c: 1381: if(width > c)
  1505  001196  0E80               	movlw	128
  1506  001198  BE3F               	btfsc	sprintf@c,7,c
  1507  00119A  0E7F               	movlw	127
  1508  00119C  6E30               	movwf	??_sprintf& (0+255),c
  1509  00119E  503D               	movf	sprintf@width,w,c
  1510  0011A0  5C3F               	subwf	sprintf@c,w,c
  1511  0011A2  503E               	movf	sprintf@width+1,w,c
  1512  0011A4  0A80               	xorlw	128
  1513  0011A6  5830               	subwfb	??_sprintf& (0+255),w,c
  1514  0011A8  B0D8               	btfsc	status,0,c
  1515  0011AA  D007               	goto	l1311
  1516                           
  1517                           ;doprnt.c: 1382: width -= c;
  1518  0011AC  503F               	movf	sprintf@c,w,c
  1519  0011AE  5E3D               	subwf	sprintf@width,f,c
  1520  0011B0  0E00               	movlw	0
  1521  0011B2  BE3F               	btfsc	sprintf@c,7,c
  1522  0011B4  0EFF               	movlw	255
  1523  0011B6  5A3E               	subwfb	sprintf@width+1,f,c
  1524  0011B8  D004               	goto	l1313
  1525  0011BA                     l1311:
  1526                           
  1527                           ;doprnt.c: 1383: else
  1528                           ;doprnt.c: 1384: width = 0;
  1529  0011BA  0E00               	movlw	0
  1530  0011BC  6E3E               	movwf	sprintf@width+1,c
  1531  0011BE  0E00               	movlw	0
  1532  0011C0  6E3D               	movwf	sprintf@width,c
  1533  0011C2                     l1313:
  1534                           
  1535                           ;doprnt.c: 1422: {
  1536                           ;doprnt.c: 1424: if(width
  1537                           ;doprnt.c: 1428: )
  1538  0011C2  503D               	movf	sprintf@width,w,c
  1539  0011C4  103E               	iorwf	sprintf@width+1,w,c
  1540  0011C6  B4D8               	btfsc	status,2,c
  1541  0011C8  D00F               	goto	l1321
  1542  0011CA                     l1315:
  1543                           
  1544                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  1545  0011CA  C028  FFD9         	movff	sprintf@sp,fsr2l
  1546  0011CE  C029  FFDA         	movff	sprintf@sp+1,fsr2h
  1547  0011D2  0E20               	movlw	32
  1548  0011D4  6EDF               	movwf	indf2,c
  1549  0011D6  4A28               	infsnz	sprintf@sp,f,c
  1550  0011D8  2A29               	incf	sprintf@sp+1,f,c
  1551                           
  1552                           ;doprnt.c: 1431: while(--width);
  1553  0011DA  063D               	decf	sprintf@width,f,c
  1554  0011DC  A0D8               	btfss	status,0,c
  1555  0011DE  063E               	decf	sprintf@width+1,f,c
  1556  0011E0  503D               	movf	sprintf@width,w,c
  1557  0011E2  103E               	iorwf	sprintf@width+1,w,c
  1558  0011E4  A4D8               	btfss	status,2,c
  1559  0011E6  D7F1               	goto	l1315
  1560  0011E8                     l1321:
  1561                           
  1562                           ;doprnt.c: 1469: }
  1563                           ;doprnt.c: 1472: prec = c;
  1564  0011E8  503F               	movf	sprintf@c,w,c
  1565  0011EA  6E35               	movwf	sprintf@prec,c
  1566  0011EC  6A36               	clrf	sprintf@prec+1,c
  1567  0011EE  BE35               	btfsc	sprintf@prec,7,c
  1568  0011F0  0636               	decf	sprintf@prec+1,f,c
  1569                           
  1570                           ;doprnt.c: 1474: while(prec--) {
  1571  0011F2  D043               	goto	l1329
  1572  0011F4                     l1323:
  1573                           
  1574                           ;doprnt.c: 1478: {
  1575                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1576  0011F4  C035  F030         	movff	sprintf@prec,??_sprintf
  1577  0011F8  C036  F031         	movff	sprintf@prec+1,??_sprintf+1
  1578  0011FC  90D8               	bcf	status,0,c
  1579  0011FE  3630               	rlcf	??_sprintf,f,c
  1580  001200  3631               	rlcf	??_sprintf+1,f,c
  1581  001202  90D8               	bcf	status,0,c
  1582  001204  3630               	rlcf	??_sprintf,f,c
  1583  001206  3631               	rlcf	??_sprintf+1,f,c
  1584  001208  0E01               	movlw	low _dpowers
  1585  00120A  2430               	addwf	??_sprintf,w,c
  1586  00120C  6EF6               	movwf	tblptrl,c
  1587  00120E  0E10               	movlw	high _dpowers
  1588  001210  2031               	addwfc	??_sprintf+1,w,c
  1589  001212  6EF7               	movwf	tblptrh,c
  1590  001214                     	if	0	;There are less than 3 active tblptr bytes
  1591  001214                     	endif
  1592  001214  0009               	tblrd		*+
  1593  001216  CFF5 F016          	movff	tablat,___lldiv@divisor
  1594  00121A  0009               	tblrd		*+
  1595  00121C  CFF5 F017          	movff	tablat,___lldiv@divisor+1
  1596  001220  0009               	tblrd		*+
  1597  001222  CFF5 F018          	movff	tablat,___lldiv@divisor+2
  1598  001226  000A               	tblrd		*-
  1599  001228  CFF5 F019          	movff	tablat,___lldiv@divisor+3
  1600  00122C  C037  F012         	movff	sprintf@val,___lldiv@dividend
  1601  001230  C038  F013         	movff	sprintf@val+1,___lldiv@dividend+1
  1602  001234  C039  F014         	movff	sprintf@val+2,___lldiv@dividend+2
  1603  001238  C03A  F015         	movff	sprintf@val+3,___lldiv@dividend+3
  1604  00123C  EC3E  F00A         	call	___lldiv	;wreg free
  1605  001240  C012  F01F         	movff	?___lldiv,___llmod@dividend
  1606  001244  C013  F020         	movff	?___lldiv+1,___llmod@dividend+1
  1607  001248  C014  F021         	movff	?___lldiv+2,___llmod@dividend+2
  1608  00124C  C015  F022         	movff	?___lldiv+3,___llmod@dividend+3
  1609  001250  0E0A               	movlw	10
  1610  001252  6E23               	movwf	___llmod@divisor,c
  1611  001254  0E00               	movlw	0
  1612  001256  6E24               	movwf	___llmod@divisor+1,c
  1613  001258  0E00               	movlw	0
  1614  00125A  6E25               	movwf	___llmod@divisor+2,c
  1615  00125C  0E00               	movlw	0
  1616  00125E  6E26               	movwf	___llmod@divisor+3,c
  1617  001260  ECB4  F00A         	call	___llmod	;wreg free
  1618  001264  501F               	movf	?___llmod,w,c
  1619  001266  0F30               	addlw	48
  1620  001268  6E3F               	movwf	sprintf@c,c
  1621                           
  1622                           ;doprnt.c: 1523: }
  1623                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1624  00126A  C028  FFD9         	movff	sprintf@sp,fsr2l
  1625  00126E  C029  FFDA         	movff	sprintf@sp+1,fsr2h
  1626  001272  C03F  FFDF         	movff	sprintf@c,indf2
  1627  001276  4A28               	infsnz	sprintf@sp,f,c
  1628  001278  2A29               	incf	sprintf@sp+1,f,c
  1629  00127A                     l1329:
  1630  00127A  0635               	decf	sprintf@prec,f,c
  1631  00127C  A0D8               	btfss	status,0,c
  1632  00127E  0636               	decf	sprintf@prec+1,f,c
  1633  001280  2835               	incf	sprintf@prec,w,c
  1634  001282  E1B8               	bnz	l1323
  1635  001284  2836               	incf	sprintf@prec+1,w,c
  1636  001286  A4D8               	btfss	status,2,c
  1637  001288  D7B5               	goto	l1323
  1638  00128A                     l1331:
  1639  00128A  C02A  FFF6         	movff	sprintf@f,tblptrl
  1640  00128E  C02B  FFF7         	movff	sprintf@f+1,tblptrh
  1641  001292  4A2A               	infsnz	sprintf@f,f,c
  1642  001294  2A2B               	incf	sprintf@f+1,f,c
  1643  001296                     	if	0	;tblptru may be non-zero
  1644  001296                     	endif
  1645  001296                     	if	0	;tblptru may be non-zero
  1646  001296                     	endif
  1647  001296  0008               	tblrd		*
  1648  001298  CFF5 F03F          	movff	tablat,sprintf@c
  1649  00129C  503F               	movf	sprintf@c,w,c
  1650  00129E  A4D8               	btfss	status,2,c
  1651  0012A0  D6D1               	goto	l1257
  1652  0012A2                     l1333:
  1653                           
  1654                           ;doprnt.c: 1538: *sp = 0;
  1655  0012A2  C028  FFD9         	movff	sprintf@sp,fsr2l
  1656  0012A6  C029  FFDA         	movff	sprintf@sp+1,fsr2h
  1657  0012AA  0E00               	movlw	0
  1658  0012AC  6EDF               	movwf	indf2,c
  1659  0012AE  0012               	return	
  1660  0012B0                     __end_of_sprintf:
  1661                           	opt stack 0
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           prodh	equ	0xFF4
  1667                           prodl	equ	0xFF3
  1668                           intcon	equ	0xFF2
  1669                           postinc0	equ	0xFEE
  1670                           wreg	equ	0xFE8
  1671                           indf2	equ	0xFDF
  1672                           postinc2	equ	0xFDE
  1673                           postdec2	equ	0xFDD
  1674                           fsr2h	equ	0xFDA
  1675                           fsr2l	equ	0xFD9
  1676                           status	equ	0xFD8
  1677                           
  1678 ;; *************** function _isdigit *****************
  1679 ;; Defined at:
  1680 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\isdigit.c"
  1681 ;; Parameters:    Size  Location     Type
  1682 ;;  c               1    wreg     unsigned char 
  1683 ;; Auto vars:     Size  Location     Type
  1684 ;;  c               1   19[COMRAM] unsigned char 
  1685 ;; Return value:  Size  Location     Type
  1686 ;;		None               void
  1687 ;; Registers used:
  1688 ;;		wreg, status,2, status,0
  1689 ;; Tracked objects:
  1690 ;;		On entry : 0/0
  1691 ;;		On exit  : 0/0
  1692 ;;		Unchanged: 0/0
  1693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1695 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1696 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1697 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1698 ;;Total ram usage:        3 bytes
  1699 ;; Hardware stack levels used:    1
  1700 ;; Hardware stack levels required when called:    4
  1701 ;; This function calls:
  1702 ;;		Nothing
  1703 ;; This function is called by:
  1704 ;;		_sprintf
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           	psect	text9
  1709  001660                     __ptext9:
  1710                           	opt stack 0
  1711  001660                     _isdigit:
  1712                           	opt stack 24
  1713                           
  1714                           ;incstack = 0
  1715                           ;isdigit@c stored from wreg
  1716  001660  6E14               	movwf	isdigit@c,c
  1717  001662  0E00               	movlw	0
  1718  001664  6E13               	movwf	_isdigit$820,c
  1719  001666  0E3A               	movlw	58
  1720  001668  6014               	cpfslt	isdigit@c,c
  1721  00166A  D005               	goto	l1165
  1722  00166C  0E2F               	movlw	47
  1723  00166E  6414               	cpfsgt	isdigit@c,c
  1724  001670  D002               	goto	l1165
  1725  001672  0E01               	movlw	1
  1726  001674  6E13               	movwf	_isdigit$820,c
  1727  001676                     l1165:
  1728  001676  C013  F012         	movff	_isdigit$820,??_isdigit
  1729  00167A  3012               	rrcf	??_isdigit,w,c
  1730  00167C  0012               	return	
  1731  00167E                     __end_of_isdigit:
  1732                           	opt stack 0
  1733                           tblptru	equ	0xFF8
  1734                           tblptrh	equ	0xFF7
  1735                           tblptrl	equ	0xFF6
  1736                           tablat	equ	0xFF5
  1737                           prodh	equ	0xFF4
  1738                           prodl	equ	0xFF3
  1739                           intcon	equ	0xFF2
  1740                           postinc0	equ	0xFEE
  1741                           wreg	equ	0xFE8
  1742                           indf2	equ	0xFDF
  1743                           postinc2	equ	0xFDE
  1744                           postdec2	equ	0xFDD
  1745                           fsr2h	equ	0xFDA
  1746                           fsr2l	equ	0xFD9
  1747                           status	equ	0xFD8
  1748                           
  1749 ;; *************** function ___wmul *****************
  1750 ;; Defined at:
  1751 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  1752 ;; Parameters:    Size  Location     Type
  1753 ;;  multiplier      2   17[COMRAM] unsigned int 
  1754 ;;  multiplicand    2   19[COMRAM] unsigned int 
  1755 ;; Auto vars:     Size  Location     Type
  1756 ;;  product         2   21[COMRAM] unsigned int 
  1757 ;; Return value:  Size  Location     Type
  1758 ;;                  2   17[COMRAM] unsigned int 
  1759 ;; Registers used:
  1760 ;;		wreg, status,2, status,0, prodl, prodh
  1761 ;; Tracked objects:
  1762 ;;		On entry : 0/0
  1763 ;;		On exit  : 0/0
  1764 ;;		Unchanged: 0/0
  1765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1766 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1767 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1769 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1770 ;;Total ram usage:        6 bytes
  1771 ;; Hardware stack levels used:    1
  1772 ;; Hardware stack levels required when called:    4
  1773 ;; This function calls:
  1774 ;;		Nothing
  1775 ;; This function is called by:
  1776 ;;		_sprintf
  1777 ;; This function uses a non-reentrant model
  1778 ;;
  1779                           
  1780                           	psect	text10
  1781  00163A                     __ptext10:
  1782                           	opt stack 0
  1783  00163A                     ___wmul:
  1784                           	opt stack 24
  1785                           
  1786                           ;incstack = 0
  1787  00163A  5012               	movf	___wmul@multiplier,w,c
  1788  00163C  0214               	mulwf	___wmul@multiplicand,c
  1789  00163E  CFF3 F016          	movff	prodl,___wmul@product
  1790  001642  CFF4 F017          	movff	prodh,___wmul@product+1
  1791  001646  5012               	movf	___wmul@multiplier,w,c
  1792  001648  0215               	mulwf	___wmul@multiplicand+1,c
  1793  00164A  50F3               	movf	prodl,w,c
  1794  00164C  2617               	addwf	___wmul@product+1,f,c
  1795  00164E  5013               	movf	___wmul@multiplier+1,w,c
  1796  001650  0214               	mulwf	___wmul@multiplicand,c
  1797  001652  50F3               	movf	prodl,w,c
  1798  001654  2617               	addwf	___wmul@product+1,f,c
  1799  001656  C016  F012         	movff	___wmul@product,?___wmul
  1800  00165A  C017  F013         	movff	___wmul@product+1,?___wmul+1
  1801  00165E  0012               	return	
  1802  001660                     __end_of___wmul:
  1803                           	opt stack 0
  1804                           tblptru	equ	0xFF8
  1805                           tblptrh	equ	0xFF7
  1806                           tblptrl	equ	0xFF6
  1807                           tablat	equ	0xFF5
  1808                           prodh	equ	0xFF4
  1809                           prodl	equ	0xFF3
  1810                           intcon	equ	0xFF2
  1811                           postinc0	equ	0xFEE
  1812                           wreg	equ	0xFE8
  1813                           indf2	equ	0xFDF
  1814                           postinc2	equ	0xFDE
  1815                           postdec2	equ	0xFDD
  1816                           fsr2h	equ	0xFDA
  1817                           fsr2l	equ	0xFD9
  1818                           status	equ	0xFD8
  1819                           
  1820 ;; *************** function ___llmod *****************
  1821 ;; Defined at:
  1822 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\llmod.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  dividend        4   30[COMRAM] unsigned long 
  1825 ;;  divisor         4   34[COMRAM] unsigned long 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  counter         1   38[COMRAM] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  4   30[COMRAM] unsigned long 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1837 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1838 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1840 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1841 ;;Total ram usage:        9 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    4
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		_sprintf
  1848 ;; This function uses a non-reentrant model
  1849 ;;
  1850                           
  1851                           	psect	text11
  1852  001568                     __ptext11:
  1853                           	opt stack 0
  1854  001568                     ___llmod:
  1855                           	opt stack 24
  1856                           
  1857                           ;incstack = 0
  1858  001568  5023               	movf	___llmod@divisor,w,c
  1859  00156A  1024               	iorwf	___llmod@divisor+1,w,c
  1860  00156C  1025               	iorwf	___llmod@divisor+2,w,c
  1861  00156E  1026               	iorwf	___llmod@divisor+3,w,c
  1862  001570  B4D8               	btfsc	status,2,c
  1863  001572  D024               	goto	l533
  1864  001574  0E01               	movlw	1
  1865  001576  6E27               	movwf	___llmod@counter,c
  1866  001578  D006               	goto	l1203
  1867  00157A                     l1201:
  1868  00157A  90D8               	bcf	status,0,c
  1869  00157C  3623               	rlcf	___llmod@divisor,f,c
  1870  00157E  3624               	rlcf	___llmod@divisor+1,f,c
  1871  001580  3625               	rlcf	___llmod@divisor+2,f,c
  1872  001582  3626               	rlcf	___llmod@divisor+3,f,c
  1873  001584  2A27               	incf	___llmod@counter,f,c
  1874  001586                     l1203:
  1875  001586  AE26               	btfss	___llmod@divisor+3,7,c
  1876  001588  D7F8               	goto	l1201
  1877  00158A                     l1205:
  1878  00158A  5023               	movf	___llmod@divisor,w,c
  1879  00158C  5C1F               	subwf	___llmod@dividend,w,c
  1880  00158E  5024               	movf	___llmod@divisor+1,w,c
  1881  001590  5820               	subwfb	___llmod@dividend+1,w,c
  1882  001592  5025               	movf	___llmod@divisor+2,w,c
  1883  001594  5821               	subwfb	___llmod@dividend+2,w,c
  1884  001596  5026               	movf	___llmod@divisor+3,w,c
  1885  001598  5822               	subwfb	___llmod@dividend+3,w,c
  1886  00159A  A0D8               	btfss	status,0,c
  1887  00159C  D008               	goto	l1209
  1888  00159E  5023               	movf	___llmod@divisor,w,c
  1889  0015A0  5E1F               	subwf	___llmod@dividend,f,c
  1890  0015A2  5024               	movf	___llmod@divisor+1,w,c
  1891  0015A4  5A20               	subwfb	___llmod@dividend+1,f,c
  1892  0015A6  5025               	movf	___llmod@divisor+2,w,c
  1893  0015A8  5A21               	subwfb	___llmod@dividend+2,f,c
  1894  0015AA  5026               	movf	___llmod@divisor+3,w,c
  1895  0015AC  5A22               	subwfb	___llmod@dividend+3,f,c
  1896  0015AE                     l1209:
  1897  0015AE  90D8               	bcf	status,0,c
  1898  0015B0  3226               	rrcf	___llmod@divisor+3,f,c
  1899  0015B2  3225               	rrcf	___llmod@divisor+2,f,c
  1900  0015B4  3224               	rrcf	___llmod@divisor+1,f,c
  1901  0015B6  3223               	rrcf	___llmod@divisor,f,c
  1902  0015B8  2E27               	decfsz	___llmod@counter,f,c
  1903  0015BA  D7E7               	goto	l1205
  1904  0015BC                     l533:
  1905  0015BC  C01F  F01F         	movff	___llmod@dividend,?___llmod
  1906  0015C0  C020  F020         	movff	___llmod@dividend+1,?___llmod+1
  1907  0015C4  C021  F021         	movff	___llmod@dividend+2,?___llmod+2
  1908  0015C8  C022  F022         	movff	___llmod@dividend+3,?___llmod+3
  1909  0015CC  0012               	return		;funcret
  1910  0015CE                     __end_of___llmod:
  1911                           	opt stack 0
  1912                           tblptru	equ	0xFF8
  1913                           tblptrh	equ	0xFF7
  1914                           tblptrl	equ	0xFF6
  1915                           tablat	equ	0xFF5
  1916                           prodh	equ	0xFF4
  1917                           prodl	equ	0xFF3
  1918                           intcon	equ	0xFF2
  1919                           postinc0	equ	0xFEE
  1920                           wreg	equ	0xFE8
  1921                           indf2	equ	0xFDF
  1922                           postinc2	equ	0xFDE
  1923                           postdec2	equ	0xFDD
  1924                           fsr2h	equ	0xFDA
  1925                           fsr2l	equ	0xFD9
  1926                           status	equ	0xFD8
  1927                           
  1928 ;; *************** function ___lldiv *****************
  1929 ;; Defined at:
  1930 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lldiv.c"
  1931 ;; Parameters:    Size  Location     Type
  1932 ;;  dividend        4   17[COMRAM] unsigned long 
  1933 ;;  divisor         4   21[COMRAM] unsigned long 
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  quotient        4   25[COMRAM] unsigned long 
  1936 ;;  counter         1   29[COMRAM] unsigned char 
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  4   17[COMRAM] unsigned long 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2, status,0
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1946 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1947 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1949 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1950 ;;Total ram usage:       13 bytes
  1951 ;; Hardware stack levels used:    1
  1952 ;; Hardware stack levels required when called:    4
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		_sprintf
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text12
  1961  00147C                     __ptext12:
  1962                           	opt stack 0
  1963  00147C                     ___lldiv:
  1964                           	opt stack 24
  1965                           
  1966                           ;incstack = 0
  1967  00147C  0E00               	movlw	0
  1968  00147E  6E1A               	movwf	___lldiv@quotient,c
  1969  001480  0E00               	movlw	0
  1970  001482  6E1B               	movwf	___lldiv@quotient+1,c
  1971  001484  0E00               	movlw	0
  1972  001486  6E1C               	movwf	___lldiv@quotient+2,c
  1973  001488  0E00               	movlw	0
  1974  00148A  6E1D               	movwf	___lldiv@quotient+3,c
  1975  00148C  5016               	movf	___lldiv@divisor,w,c
  1976  00148E  1017               	iorwf	___lldiv@divisor+1,w,c
  1977  001490  1018               	iorwf	___lldiv@divisor+2,w,c
  1978  001492  1019               	iorwf	___lldiv@divisor+3,w,c
  1979  001494  B4D8               	btfsc	status,2,c
  1980  001496  D02A               	goto	l523
  1981  001498  0E01               	movlw	1
  1982  00149A  6E1E               	movwf	___lldiv@counter,c
  1983  00149C  D006               	goto	l1183
  1984  00149E                     l1181:
  1985  00149E  90D8               	bcf	status,0,c
  1986  0014A0  3616               	rlcf	___lldiv@divisor,f,c
  1987  0014A2  3617               	rlcf	___lldiv@divisor+1,f,c
  1988  0014A4  3618               	rlcf	___lldiv@divisor+2,f,c
  1989  0014A6  3619               	rlcf	___lldiv@divisor+3,f,c
  1990  0014A8  2A1E               	incf	___lldiv@counter,f,c
  1991  0014AA                     l1183:
  1992  0014AA  AE19               	btfss	___lldiv@divisor+3,7,c
  1993  0014AC  D7F8               	goto	l1181
  1994  0014AE                     l1185:
  1995  0014AE  90D8               	bcf	status,0,c
  1996  0014B0  361A               	rlcf	___lldiv@quotient,f,c
  1997  0014B2  361B               	rlcf	___lldiv@quotient+1,f,c
  1998  0014B4  361C               	rlcf	___lldiv@quotient+2,f,c
  1999  0014B6  361D               	rlcf	___lldiv@quotient+3,f,c
  2000  0014B8  5016               	movf	___lldiv@divisor,w,c
  2001  0014BA  5C12               	subwf	___lldiv@dividend,w,c
  2002  0014BC  5017               	movf	___lldiv@divisor+1,w,c
  2003  0014BE  5813               	subwfb	___lldiv@dividend+1,w,c
  2004  0014C0  5018               	movf	___lldiv@divisor+2,w,c
  2005  0014C2  5814               	subwfb	___lldiv@dividend+2,w,c
  2006  0014C4  5019               	movf	___lldiv@divisor+3,w,c
  2007  0014C6  5815               	subwfb	___lldiv@dividend+3,w,c
  2008  0014C8  A0D8               	btfss	status,0,c
  2009  0014CA  D009               	goto	l1193
  2010  0014CC  5016               	movf	___lldiv@divisor,w,c
  2011  0014CE  5E12               	subwf	___lldiv@dividend,f,c
  2012  0014D0  5017               	movf	___lldiv@divisor+1,w,c
  2013  0014D2  5A13               	subwfb	___lldiv@dividend+1,f,c
  2014  0014D4  5018               	movf	___lldiv@divisor+2,w,c
  2015  0014D6  5A14               	subwfb	___lldiv@dividend+2,f,c
  2016  0014D8  5019               	movf	___lldiv@divisor+3,w,c
  2017  0014DA  5A15               	subwfb	___lldiv@dividend+3,f,c
  2018  0014DC  801A               	bsf	___lldiv@quotient,0,c
  2019  0014DE                     l1193:
  2020  0014DE  90D8               	bcf	status,0,c
  2021  0014E0  3219               	rrcf	___lldiv@divisor+3,f,c
  2022  0014E2  3218               	rrcf	___lldiv@divisor+2,f,c
  2023  0014E4  3217               	rrcf	___lldiv@divisor+1,f,c
  2024  0014E6  3216               	rrcf	___lldiv@divisor,f,c
  2025  0014E8  2E1E               	decfsz	___lldiv@counter,f,c
  2026  0014EA  D7E1               	goto	l1185
  2027  0014EC                     l523:
  2028  0014EC  C01A  F012         	movff	___lldiv@quotient,?___lldiv
  2029  0014F0  C01B  F013         	movff	___lldiv@quotient+1,?___lldiv+1
  2030  0014F4  C01C  F014         	movff	___lldiv@quotient+2,?___lldiv+2
  2031  0014F8  C01D  F015         	movff	___lldiv@quotient+3,?___lldiv+3
  2032  0014FC  0012               	return		;funcret
  2033  0014FE                     __end_of___lldiv:
  2034                           	opt stack 0
  2035                           tblptru	equ	0xFF8
  2036                           tblptrh	equ	0xFF7
  2037                           tblptrl	equ	0xFF6
  2038                           tablat	equ	0xFF5
  2039                           prodh	equ	0xFF4
  2040                           prodl	equ	0xFF3
  2041                           intcon	equ	0xFF2
  2042                           postinc0	equ	0xFEE
  2043                           wreg	equ	0xFE8
  2044                           indf2	equ	0xFDF
  2045                           postinc2	equ	0xFDE
  2046                           postdec2	equ	0xFDD
  2047                           fsr2h	equ	0xFDA
  2048                           fsr2l	equ	0xFD9
  2049                           status	equ	0xFD8
  2050                           
  2051 ;; *************** function _Interrupt_High *****************
  2052 ;; Defined at:
  2053 ;;		line 106 in file "App.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;		None
  2056 ;; Auto vars:     Size  Location     Type
  2057 ;;		None
  2058 ;; Return value:  Size  Location     Type
  2059 ;;                  1    wreg      void 
  2060 ;; Registers used:
  2061 ;;		wreg, status,2, status,0, cstack
  2062 ;; Tracked objects:
  2063 ;;		On entry : 0/0
  2064 ;;		On exit  : 0/0
  2065 ;;		Unchanged: 0/0
  2066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2069 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2070 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2071 ;;Total ram usage:       14 bytes
  2072 ;; Hardware stack levels used:    1
  2073 ;; Hardware stack levels required when called:    3
  2074 ;; This function calls:
  2075 ;;		_Display_ExecutaVarredura
  2076 ;;		i2_Timer0_Recarga
  2077 ;; This function is called by:
  2078 ;;		Interrupt level 2
  2079 ;; This function uses a non-reentrant model
  2080 ;;
  2081                           
  2082                           	psect	intcode
  2083  000008                     __pintcode:
  2084                           	opt stack 0
  2085  000008                     _Interrupt_High:
  2086                           	opt stack 24
  2087                           
  2088                           ;incstack = 0
  2089  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2090  00000A  CFFA F004          	movff	pclath,??_Interrupt_High
  2091  00000E  CFFB F005          	movff	pclatu,??_Interrupt_High+1
  2092  000012  CFE9 F006          	movff	fsr0l,??_Interrupt_High+2
  2093  000016  CFEA F007          	movff	fsr0h,??_Interrupt_High+3
  2094  00001A  CFE1 F008          	movff	fsr1l,??_Interrupt_High+4
  2095  00001E  CFE2 F009          	movff	fsr1h,??_Interrupt_High+5
  2096  000022  CFD9 F00A          	movff	fsr2l,??_Interrupt_High+6
  2097  000026  CFDA F00B          	movff	fsr2h,??_Interrupt_High+7
  2098  00002A  CFF3 F00C          	movff	prodl,??_Interrupt_High+8
  2099  00002E  CFF4 F00D          	movff	prodh,??_Interrupt_High+9
  2100  000032  CFF6 F00E          	movff	tblptrl,??_Interrupt_High+10
  2101  000036  CFF7 F00F          	movff	tblptrh,??_Interrupt_High+11
  2102  00003A  CFF8 F010          	movff	tblptru,??_Interrupt_High+12
  2103  00003E  CFF5 F011          	movff	tablat,??_Interrupt_High+13
  2104                           
  2105                           ;App.c: 109: if ((INTCONbits.TMR0IE == 1) &&
  2106                           ;App.c: 110: (INTCONbits.TMR0IF == 1))
  2107  000042  BAF2               	btfsc	intcon,5,c	;volatile
  2108  000044  A4F2               	btfss	intcon,2,c	;volatile
  2109  000046  D00C               	goto	i2l46
  2110                           
  2111                           ;App.c: 111: {
  2112                           ;App.c: 112: Timer0_Recarga();
  2113  000048  EC7C  F00B         	call	i2_Timer0_Recarga	;wreg free
  2114                           
  2115                           ;App.c: 114: if(--TMR0_Eventos.Temporizador100ms == 0)
  2116  00004C  0100               	movlb	0	; () banked
  2117  00004E  2F6D               	decfsz	_TMR0_Eventos& (0+255),f,b
  2118  000050  D005               	goto	i2l1489
  2119                           
  2120                           ; BSR set to: 0
  2121                           ;App.c: 115: {
  2122                           ;App.c: 116: TMR0_Eventos.Temporizador100ms = 100;
  2123  000052  0E64               	movlw	100
  2124  000054  0100               	movlb	0	; () banked
  2125  000056  6F6D               	movwf	_TMR0_Eventos& (0+255),b
  2126                           
  2127                           ; BSR set to: 0
  2128                           ;App.c: 117: TMR0_Eventos.EventosDe100ms.Valor = 0xFF;
  2129  000058  0100               	movlb	0	; () banked
  2130  00005A  696E               	setf	(_TMR0_Eventos+1)& (0+255),b
  2131  00005C                     i2l1489:
  2132                           
  2133                           ; BSR set to: 0
  2134                           ;App.c: 118: }
  2135                           ;App.c: 121: Display_ExecutaVarredura();
  2136  00005C  ECEA  F009         	call	_Display_ExecutaVarredura	;wreg free
  2137  000060                     i2l46:
  2138  000060  C011  FFF5         	movff	??_Interrupt_High+13,tablat
  2139  000064  C010  FFF8         	movff	??_Interrupt_High+12,tblptru
  2140  000068  C00F  FFF7         	movff	??_Interrupt_High+11,tblptrh
  2141  00006C  C00E  FFF6         	movff	??_Interrupt_High+10,tblptrl
  2142  000070  C00D  FFF4         	movff	??_Interrupt_High+9,prodh
  2143  000074  C00C  FFF3         	movff	??_Interrupt_High+8,prodl
  2144  000078  C00B  FFDA         	movff	??_Interrupt_High+7,fsr2h
  2145  00007C  C00A  FFD9         	movff	??_Interrupt_High+6,fsr2l
  2146  000080  C009  FFE2         	movff	??_Interrupt_High+5,fsr1h
  2147  000084  C008  FFE1         	movff	??_Interrupt_High+4,fsr1l
  2148  000088  C007  FFEA         	movff	??_Interrupt_High+3,fsr0h
  2149  00008C  C006  FFE9         	movff	??_Interrupt_High+2,fsr0l
  2150  000090  C005  FFFB         	movff	??_Interrupt_High+1,pclatu
  2151  000094  C004  FFFA         	movff	??_Interrupt_High,pclath
  2152  000098  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2153  00009A  0011               	retfie		f
  2154  00009C                     __end_of_Interrupt_High:
  2155                           	opt stack 0
  2156                           pclatu	equ	0xFFB
  2157                           pclath	equ	0xFFA
  2158                           tblptru	equ	0xFF8
  2159                           tblptrh	equ	0xFF7
  2160                           tblptrl	equ	0xFF6
  2161                           tablat	equ	0xFF5
  2162                           prodh	equ	0xFF4
  2163                           prodl	equ	0xFF3
  2164                           intcon	equ	0xFF2
  2165                           postinc0	equ	0xFEE
  2166                           fsr0h	equ	0xFEA
  2167                           fsr0l	equ	0xFE9
  2168                           wreg	equ	0xFE8
  2169                           fsr1h	equ	0xFE2
  2170                           fsr1l	equ	0xFE1
  2171                           indf2	equ	0xFDF
  2172                           postinc2	equ	0xFDE
  2173                           postdec2	equ	0xFDD
  2174                           fsr2h	equ	0xFDA
  2175                           fsr2l	equ	0xFD9
  2176                           status	equ	0xFD8
  2177                           
  2178 ;; *************** function i2_Timer0_Recarga *****************
  2179 ;; Defined at:
  2180 ;;		line 90 in file "App.c"
  2181 ;; Parameters:    Size  Location     Type
  2182 ;;		None
  2183 ;; Auto vars:     Size  Location     Type
  2184 ;;  Timer0_Recar    2    0[COMRAM] struct .
  2185 ;; Return value:  Size  Location     Type
  2186 ;;                  1    wreg      void 
  2187 ;; Registers used:
  2188 ;;		wreg, status,2
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2195 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2197 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2198 ;;Total ram usage:        2 bytes
  2199 ;; Hardware stack levels used:    1
  2200 ;; This function calls:
  2201 ;;		Nothing
  2202 ;; This function is called by:
  2203 ;;		_Interrupt_High
  2204 ;; This function uses a non-reentrant model
  2205 ;;
  2206                           
  2207                           	psect	text14
  2208  0016F8                     __ptext14:
  2209                           	opt stack 0
  2210  0016F8                     i2_Timer0_Recarga:
  2211                           	opt stack 26
  2212                           
  2213                           ;App.c: 92: Uint16 ValorDeCarga;
  2214                           ;App.c: 94: INTCONbits.TMR0IF = 0;
  2215                           
  2216                           ;incstack = 0
  2217  0016F8  94F2               	bcf	intcon,2,c	;volatile
  2218                           
  2219                           ;App.c: 96: ValorDeCarga.valor = 57536;
  2220  0016FA  0EE0               	movlw	224
  2221  0016FC  6E02               	movwf	i2Timer0_Recarga@ValorDeCarga+1,c
  2222  0016FE  0EC0               	movlw	192
  2223  001700  6E01               	movwf	i2Timer0_Recarga@ValorDeCarga,c
  2224                           
  2225                           ;App.c: 98: TMR0H = ValorDeCarga.bytes.byte1;
  2226  001702  C002  FFD7         	movff	i2Timer0_Recarga@ValorDeCarga+1,4055	;volatile
  2227                           
  2228                           ;App.c: 99: TMR0L = ValorDeCarga.bytes.byte0;
  2229  001706  C001  FFD6         	movff	i2Timer0_Recarga@ValorDeCarga,4054	;volatile
  2230  00170A  0012               	return		;funcret
  2231  00170C                     __end_ofi2_Timer0_Recarga:
  2232                           	opt stack 0
  2233                           pclatu	equ	0xFFB
  2234                           pclath	equ	0xFFA
  2235                           tblptru	equ	0xFF8
  2236                           tblptrh	equ	0xFF7
  2237                           tblptrl	equ	0xFF6
  2238                           tablat	equ	0xFF5
  2239                           prodh	equ	0xFF4
  2240                           prodl	equ	0xFF3
  2241                           intcon	equ	0xFF2
  2242                           postinc0	equ	0xFEE
  2243                           fsr0h	equ	0xFEA
  2244                           fsr0l	equ	0xFE9
  2245                           wreg	equ	0xFE8
  2246                           fsr1h	equ	0xFE2
  2247                           fsr1l	equ	0xFE1
  2248                           indf2	equ	0xFDF
  2249                           postinc2	equ	0xFDE
  2250                           postdec2	equ	0xFDD
  2251                           fsr2h	equ	0xFDA
  2252                           fsr2l	equ	0xFD9
  2253                           status	equ	0xFD8
  2254                           
  2255 ;; *************** function _Display_ExecutaVarredura *****************
  2256 ;; Defined at:
  2257 ;;		line 123 in file "Base_1.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;		None
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;		None
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2, status,0, cstack
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2275 ;;Total ram usage:        0 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    2
  2278 ;; This function calls:
  2279 ;;		_Display_LigaDigito
  2280 ;; This function is called by:
  2281 ;;		_Interrupt_High
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text15
  2286  0013D4                     __ptext15:
  2287                           	opt stack 0
  2288  0013D4                     _Display_ExecutaVarredura:
  2289                           	opt stack 24
  2290                           
  2291                           ;Base_1.c: 125: switch (Varredura.Sequencia)
  2292                           
  2293                           ;incstack = 0
  2294  0013D4  D031               	goto	i2l1443
  2295  0013D6                     i2l1429:
  2296                           
  2297                           ;Base_1.c: 128: Display_LigaDigito(Varredura.Buffer.Leds,0b01000000);
  2298  0013D6  0E40               	movlw	64
  2299  0013D8  6E02               	movwf	Display_LigaDigito@Digito,c
  2300  0013DA  0100               	movlb	0	; () banked
  2301  0013DC  5167               	movf	(_Varredura+7)& (0+255),w,b
  2302  0013DE  EC8F  F00B         	call	_Display_LigaDigito
  2303                           
  2304                           ;Base_1.c: 129: break;
  2305  0013E2  D041               	goto	i2l1445
  2306  0013E4                     i2l1431:
  2307                           
  2308                           ;Base_1.c: 131: Display_LigaDigito(Varredura.Buffer.Digito1,0b00000001);
  2309  0013E4  0E01               	movlw	1
  2310  0013E6  6E02               	movwf	Display_LigaDigito@Digito,c
  2311  0013E8  0100               	movlb	0	; () banked
  2312  0013EA  5161               	movf	(_Varredura+1)& (0+255),w,b
  2313  0013EC  EC8F  F00B         	call	_Display_LigaDigito
  2314                           
  2315                           ;Base_1.c: 132: break;
  2316  0013F0  D03A               	goto	i2l1445
  2317  0013F2                     i2l1433:
  2318                           
  2319                           ;Base_1.c: 134: Display_LigaDigito(Varredura.Buffer.Digito2,0b00000010);
  2320  0013F2  0E02               	movlw	2
  2321  0013F4  6E02               	movwf	Display_LigaDigito@Digito,c
  2322  0013F6  0100               	movlb	0	; () banked
  2323  0013F8  5162               	movf	(_Varredura+2)& (0+255),w,b
  2324  0013FA  EC8F  F00B         	call	_Display_LigaDigito
  2325                           
  2326                           ;Base_1.c: 135: break;
  2327  0013FE  D033               	goto	i2l1445
  2328  001400                     i2l1435:
  2329                           
  2330                           ;Base_1.c: 137: Display_LigaDigito(Varredura.Buffer.Digito3,0b00000100);
  2331  001400  0E04               	movlw	4
  2332  001402  6E02               	movwf	Display_LigaDigito@Digito,c
  2333  001404  0100               	movlb	0	; () banked
  2334  001406  5163               	movf	(_Varredura+3)& (0+255),w,b
  2335  001408  EC8F  F00B         	call	_Display_LigaDigito
  2336                           
  2337                           ;Base_1.c: 138: break;
  2338  00140C  D02C               	goto	i2l1445
  2339  00140E                     i2l1437:
  2340                           
  2341                           ;Base_1.c: 140: Display_LigaDigito(Varredura.Buffer.Digito4,0b00001000);
  2342  00140E  0E08               	movlw	8
  2343  001410  6E02               	movwf	Display_LigaDigito@Digito,c
  2344  001412  0100               	movlb	0	; () banked
  2345  001414  5164               	movf	(_Varredura+4)& (0+255),w,b
  2346  001416  EC8F  F00B         	call	_Display_LigaDigito
  2347                           
  2348                           ;Base_1.c: 141: break;
  2349  00141A  D025               	goto	i2l1445
  2350  00141C                     i2l1439:
  2351                           
  2352                           ;Base_1.c: 143: Display_LigaDigito(Varredura.Buffer.Digito5,0b00010000);
  2353  00141C  0E10               	movlw	16
  2354  00141E  6E02               	movwf	Display_LigaDigito@Digito,c
  2355  001420  0100               	movlb	0	; () banked
  2356  001422  5165               	movf	(_Varredura+5)& (0+255),w,b
  2357  001424  EC8F  F00B         	call	_Display_LigaDigito
  2358                           
  2359                           ;Base_1.c: 144: break;
  2360  001428  D01E               	goto	i2l1445
  2361  00142A                     i2l1441:
  2362                           
  2363                           ;Base_1.c: 146: Display_LigaDigito(Varredura.Buffer.Digito6,0b00100000);
  2364  00142A  0E20               	movlw	32
  2365  00142C  6E02               	movwf	Display_LigaDigito@Digito,c
  2366  00142E  0100               	movlb	0	; () banked
  2367  001430  5166               	movf	(_Varredura+6)& (0+255),w,b
  2368  001432  EC8F  F00B         	call	_Display_LigaDigito
  2369                           
  2370                           ;Base_1.c: 147: }
  2371  001436  D017               	goto	i2l1445
  2372  001438                     i2l1443:
  2373  001438  0100               	movlb	0	; () banked
  2374  00143A  5160               	movf	_Varredura& (0+255),w,b
  2375                           
  2376                           ; Switch size 1, requested type "space"
  2377                           ; Number of cases is 7, Range of values is 0 to 6
  2378                           ; switch strategies available:
  2379                           ; Name         Instructions Cycles
  2380                           ; simple_byte           22    12 (average)
  2381                           ;	Chosen strategy is simple_byte
  2382  00143C  0A00               	xorlw	0	; case 0
  2383  00143E  B4D8               	btfsc	status,2,c
  2384  001440  D7CA               	goto	i2l1429
  2385  001442  0A01               	xorlw	1	; case 1
  2386  001444  B4D8               	btfsc	status,2,c
  2387  001446  D7CE               	goto	i2l1431
  2388  001448  0A03               	xorlw	3	; case 2
  2389  00144A  B4D8               	btfsc	status,2,c
  2390  00144C  D7D2               	goto	i2l1433
  2391  00144E  0A01               	xorlw	1	; case 3
  2392  001450  B4D8               	btfsc	status,2,c
  2393  001452  D7D6               	goto	i2l1435
  2394  001454  0A07               	xorlw	7	; case 4
  2395  001456  B4D8               	btfsc	status,2,c
  2396  001458  D7DA               	goto	i2l1437
  2397  00145A  0A01               	xorlw	1	; case 5
  2398  00145C  B4D8               	btfsc	status,2,c
  2399  00145E  D7DE               	goto	i2l1439
  2400  001460  0A03               	xorlw	3	; case 6
  2401  001462  B4D8               	btfsc	status,2,c
  2402  001464  D7E2               	goto	i2l1441
  2403  001466                     i2l1445:
  2404                           
  2405                           ;Base_1.c: 149: if (++Varredura.Sequencia == 7) Varredura.Sequencia = 0;
  2406  001466  0100               	movlb	0	; () banked
  2407  001468  2B60               	incf	_Varredura& (0+255),f,b
  2408  00146A  0E07               	movlw	7
  2409  00146C  0100               	movlb	0	; () banked
  2410  00146E  1960               	xorwf	_Varredura& (0+255),w,b
  2411  001470  A4D8               	btfss	status,2,c
  2412  001472  0012               	return	
  2413                           
  2414                           ; BSR set to: 0
  2415  001474  0E00               	movlw	0
  2416  001476  0100               	movlb	0	; () banked
  2417  001478  6F60               	movwf	_Varredura& (0+255),b
  2418  00147A  0012               	return	
  2419  00147C                     __end_of_Display_ExecutaVarredura:
  2420                           	opt stack 0
  2421                           pclatu	equ	0xFFB
  2422                           pclath	equ	0xFFA
  2423                           tblptru	equ	0xFF8
  2424                           tblptrh	equ	0xFF7
  2425                           tblptrl	equ	0xFF6
  2426                           tablat	equ	0xFF5
  2427                           prodh	equ	0xFF4
  2428                           prodl	equ	0xFF3
  2429                           intcon	equ	0xFF2
  2430                           postinc0	equ	0xFEE
  2431                           fsr0h	equ	0xFEA
  2432                           fsr0l	equ	0xFE9
  2433                           wreg	equ	0xFE8
  2434                           fsr1h	equ	0xFE2
  2435                           fsr1l	equ	0xFE1
  2436                           indf2	equ	0xFDF
  2437                           postinc2	equ	0xFDE
  2438                           postdec2	equ	0xFDD
  2439                           fsr2h	equ	0xFDA
  2440                           fsr2l	equ	0xFD9
  2441                           status	equ	0xFD8
  2442                           
  2443 ;; *************** function _Display_LigaDigito *****************
  2444 ;; Defined at:
  2445 ;;		line 88 in file "Base_1.c"
  2446 ;; Parameters:    Size  Location     Type
  2447 ;;  Valor           1    wreg     unsigned char 
  2448 ;;  Digito          1    1[COMRAM] unsigned char 
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;  Valor           1    2[COMRAM] unsigned char 
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2, cstack
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2460 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2461 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2463 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2464 ;;Total ram usage:        2 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    1
  2467 ;; This function calls:
  2468 ;;		i2_Latch_EscreveValor
  2469 ;; This function is called by:
  2470 ;;		_Display_ExecutaVarredura
  2471 ;;		_Display_Inicializacao
  2472 ;; This function uses a non-reentrant model
  2473 ;;
  2474                           
  2475                           	psect	text16
  2476  00171E                     __ptext16:
  2477                           	opt stack 0
  2478  00171E                     _Display_LigaDigito:
  2479                           	opt stack 24
  2480                           
  2481                           ; BSR set to: 0
  2482                           ;incstack = 0
  2483                           ;Display_LigaDigito@Valor stored from wreg
  2484  00171E  6E03               	movwf	Display_LigaDigito@Valor,c
  2485                           
  2486                           ;Base_1.c: 90: LATDbits.LATD3 = 1;
  2487  001720  868C               	bsf	3980,3,c	;volatile
  2488                           
  2489                           ;Base_1.c: 91: Latch_EscreveValor (Digito);
  2490  001722  5002               	movf	Display_LigaDigito@Digito,w,c
  2491  001724  EC66  F00B         	call	i2_Latch_EscreveValor
  2492                           
  2493                           ;Base_1.c: 92: LATB = Valor;
  2494  001728  C003  FF8A         	movff	Display_LigaDigito@Valor,3978	;volatile
  2495                           
  2496                           ;Base_1.c: 93: LATDbits.LATD3 = 0;
  2497  00172C  968C               	bcf	3980,3,c	;volatile
  2498  00172E  0012               	return		;funcret
  2499  001730                     __end_of_Display_LigaDigito:
  2500                           	opt stack 0
  2501                           pclatu	equ	0xFFB
  2502                           pclath	equ	0xFFA
  2503                           tblptru	equ	0xFF8
  2504                           tblptrh	equ	0xFF7
  2505                           tblptrl	equ	0xFF6
  2506                           tablat	equ	0xFF5
  2507                           prodh	equ	0xFF4
  2508                           prodl	equ	0xFF3
  2509                           intcon	equ	0xFF2
  2510                           postinc0	equ	0xFEE
  2511                           fsr0h	equ	0xFEA
  2512                           fsr0l	equ	0xFE9
  2513                           wreg	equ	0xFE8
  2514                           fsr1h	equ	0xFE2
  2515                           fsr1l	equ	0xFE1
  2516                           indf2	equ	0xFDF
  2517                           postinc2	equ	0xFDE
  2518                           postdec2	equ	0xFDD
  2519                           fsr2h	equ	0xFDA
  2520                           fsr2l	equ	0xFD9
  2521                           status	equ	0xFD8
  2522                           
  2523 ;; *************** function i2_Latch_EscreveValor *****************
  2524 ;; Defined at:
  2525 ;;		line 58 in file "Base_1.c"
  2526 ;; Parameters:    Size  Location     Type
  2527 ;;  Valor           1    wreg     unsigned char 
  2528 ;; Auto vars:     Size  Location     Type
  2529 ;;  Valor           1    0[COMRAM] unsigned char 
  2530 ;; Return value:  Size  Location     Type
  2531 ;;                  1    wreg      void 
  2532 ;; Registers used:
  2533 ;;		wreg, status,2
  2534 ;; Tracked objects:
  2535 ;;		On entry : 0/0
  2536 ;;		On exit  : 0/0
  2537 ;;		Unchanged: 0/0
  2538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2542 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2543 ;;Total ram usage:        1 bytes
  2544 ;; Hardware stack levels used:    1
  2545 ;; This function calls:
  2546 ;;		Nothing
  2547 ;; This function is called by:
  2548 ;;		_Display_LigaDigito
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           	psect	text17
  2553  0016CC                     __ptext17:
  2554                           	opt stack 0
  2555  0016CC                     i2_Latch_EscreveValor:
  2556                           	opt stack 24
  2557                           
  2558                           ;incstack = 0
  2559                           ;i2Latch_EscreveValor@Valor stored from wreg
  2560  0016CC  6E01               	movwf	i2Latch_EscreveValor@Valor,c
  2561                           
  2562                           ;Base_1.c: 60: LATB = Valor;
  2563  0016CE  C001  FF8A         	movff	i2Latch_EscreveValor@Valor,3978	;volatile
  2564                           
  2565                           ;Base_1.c: 63: LATDbits.LATD2 = 1;
  2566  0016D2  848C               	bsf	3980,2,c	;volatile
  2567                           
  2568                           ;Base_1.c: 64: __nop();
  2569  0016D4  F000               	nop	
  2570                           
  2571                           ;Base_1.c: 65: __nop();
  2572  0016D6  F000               	nop	
  2573                           
  2574                           ;Base_1.c: 66: __nop();
  2575  0016D8  F000               	nop	
  2576                           
  2577                           ;Base_1.c: 67: __nop();
  2578  0016DA  F000               	nop	
  2579                           
  2580                           ;Base_1.c: 68: LATDbits.LATD2 = 0;
  2581  0016DC  948C               	bcf	3980,2,c	;volatile
  2582                           
  2583                           ;Base_1.c: 70: LATB = 0;
  2584  0016DE  0E00               	movlw	0
  2585  0016E0  6E8A               	movwf	3978,c	;volatile
  2586  0016E2  0012               	return		;funcret
  2587  0016E4                     __end_ofi2_Latch_EscreveValor:
  2588                           	opt stack 0
  2589                           pclatu	equ	0xFFB
  2590                           pclath	equ	0xFFA
  2591                           tblptru	equ	0xFF8
  2592                           tblptrh	equ	0xFF7
  2593                           tblptrl	equ	0xFF6
  2594                           tablat	equ	0xFF5
  2595                           prodh	equ	0xFF4
  2596                           prodl	equ	0xFF3
  2597                           intcon	equ	0xFF2
  2598                           postinc0	equ	0xFEE
  2599                           fsr0h	equ	0xFEA
  2600                           fsr0l	equ	0xFE9
  2601                           wreg	equ	0xFE8
  2602                           fsr1h	equ	0xFE2
  2603                           fsr1l	equ	0xFE1
  2604                           indf2	equ	0xFDF
  2605                           postinc2	equ	0xFDE
  2606                           postdec2	equ	0xFDD
  2607                           fsr2h	equ	0xFDA
  2608                           fsr2l	equ	0xFD9
  2609                           status	equ	0xFD8
  2610                           pclatu	equ	0xFFB
  2611                           pclath	equ	0xFFA
  2612                           tblptru	equ	0xFF8
  2613                           tblptrh	equ	0xFF7
  2614                           tblptrl	equ	0xFF6
  2615                           tablat	equ	0xFF5
  2616                           prodh	equ	0xFF4
  2617                           prodl	equ	0xFF3
  2618                           intcon	equ	0xFF2
  2619                           postinc0	equ	0xFEE
  2620                           fsr0h	equ	0xFEA
  2621                           fsr0l	equ	0xFE9
  2622                           wreg	equ	0xFE8
  2623                           fsr1h	equ	0xFE2
  2624                           fsr1l	equ	0xFE1
  2625                           indf2	equ	0xFDF
  2626                           postinc2	equ	0xFDE
  2627                           postdec2	equ	0xFDD
  2628                           fsr2h	equ	0xFDA
  2629                           fsr2l	equ	0xFD9
  2630                           status	equ	0xFD8
  2631                           
  2632                           	psect	rparam
  2633  0000                     pclatu	equ	0xFFB
  2634                           pclath	equ	0xFFA
  2635                           tblptru	equ	0xFF8
  2636                           tblptrh	equ	0xFF7
  2637                           tblptrl	equ	0xFF6
  2638                           tablat	equ	0xFF5
  2639                           prodh	equ	0xFF4
  2640                           prodl	equ	0xFF3
  2641                           intcon	equ	0xFF2
  2642                           postinc0	equ	0xFEE
  2643                           fsr0h	equ	0xFEA
  2644                           fsr0l	equ	0xFE9
  2645                           wreg	equ	0xFE8
  2646                           fsr1h	equ	0xFE2
  2647                           fsr1l	equ	0xFE1
  2648                           indf2	equ	0xFDF
  2649                           postinc2	equ	0xFDE
  2650                           postdec2	equ	0xFDD
  2651                           fsr2h	equ	0xFDA
  2652                           fsr2l	equ	0xFD9
  2653                           status	equ	0xFD8
  2654                           
  2655                           	psect	temp
  2656  00004C                     btemp:
  2657                           	opt stack 0
  2658  00004C                     	ds	1
  2659  0000                     int$flags	set	btemp
  2660                           pclatu	equ	0xFFB
  2661                           pclath	equ	0xFFA
  2662                           tblptru	equ	0xFF8
  2663                           tblptrh	equ	0xFF7
  2664                           tblptrl	equ	0xFF6
  2665                           tablat	equ	0xFF5
  2666                           prodh	equ	0xFF4
  2667                           prodl	equ	0xFF3
  2668                           intcon	equ	0xFF2
  2669                           postinc0	equ	0xFEE
  2670                           fsr0h	equ	0xFEA
  2671                           fsr0l	equ	0xFE9
  2672                           wreg	equ	0xFE8
  2673                           fsr1h	equ	0xFE2
  2674                           fsr1l	equ	0xFE1
  2675                           indf2	equ	0xFDF
  2676                           postinc2	equ	0xFDE
  2677                           postdec2	equ	0xFDD
  2678                           fsr2h	equ	0xFDA
  2679                           fsr2l	equ	0xFD9
  2680                           status	equ	0xFD8


Data Sizes:
    Strings     5
    Constant    50
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     75      75
    BANK0           160      5      20
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 6
		 -> Display_ExibeNumero@Contagem(COMRAM[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_Display_ExibeNumero
    _Timer0_Inicializacao->_Timer0_Recarga
    _Display_InicializaVarredura->_Latch_Inicializacao
    _Latch_Inicializacao->_Latch_EscreveValor
    _Display_ExibeNumero->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv

Critical Paths under _Interrupt_High in COMRAM

    _Display_ExecutaVarredura->_Display_LigaDigito
    _Display_LigaDigito->i2_Latch_EscreveValor

Critical Paths under _main in BANK0

    None.

Critical Paths under _Interrupt_High in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Interrupt_High in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Interrupt_High in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Interrupt_High in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Interrupt_High in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Interrupt_High in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Interrupt_High in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Interrupt_High in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _Interrupt_High in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _Interrupt_High in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _Interrupt_High in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _Interrupt_High in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _Interrupt_High in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _Interrupt_High in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _Interrupt_High in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _Interrupt_High in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     0      5    2399
                                              0 BANK0      5     0      5
                _Display_ExibeNumero
        _Display_InicializaVarredura
            _Oscilador_Inicializacao
               _Timer0_Inicializacao
 ---------------------------------------------------------------------------------
 (1) _Timer0_Inicializacao                                 0     0      0      47
                     _Timer0_Recarga
 ---------------------------------------------------------------------------------
 (2) _Timer0_Recarga                                       2     2      0      47
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _Oscilador_Inicializacao                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display_InicializaVarredura                          0     0      0      44
                _Latch_Inicializacao
 ---------------------------------------------------------------------------------
 (2) _Latch_Inicializacao                                  1     1      0      44
                                             18 COMRAM     1     1      0
                 _Latch_EscreveValor
 ---------------------------------------------------------------------------------
 (3) _Latch_EscreveValor                                   1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _Display_ExibeNumero                                 12     8      4    2308
                                             63 COMRAM    12     8      4
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             33    25      8    1722
                                             39 COMRAM    24    16      8
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      68
                                             17 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     287
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     287
                                             30 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     290
                                             17 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Interrupt_High                                      14    14      0     623
                                              3 COMRAM    14    14      0
           _Display_ExecutaVarredura
                   i2_Timer0_Recarga
 ---------------------------------------------------------------------------------
 (5) i2_Timer0_Recarga                                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _Display_ExecutaVarredura                             0     0      0     578
                 _Display_LigaDigito
 ---------------------------------------------------------------------------------
 (6) _Display_LigaDigito                                   2     1      1     578
                                              1 COMRAM     2     1      1
               i2_Latch_EscreveValor
 ---------------------------------------------------------------------------------
 (7) i2_Latch_EscreveValor                                 1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display_ExibeNumero
     _sprintf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       _isdigit
   _Display_InicializaVarredura
     _Latch_Inicializacao
       _Latch_EscreveValor
   _Oscilador_Inicializacao
   _Timer0_Inicializacao
     _Timer0_Recarga

 _Interrupt_High (ROOT)
   _Display_ExecutaVarredura
     _Display_LigaDigito
       i2_Latch_EscreveValor
   i2_Timer0_Recarga

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      5      14       5       12.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4B      4B       1       79.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5F      12        0.0%
DATA                 0      0      5F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Mon Feb 22 13:05:18 2016

                    ??_Interrupt_High 0004                   ___wmul@multiplicand 0014  
                    i2_Timer0_Recarga 16F8                                   l112 12E0  
                                 l113 1396                                   l153 1116  
                                 l523 14EC                                   l533 15BC  
                                 prod 000FF3           __size_of_Latch_EscreveValor 0018  
                                 wreg 000FE8                                  l1201 157A  
                                l1203 1586                                  l1205 158A  
                                l1311 11BA                                  l1209 15AE  
                                l1321 11E8                                  l1313 11C2  
                                l1401 1392                                  l1323 11F4  
                                l1315 11CA                                  l1307 1196  
                                l1331 128A                                  l1411 13AA  
                                l1181 149E                                  l1165 1676  
                                l1333 12A2                                  l1183 14AA  
                                l1263 105E                                  l1423 13C8  
                                l1415 13B4                                  l1407 13A0  
                                l1193 14DE                                  l1185 14AE  
                                l1329 127A                                  l1257 1044  
                                l1283 10EE                                  l1419 13BE  
                                l1277 10E4                                  l1269 1086  
                                l1381 12D8                                  l1295 115E  
                                l1279 10E8                                  l1391 1312  
                                l1289 1136                                  l1393 134E  
                                l1397 137C                                  l1469 153A  
                                STR_1 1033                                  _LATB 000F8A  
                i2_Latch_EscreveValor 16CC                                  i2l46 0060  
         __end_of_Display_ExibeNumero 13D4                                  _main 14FE  
         Display_ExibeNumero@Contagem 0045                                  fsr0h 000FEA  
                                fsr1h 000FE2                                  fsr0l 000FE9  
                                fsr2h 000FDA                                  fsr1l 000FE1  
                                indf2 000FDF                                  fsr2l 000FD9  
                                btemp 004C                                  pclat 000FFA  
                                prodh 000FF4                                  prodl 000FF3  
                                start 009C                         __CFG_IESO$OFF 000000  
                        ___param_bank 000010                                 ?_main 006F  
                     __end_of___lldiv 14FE                                 _T0CON 000FD5  
                     __end_of___llmod 15CE                                 _TMR0H 000FD7  
                               _TMR0L 000FD6                                 _TRISB 000F93  
                      __CFG_FCMEN$OFF 000000                  Display_ExibeNumero@i 004B  
                     __end_of_dpowers 1029                       __end_of_isdigit 167E  
               ?i2_Latch_EscreveValor 0001                                 tablat 000FF5  
                               status 000FD8                  _Timer0_Inicializacao 167E  
                     __end_of_sprintf 12B0          __size_of_Latch_Inicializacao 002E  
            ?_Oscilador_Inicializacao 0001                       __initialization 169A  
                        __end_of_main 1568                                ??_main 004C  
                       __activetblptr 000002                      ___llmod@dividend 001F  
                              _ANSELA 000F38                                _ANSELB 000F39  
                      _Timer0_Recarga 16E4           __size_of_Display_LigaDigito 0012  
                              i2l1431 13E4                                i2l1441 142A  
                              i2l1433 13F2                                i2l1435 1400  
                              i2l1443 1438                                i2l1437 140E  
                              i2l1445 1466                                i2l1429 13D6  
                              i2l1439 141C                                i2l1489 005C  
               ?_Timer0_Inicializacao 0001                                ___wmul 163A  
                           ??___lldiv 001A                             ??___llmod 0027  
                              clear_0 16A0                             ??_isdigit 0012  
                        __mediumconst 0000                                tblptrh 000FF7  
                              tblptrl 000FF6                                tblptru 000FF8  
              __end_of_Timer0_Recarga 16F8                ??i2_Latch_EscreveValor 0001  
                           ??_sprintf 0030              __end_ofi2_Timer0_Recarga 170C  
                          __accesstop 0060               __end_of__initialization 16A6  
     __end_of_Oscilador_Inicializacao 171E                         ___rparam_used 000001  
           i2Latch_EscreveValor@Valor 0001                        __pcstackCOMRAM 0001  
                     ?_Timer0_Recarga 0001              Latch_Inicializacao@Valor 0013  
                        sprintf@width 003D                ??_Timer0_Inicializacao 0014  
                          __pbssBANK0 0060                       __CFG_PLLCFG$OFF 000000  
   __size_of_Display_ExecutaVarredura 00A8             ?_Display_ExecutaVarredura 0001  
                             ?___wmul 0012   __end_of_Display_InicializaVarredura 160C  
         _Display_InicializaVarredura 15CE            __end_of_Latch_EscreveValor 16CC  
                 _Latch_Inicializacao 160C                  ?_Latch_Inicializacao 0001  
                             __Hparam 0000                               __Lparam 0000  
        __size_of_Display_ExibeNumero 0124                               ___lldiv 147C  
                     __size_of___wmul 0026                               ___llmod 1568  
                        __psmallconst 1000                               __pcinit 169A  
                             __ramtop 1000                               __ptext0 14FE  
                             __ptext1 167E                               __ptext2 16E4  
                             __ptext3 170C                               __ptext4 15CE  
                             __ptext5 160C                               __ptext6 16B4  
                             __ptext7 12B0                               __ptext8 103A  
                             __ptext9 1660                             _T0CONbits 000FD5  
                             _dpowers 1001               __size_of_Interrupt_High 0094  
                             _isdigit 1660               Display_LigaDigito@Valor 0003  
    __size_of_Oscilador_Inicializacao 0012                               _sprintf 103A  
                end_of_initialization 16A6                         __Lmediumconst 0000  
               ??_Latch_Inicializacao 0013                       ___lldiv@divisor 0016  
                     ___lldiv@counter 001E                               postdec2 000FDD  
                             postinc0 000FEE                               postinc2 000FDE  
                           _TRISDbits 000F95            __end_of_Display_LigaDigito 1730  
        i2Timer0_Recarga@ValorDeCarga 0001                     ?i2_Timer0_Recarga 0001  
                  ??i2_Timer0_Recarga 0001                        __end_of___wmul 1660  
                    ??_Timer0_Recarga 0012      __end_of_Display_ExecutaVarredura 147C  
                 start_initialization 169A         __size_ofi2_Latch_EscreveValor 0018  
                   _Converte_Bcd_7seg 1029                       ___llmod@divisor 0023  
                     ___llmod@counter 0027                              ??___wmul 0016  
                           _Varredura 0060               _Oscilador_Inicializacao 170C  
                      _Interrupt_High 0008                         __pcstackBANK0 006F  
                 _Display_ExibeNumero 12B0  __size_of_Display_InicializaVarredura 003E  
           __end_of_Converte_Bcd_7seg 1033                    _Latch_EscreveValor 16B4  
                         sprintf@flag 0034         __size_of_Timer0_Inicializacao 001C  
                         sprintf@prec 0035                   ?_Latch_EscreveValor 0001  
                ?_Display_ExibeNumero 0040                             __pintcode 0008  
                            ?___lldiv 0012                              ?___llmod 001F  
              __end_of_Interrupt_High 009C                      __CFG_PRICLKEN$ON 000000  
                         __smallconst 1000                              ?_isdigit 0001  
                ??_Latch_EscreveValor 0012                              ?_sprintf 0028  
            _Display_ExecutaVarredura 13D4                        ___wmul@product 0016  
                            _LATDbits 000F8C                 ??_Display_ExibeNumero 0044  
           ??_Oscilador_Inicializacao 0012                       ?_Interrupt_High 0001  
                   ___wmul@multiplier 0012                              _Contador 0069  
         __end_of_Latch_Inicializacao 163A                    _Display_LigaDigito 171E  
                            __Hrparam 0000                              __Lrparam 0000  
                 ?_Display_LigaDigito 0002                      __size_of___lldiv 0082  
                    __size_of___llmod 0066             __size_ofi2_Timer0_Recarga 0014  
                         _isdigit$820 0013                            _ANSELDbits 000F3B  
                          sprintf@val 0037                      __size_of_isdigit 001E  
                            __ptext10 163A                              __ptext11 1568  
                            __ptext12 147C                              __ptext14 16F8  
                            __ptext15 13D4                              __ptext16 171E  
                            __ptext17 16CC                  ??_Display_LigaDigito 0003  
                    __size_of_sprintf 0276              Display_LigaDigito@Digito 0002  
                         _OSCCON2bits 000FD2                         __size_of_main 006A  
                        _TMR0_Eventos 006D             Display_ExibeNumero@Numero 0040  
                            int$flags 004C          __end_ofi2_Latch_EscreveValor 16E4  
                            main@argc 006F                              main@argv 0071  
        ?_Display_InicializaVarredura 0001                           _OSCTUNEbits 000F9B  
                          _INTCONbits 000FF2               Latch_EscreveValor@Valor 0012  
                            isdigit@c 0014                              intlevel2 0000  
                           sprintf@ap 003B                             sprintf@sp 0028  
                    ___lldiv@dividend 0012                            _OSCCONbits 000FD3  
        __end_of_Timer0_Inicializacao 169A         ??_Display_InicializaVarredura 0014  
          ??_Display_ExecutaVarredura 0004                              sprintf@c 003F  
                            sprintf@f 002A                      ___lldiv@quotient 001A  
             __size_of_Timer0_Recarga 0014                     __CFG_FOSC$INTIO67 000000  
          Timer0_Recarga@ValorDeCarga 0012  
