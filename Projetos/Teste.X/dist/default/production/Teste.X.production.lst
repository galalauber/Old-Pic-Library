

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Sep 17 18:50:19 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    33                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    34                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    35  0000                     
    36                           ; Version 1.42
    37                           ; Generated 13/04/2017 GMT
    38                           ; 
    39                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    40                           ; All rights reserved.
    41                           ; 
    42                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    43                           ; 
    44                           ; Redistribution and use in source and binary forms, with or without modification, are
    45                           ; permitted provided that the following conditions are met:
    46                           ; 
    47                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    48                           ;        conditions and the following disclaimer.
    49                           ; 
    50                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    51                           ;        of conditions and the following disclaimer in the documentation and/or other
    52                           ;        materials provided with the distribution.
    53                           ; 
    54                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    55                           ;        software without specific prior written permission.
    56                           ; 
    57                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    58                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    59                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    60                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    61                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    62                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    63                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    64                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    65                           ; 
    66                           ; 
    67                           ; Code-generator required, PIC18F46K22 Definitions
    68                           ; 
    69                           ; SFR Addresses
    70  0000                     
    71                           	psect	smallconst
    72  001000                     __psmallconst:
    73                           	opt stack 0
    74  001000  00                 	db	0
    75  001001                     _dpowers:
    76                           	opt stack 0
    77  001001  0001               	dw	1
    78  001003  0000               	dw	0
    79  001005  000A               	dw	10
    80  001007  0000               	dw	0
    81  001009  0064               	dw	100
    82  00100B  0000               	dw	0
    83  00100D  03E8               	dw	1000
    84  00100F  0000               	dw	0
    85  001011  2710               	dw	10000
    86  001013  0000               	dw	0
    87  001015  86A0               	dw	34464
    88  001017  0001               	dw	1
    89  001019  4240               	dw	16960
    90  00101B  000F               	dw	15
    91  00101D  9680               	dw	38528
    92  00101F  0098               	dw	152
    93  001021  E100               	dw	57600
    94  001023  05F5               	dw	1525
    95  001025  CA00               	dw	51712
    96  001027  3B9A               	dw	15258
    97  001029                     __end_of_dpowers:
    98                           	opt stack 0
    99  001029                     _Converte_Bcd_7seg:
   100                           	opt stack 0
   101  001029  3F                 	db	63
   102  00102A  06                 	db	6
   103  00102B  5B                 	db	91
   104  00102C  4F                 	db	79
   105  00102D  66                 	db	102
   106  00102E  6D                 	db	109
   107  00102F  7D                 	db	125
   108  001030  07                 	db	7
   109  001031  7F                 	db	127
   110  001032  6F                 	db	111
   111  001033                     __end_of_Converte_Bcd_7seg:
   112                           	opt stack 0
   113  0000                     _ANSELA	set	3896
   114  0000                     _ANSELB	set	3897
   115  0000                     _ANSELDbits	set	3899
   116  0000                     _T0CONbits	set	4053
   117  0000                     _T0CON	set	4053
   118  0000                     _TMR0L	set	4054
   119  0000                     _TMR0H	set	4055
   120  0000                     _TRISB	set	3987
   121  0000                     _LATB	set	3978
   122  0000                     _TRISDbits	set	3989
   123  0000                     _LATDbits	set	3980
   124  0000                     _OSCTUNEbits	set	3995
   125  0000                     _OSCCONbits	set	4051
   126  0000                     _INTCONbits	set	4082
   127  0000                     _T0IE	set	32661
   128  0000                     _T0IF	set	32658
   129  001033                     STR_1:
   130  001033  25                 	db	37
   131  001034  36                 	db	54	;'6'
   132  001035  6C                 	db	108	;'l'
   133  001036  75                 	db	117	;'u'
   134  001037  00                 	db	0
   135                           
   136                           ; #config settings
   137  001038  00                 	db	0	; dummy byte at the end
   138  0000                     
   139                           	psect	cinit
   140  0016D4                     __pcinit:
   141                           	opt stack 0
   142  0016D4                     start_initialization:
   143                           	opt stack 0
   144  0016D4                     __initialization:
   145                           	opt stack 0
   146                           
   147                           ; Clear objects allocated to BANK0 (1 bytes)
   148  0016D4  0100               	movlb	0
   149  0016D6  6B73               	clrf	__pbssBANK0& (0+255),b
   150                           
   151                           ; Clear objects allocated to COMRAM (14 bytes)
   152  0016D8  EE00  F03E         	lfsr	0,__pbssCOMRAM
   153  0016DC  0E0E               	movlw	14
   154  0016DE                     clear_0:
   155  0016DE  6AEE               	clrf	postinc0,c
   156  0016E0  06E8               	decf	wreg,f,c
   157  0016E2  E1FD               	bnz	clear_0
   158  0016E4                     end_of_initialization:
   159                           	opt stack 0
   160  0016E4                     __end_of__initialization:
   161                           	opt stack 0
   162  0016E4  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   163  0016E6  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   164  0016E8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   165  0016EA  6EF8               	movwf	tblptru,c
   166  0016EC  0100               	movlb	0
   167  0016EE  EFCA  F00A         	goto	_main	;jump to C main() function
   168                           tblptru	equ	0xFF8
   169                           postinc0	equ	0xFEE
   170                           wreg	equ	0xFE8
   171                           
   172                           	psect	bssCOMRAM
   173  00003E                     __pbssCOMRAM:
   174                           	opt stack 0
   175  00003E                     _Varredura:
   176                           	opt stack 0
   177  00003E                     	ds	9
   178  000047                     _Ctrl_Timer0:
   179                           	opt stack 0
   180  000047                     	ds	5
   181                           tblptru	equ	0xFF8
   182                           postinc0	equ	0xFEE
   183                           wreg	equ	0xFE8
   184                           
   185                           	psect	bssBANK0
   186  000073                     __pbssBANK0:
   187                           	opt stack 0
   188  000073                     _Eventos1s:
   189                           	opt stack 0
   190  000073                     	ds	1
   191                           tblptru	equ	0xFF8
   192                           postinc0	equ	0xFEE
   193                           wreg	equ	0xFE8
   194                           
   195                           	psect	cstackBANK0
   196  000060                     __pcstackBANK0:
   197                           	opt stack 0
   198  000060                     sprintf@flag:
   199                           	opt stack 0
   200                           
   201                           ; 1 bytes @ 0x0
   202  000060                     	ds	1
   203  000061                     sprintf@prec:
   204                           	opt stack 0
   205                           
   206                           ; 2 bytes @ 0x1
   207  000061                     	ds	2
   208  000063                     sprintf@val:
   209                           	opt stack 0
   210                           
   211                           ; 4 bytes @ 0x3
   212  000063                     	ds	4
   213  000067                     sprintf@ap:
   214                           	opt stack 0
   215                           
   216                           ; 2 bytes @ 0x7
   217  000067                     	ds	2
   218  000069                     sprintf@width:
   219                           	opt stack 0
   220                           
   221                           ; 2 bytes @ 0x9
   222  000069                     	ds	2
   223  00006B                     sprintf@c:
   224                           	opt stack 0
   225                           
   226                           ; 1 bytes @ 0xB
   227  00006B                     	ds	1
   228  00006C                     Display_ExibeNumero@Contagem:
   229                           	opt stack 0
   230                           
   231                           ; 6 bytes @ 0xC
   232  00006C                     	ds	6
   233  000072                     Display_ExibeNumero@i:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0x12
   237  000072                     	ds	1
   238                           tblptru	equ	0xFF8
   239                           postinc0	equ	0xFEE
   240                           wreg	equ	0xFE8
   241                           
   242                           	psect	cstackCOMRAM
   243  000001                     __pcstackCOMRAM:
   244                           	opt stack 0
   245  000001                     i2Timer0_CarregaValor@ValorDeCarga:
   246                           	opt stack 0
   247                           
   248                           ; 4 bytes @ 0x0
   249  000001                     	ds	4
   250  000005                     ??_InterrupcoesDeAltaPrioridade:
   251                           
   252                           ; 1 bytes @ 0x4
   253  000005                     	ds	14
   254  000013                     ??_isdigit:
   255  000013                     ?___wmul:
   256                           	opt stack 0
   257  000013                     ?___lldiv:
   258                           	opt stack 0
   259  000013                     Latch_EscreveValor@Valor:
   260                           	opt stack 0
   261  000013                     ___wmul@multiplier:
   262                           	opt stack 0
   263  000013                     Timer0_CarregaValor@ValorDeCarga:
   264                           	opt stack 0
   265  000013                     ___lldiv@dividend:
   266                           	opt stack 0
   267                           
   268                           ; 4 bytes @ 0x12
   269  000013                     	ds	1
   270  000014                     Latch_Inicializacao@Valor:
   271                           	opt stack 0
   272  000014                     Display_LigaDigito@Digito:
   273                           	opt stack 0
   274  000014                     _isdigit$839:
   275                           	opt stack 0
   276                           
   277                           ; 1 bytes @ 0x13
   278  000014                     	ds	1
   279  000015                     Display_LigaDigito@Valor:
   280                           	opt stack 0
   281  000015                     isdigit@c:
   282                           	opt stack 0
   283  000015                     ___wmul@multiplicand:
   284                           	opt stack 0
   285                           
   286                           ; 2 bytes @ 0x14
   287  000015                     	ds	1
   288  000016                     Display_Inicializacao@Digito:
   289                           	opt stack 0
   290                           
   291                           ; 1 bytes @ 0x15
   292  000016                     	ds	1
   293  000017                     Display_Inicializacao@Valor:
   294                           	opt stack 0
   295  000017                     ___wmul@product:
   296                           	opt stack 0
   297  000017                     ___lldiv@divisor:
   298                           	opt stack 0
   299                           
   300                           ; 4 bytes @ 0x16
   301  000017                     	ds	4
   302  00001B                     ___lldiv@quotient:
   303                           	opt stack 0
   304                           
   305                           ; 4 bytes @ 0x1A
   306  00001B                     	ds	4
   307  00001F                     ___lldiv@counter:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x1E
   311  00001F                     	ds	1
   312  000020                     ?___llmod:
   313                           	opt stack 0
   314  000020                     ___llmod@dividend:
   315                           	opt stack 0
   316                           
   317                           ; 4 bytes @ 0x1F
   318  000020                     	ds	4
   319  000024                     ___llmod@divisor:
   320                           	opt stack 0
   321                           
   322                           ; 4 bytes @ 0x23
   323  000024                     	ds	4
   324  000028                     ___llmod@counter:
   325                           	opt stack 0
   326                           
   327                           ; 1 bytes @ 0x27
   328  000028                     	ds	1
   329  000029                     ?_sprintf:
   330                           	opt stack 0
   331  000029                     sprintf@sp:
   332                           	opt stack 0
   333                           
   334                           ; 2 bytes @ 0x28
   335  000029                     	ds	2
   336  00002B                     sprintf@f:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x2A
   340  00002B                     	ds	6
   341  000031                     ??_sprintf:
   342                           
   343                           ; 1 bytes @ 0x30
   344  000031                     	ds	4
   345  000035                     Display_ExibeNumero@Numero:
   346                           	opt stack 0
   347                           
   348                           ; 4 bytes @ 0x34
   349  000035                     	ds	4
   350  000039                     ??_Display_ExibeNumero:
   351                           
   352                           ; 1 bytes @ 0x38
   353  000039                     	ds	1
   354  00003A                     main@numero:
   355                           	opt stack 0
   356                           
   357                           ; 4 bytes @ 0x39
   358  00003A                     	ds	4
   359                           tblptru	equ	0xFF8
   360                           postinc0	equ	0xFEE
   361                           wreg	equ	0xFE8
   362                           
   363 ;;
   364 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   365 ;;
   366 ;; *************** function _main *****************
   367 ;; Defined at:
   368 ;;		line 16 in file "App.c"
   369 ;; Parameters:    Size  Location     Type
   370 ;;		None
   371 ;; Auto vars:     Size  Location     Type
   372 ;;  numero          4   57[COMRAM] unsigned long 
   373 ;; Return value:  Size  Location     Type
   374 ;;                  1    wreg      void 
   375 ;; Registers used:
   376 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   377 ;; Tracked objects:
   378 ;;		On entry : 0/0
   379 ;;		On exit  : 0/0
   380 ;;		Unchanged: 0/0
   381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   382 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   383 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   385 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   386 ;;Total ram usage:        4 bytes
   387 ;; Hardware stack levels required when called:    6
   388 ;; This function calls:
   389 ;;		_Display_ExecutaVarredura
   390 ;;		_Display_ExibeNumero
   391 ;;		_Display_InicializaVarredura
   392 ;;		_Display_Inicializacao
   393 ;;		_Habilita_Interrupcoes
   394 ;;		_Oscilador_Inicializacao
   395 ;;		_Teclado_Inicializacao
   396 ;;		_Timer0_Inicializacao
   397 ;; This function is called by:
   398 ;;		Startup code after reset
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           	psect	text0
   403  001594                     __ptext0:
   404                           	opt stack 0
   405  001594                     _main:
   406                           	opt stack 25
   407                           
   408                           ;App.c: 17: Ulong numero = 0;
   409                           
   410                           ;incstack = 0
   411  001594  0E00               	movlw	0
   412  001596  6E3A               	movwf	main@numero,c
   413  001598  0E00               	movlw	0
   414  00159A  6E3B               	movwf	main@numero+1,c
   415  00159C  0E00               	movlw	0
   416  00159E  6E3C               	movwf	main@numero+2,c
   417  0015A0  0E00               	movlw	0
   418  0015A2  6E3D               	movwf	main@numero+3,c
   419                           
   420                           ;App.c: 18: Display_Inicializacao(0b00100000,0b00000000);
   421  0015A4  0E00               	movlw	0
   422  0015A6  6E16               	movwf	Display_Inicializacao@Digito,c
   423  0015A8  0E20               	movlw	32
   424  0015AA  ECB0  F00B         	call	_Display_Inicializacao
   425                           
   426                           ;App.c: 19: Teclado_Inicializacao();
   427  0015AE  ECCB  F00B         	call	_Teclado_Inicializacao	;wreg free
   428                           
   429                           ;App.c: 20: Oscilador_Inicializacao();
   430  0015B2  ECC3  F00B         	call	_Oscilador_Inicializacao	;wreg free
   431                           
   432                           ;App.c: 21: Timer0_Inicializacao();
   433  0015B6  EC59  F00B         	call	_Timer0_Inicializacao	;wreg free
   434                           
   435                           ;App.c: 22: Habilita_Interrupcoes();
   436  0015BA  ECCF  F00B         	call	_Habilita_Interrupcoes	;wreg free
   437                           
   438                           ;App.c: 23: Display_InicializaVarredura();
   439  0015BE  EC30  F00B         	call	_Display_InicializaVarredura	;wreg free
   440  0015C2                     l1819:
   441                           
   442                           ;App.c: 26: Display_ExibeNumero(numero);
   443  0015C2  C03A  F035         	movff	main@numero,Display_ExibeNumero@Numero
   444  0015C6  C03B  F036         	movff	main@numero+1,Display_ExibeNumero@Numero+1
   445  0015CA  C03C  F037         	movff	main@numero+2,Display_ExibeNumero@Numero+2
   446  0015CE  C03D  F038         	movff	main@numero+3,Display_ExibeNumero@Numero+3
   447  0015D2  EC83  F009         	call	_Display_ExibeNumero	;wreg free
   448                           
   449                           ;App.c: 27: Display_ExecutaVarredura();
   450  0015D6  EC0D  F00A         	call	_Display_ExecutaVarredura	;wreg free
   451                           
   452                           ;App.c: 29: if (Eventos1s.Evento1 == 1)
   453  0015DA  0100               	movlb	0	; () banked
   454  0015DC  A173               	btfss	_Eventos1s& (0+255),0,b
   455  0015DE  D7F1               	goto	l1819
   456                           
   457                           ; BSR set to: 0
   458                           ;App.c: 30: {
   459                           ;App.c: 31: Eventos1s.Evento1 = 0;
   460  0015E0  0100               	movlb	0	; () banked
   461  0015E2  9173               	bcf	_Eventos1s& (0+255),0,b
   462                           
   463                           ; BSR set to: 0
   464                           ;App.c: 32: numero++;
   465  0015E4  0E01               	movlw	1
   466  0015E6  263A               	addwf	main@numero,f,c
   467  0015E8  0E00               	movlw	0
   468  0015EA  223B               	addwfc	main@numero+1,f,c
   469  0015EC  223C               	addwfc	main@numero+2,f,c
   470  0015EE  223D               	addwfc	main@numero+3,f,c
   471                           
   472                           ; BSR set to: 0
   473                           
   474                           ; BSR set to: 0
   475  0015F0  D7E8               	goto	l1819
   476  0015F2                     __end_of_main:
   477                           	opt stack 0
   478                           tblptru	equ	0xFF8
   479                           postinc0	equ	0xFEE
   480                           wreg	equ	0xFE8
   481                           
   482 ;; *************** function _Timer0_Inicializacao *****************
   483 ;; Defined at:
   484 ;;		line 65 in file "Timer0.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  1    wreg      void 
   491 ;; Registers used:
   492 ;;		wreg, status,2, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   498 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   501 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   502 ;;Total ram usage:        0 bytes
   503 ;; Hardware stack levels used:    1
   504 ;; Hardware stack levels required when called:    4
   505 ;; This function calls:
   506 ;;		_Timer0_CarregaValor
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           	psect	text1
   513  0016B2                     __ptext1:
   514                           	opt stack 0
   515  0016B2                     _Timer0_Inicializacao:
   516                           	opt stack 26
   517                           
   518                           ;Timer0.c: 67: Ctrl_Timer0.Temporizador10ms = 10;
   519                           
   520                           ; BSR set to: 0
   521                           ;incstack = 0
   522  0016B2  0E0A               	movlw	10
   523  0016B4  6E47               	movwf	_Ctrl_Timer0,c
   524                           
   525                           ;Timer0.c: 68: Ctrl_Timer0.Temporizador100ms = 100;
   526  0016B6  0E64               	movlw	100
   527  0016B8  6E48               	movwf	_Ctrl_Timer0+1,c
   528                           
   529                           ;Timer0.c: 69: Ctrl_Timer0.Temporizador250ms = 250;
   530  0016BA  0EFA               	movlw	250
   531  0016BC  6E49               	movwf	_Ctrl_Timer0+2,c
   532                           
   533                           ;Timer0.c: 70: Ctrl_Timer0.Temporizador1s = 1000;
   534  0016BE  0E03               	movlw	3
   535  0016C0  6E4B               	movwf	_Ctrl_Timer0+4,c
   536  0016C2  0EE8               	movlw	232
   537  0016C4  6E4A               	movwf	_Ctrl_Timer0+3,c
   538                           
   539                           ;Timer0.c: 72: T0CON = 0;
   540  0016C6  0E00               	movlw	0
   541  0016C8  6ED5               	movwf	4053,c	;volatile
   542                           
   543                           ;Timer0.c: 74: Timer0_CarregaValor();
   544  0016CA  EC88  F00B         	call	_Timer0_CarregaValor	;wreg free
   545                           
   546                           ;Timer0.c: 77: INTCONbits.TMR0IE = 1;
   547  0016CE  8AF2               	bsf	intcon,5,c	;volatile
   548                           
   549                           ;Timer0.c: 80: T0CONbits.TMR0ON = 1;
   550  0016D0  8ED5               	bsf	4053,7,c	;volatile
   551  0016D2  0012               	return		;funcret
   552  0016D4                     __end_of_Timer0_Inicializacao:
   553                           	opt stack 0
   554                           tblptru	equ	0xFF8
   555                           intcon	equ	0xFF2
   556                           postinc0	equ	0xFEE
   557                           wreg	equ	0xFE8
   558                           
   559 ;; *************** function _Timer0_CarregaValor *****************
   560 ;; Defined at:
   561 ;;		line 46 in file "Timer0.c"
   562 ;; Parameters:    Size  Location     Type
   563 ;;		None
   564 ;; Auto vars:     Size  Location     Type
   565 ;;  ValorDeCarga    4   18[COMRAM] struct .
   566 ;; Return value:  Size  Location     Type
   567 ;;                  1    wreg      void 
   568 ;; Registers used:
   569 ;;		wreg, status,2
   570 ;; Tracked objects:
   571 ;;		On entry : 0/0
   572 ;;		On exit  : 0/0
   573 ;;		Unchanged: 0/0
   574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   575 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   576 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   578 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   579 ;;Total ram usage:        4 bytes
   580 ;; Hardware stack levels used:    1
   581 ;; Hardware stack levels required when called:    3
   582 ;; This function calls:
   583 ;;		Nothing
   584 ;; This function is called by:
   585 ;;		_Timer0_Inicializacao
   586 ;; This function uses a non-reentrant model
   587 ;;
   588                           
   589                           	psect	text2
   590  001710                     __ptext2:
   591                           	opt stack 0
   592  001710                     _Timer0_CarregaValor:
   593                           	opt stack 26
   594                           
   595                           ;Timer0.c: 48: Uint32 ValorDeCarga;
   596                           ;Timer0.c: 50: T0IF = 0;
   597                           
   598                           ;incstack = 0
   599  001710  94F2               	bcf	intcon,2,c	;volatile
   600                           
   601                           ;Timer0.c: 52: ValorDeCarga.valor = (65536 - (((8000000 * 4) / 4) / 2000));
   602  001712  0E60               	movlw	96
   603  001714  6E13               	movwf	Timer0_CarregaValor@ValorDeCarga,c
   604  001716  0EF0               	movlw	240
   605  001718  6E14               	movwf	Timer0_CarregaValor@ValorDeCarga+1,c
   606  00171A  0E00               	movlw	0
   607  00171C  6E15               	movwf	Timer0_CarregaValor@ValorDeCarga+2,c
   608  00171E  0E00               	movlw	0
   609  001720  6E16               	movwf	Timer0_CarregaValor@ValorDeCarga+3,c
   610                           
   611                           ;Timer0.c: 54: TMR0H = ValorDeCarga.bytes.byte1;
   612  001722  C014  FFD7         	movff	Timer0_CarregaValor@ValorDeCarga+1,4055	;volatile
   613                           
   614                           ;Timer0.c: 55: TMR0L = ValorDeCarga.bytes.byte0;
   615  001726  C013  FFD6         	movff	Timer0_CarregaValor@ValorDeCarga,4054	;volatile
   616  00172A  0012               	return		;funcret
   617  00172C                     __end_of_Timer0_CarregaValor:
   618                           	opt stack 0
   619                           tblptru	equ	0xFF8
   620                           intcon	equ	0xFF2
   621                           postinc0	equ	0xFEE
   622                           wreg	equ	0xFE8
   623                           
   624 ;; *************** function _Teclado_Inicializacao *****************
   625 ;; Defined at:
   626 ;;		line 219 in file "Base_1.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;                  1    wreg      void 
   633 ;; Registers used:
   634 ;;		wreg, status,2
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   644 ;;Total ram usage:        0 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    3
   647 ;; This function calls:
   648 ;;		Nothing
   649 ;; This function is called by:
   650 ;;		_main
   651 ;; This function uses a non-reentrant model
   652 ;;
   653                           
   654                           	psect	text3
   655  001796                     __ptext3:
   656                           	opt stack 0
   657  001796                     _Teclado_Inicializacao:
   658                           	opt stack 27
   659                           
   660                           ;Base_1.c: 221: ANSELA = 0b00000100;
   661                           
   662                           ;incstack = 0
   663  001796  0E04               	movlw	4
   664  001798  010F               	movlb	15	; () banked
   665  00179A  6F38               	movwf	56,b	;volatile
   666                           
   667                           ; BSR set to: 15
   668  00179C  0012               	return		;funcret
   669  00179E                     __end_of_Teclado_Inicializacao:
   670                           	opt stack 0
   671                           tblptru	equ	0xFF8
   672                           intcon	equ	0xFF2
   673                           postinc0	equ	0xFEE
   674                           wreg	equ	0xFE8
   675                           
   676 ;; *************** function _Oscilador_Inicializacao *****************
   677 ;; Defined at:
   678 ;;		line 33 in file "Oscilador.c"
   679 ;; Parameters:    Size  Location     Type
   680 ;;		None
   681 ;; Auto vars:     Size  Location     Type
   682 ;;		None
   683 ;; Return value:  Size  Location     Type
   684 ;;                  1    wreg      void 
   685 ;; Registers used:
   686 ;;		wreg, status,2
   687 ;; Tracked objects:
   688 ;;		On entry : 0/0
   689 ;;		On exit  : 0/0
   690 ;;		Unchanged: 0/0
   691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   695 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   696 ;;Total ram usage:        0 bytes
   697 ;; Hardware stack levels used:    1
   698 ;; Hardware stack levels required when called:    3
   699 ;; This function calls:
   700 ;;		Nothing
   701 ;; This function is called by:
   702 ;;		_main
   703 ;; This function uses a non-reentrant model
   704 ;;
   705                           
   706                           	psect	text4
   707  001786                     __ptext4:
   708                           	opt stack 0
   709  001786                     _Oscilador_Inicializacao:
   710                           	opt stack 27
   711                           
   712                           ;Oscilador.c: 35: OSCCONbits.SCS = 0;
   713                           
   714                           ; BSR set to: 15
   715                           ;incstack = 0
   716  001786  0EFC               	movlw	-4
   717  001788  16D3               	andwf	4051,f,c	;volatile
   718                           
   719                           ;Oscilador.c: 40: OSCCONbits.IRCF = 6;
   720  00178A  50D3               	movf	4051,w,c	;volatile
   721  00178C  0B8F               	andlw	-113
   722  00178E  0960               	iorlw	96
   723  001790  6ED3               	movwf	4051,c	;volatile
   724                           
   725                           ;Oscilador.c: 79: OSCTUNEbits.PLLEN= 1;
   726  001792  8C9B               	bsf	3995,6,c	;volatile
   727  001794  0012               	return		;funcret
   728  001796                     __end_of_Oscilador_Inicializacao:
   729                           	opt stack 0
   730                           tblptru	equ	0xFF8
   731                           intcon	equ	0xFF2
   732                           postinc0	equ	0xFEE
   733                           wreg	equ	0xFE8
   734                           
   735 ;; *************** function _Habilita_Interrupcoes *****************
   736 ;; Defined at:
   737 ;;		line 81 in file "Interrupcoes.c"
   738 ;; Parameters:    Size  Location     Type
   739 ;;		None
   740 ;; Auto vars:     Size  Location     Type
   741 ;;		None
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		None
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   755 ;;Total ram usage:        0 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    3
   758 ;; This function calls:
   759 ;;		Nothing
   760 ;; This function is called by:
   761 ;;		_main
   762 ;; This function uses a non-reentrant model
   763 ;;
   764                           
   765                           	psect	text5
   766  00179E                     __ptext5:
   767                           	opt stack 0
   768  00179E                     _Habilita_Interrupcoes:
   769                           	opt stack 27
   770                           
   771                           ;Interrupcoes.c: 83: INTCONbits.GIE = 1;
   772                           
   773                           ;incstack = 0
   774  00179E  8EF2               	bsf	intcon,7,c	;volatile
   775                           
   776                           ;Interrupcoes.c: 84: INTCONbits.PEIE = 1;
   777  0017A0  8CF2               	bsf	intcon,6,c	;volatile
   778  0017A2  0012               	return		;funcret
   779  0017A4                     __end_of_Habilita_Interrupcoes:
   780                           	opt stack 0
   781                           tblptru	equ	0xFF8
   782                           intcon	equ	0xFF2
   783                           postinc0	equ	0xFEE
   784                           wreg	equ	0xFE8
   785                           
   786 ;; *************** function _Display_Inicializacao *****************
   787 ;; Defined at:
   788 ;;		line 76 in file "Base_1.c"
   789 ;; Parameters:    Size  Location     Type
   790 ;;  Valor           1    wreg     unsigned char 
   791 ;;  Digito          1   21[COMRAM] unsigned char 
   792 ;; Auto vars:     Size  Location     Type
   793 ;;  Valor           1   22[COMRAM] unsigned char 
   794 ;; Return value:  Size  Location     Type
   795 ;;                  1    wreg      void 
   796 ;; Registers used:
   797 ;;		wreg, status,2, cstack
   798 ;; Tracked objects:
   799 ;;		On entry : 0/0
   800 ;;		On exit  : 0/0
   801 ;;		Unchanged: 0/0
   802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   803 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   804 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   807 ;;Total ram usage:        2 bytes
   808 ;; Hardware stack levels used:    1
   809 ;; Hardware stack levels required when called:    5
   810 ;; This function calls:
   811 ;;		_Display_LigaDigito
   812 ;;		_Latch_Inicializacao
   813 ;; This function is called by:
   814 ;;		_main
   815 ;; This function uses a non-reentrant model
   816 ;;
   817                           
   818                           	psect	text6
   819  001760                     __ptext6:
   820                           	opt stack 0
   821  001760                     _Display_Inicializacao:
   822                           	opt stack 25
   823                           
   824                           ;incstack = 0
   825                           ;Display_Inicializacao@Valor stored from wreg
   826  001760  6E17               	movwf	Display_Inicializacao@Valor,c
   827                           
   828                           ;Base_1.c: 78: Latch_Inicializacao(0);
   829  001762  0E00               	movlw	0
   830  001764  EC19  F00B         	call	_Latch_Inicializacao
   831                           
   832                           ;Base_1.c: 79: Display_LigaDigito(Valor,Digito);
   833  001768  C016  F014         	movff	Display_Inicializacao@Digito,Display_LigaDigito@Digito
   834  00176C  5017               	movf	Display_Inicializacao@Valor,w,c
   835  00176E  ECBA  F00B         	call	_Display_LigaDigito
   836  001772  0012               	return		;funcret
   837  001774                     __end_of_Display_Inicializacao:
   838                           	opt stack 0
   839                           tblptru	equ	0xFF8
   840                           intcon	equ	0xFF2
   841                           postinc0	equ	0xFEE
   842                           wreg	equ	0xFE8
   843                           
   844 ;; *************** function _Display_InicializaVarredura *****************
   845 ;; Defined at:
   846 ;;		line 102 in file "Base_1.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;		None
   849 ;; Auto vars:     Size  Location     Type
   850 ;;		None
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, status,2, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   864 ;;Total ram usage:        0 bytes
   865 ;; Hardware stack levels used:    1
   866 ;; Hardware stack levels required when called:    5
   867 ;; This function calls:
   868 ;;		_Latch_Inicializacao
   869 ;; This function is called by:
   870 ;;		_main
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           
   874                           	psect	text7
   875  001660                     __ptext7:
   876                           	opt stack 0
   877  001660                     _Display_InicializaVarredura:
   878                           	opt stack 25
   879                           
   880                           ;Base_1.c: 104: Latch_Inicializacao (0);
   881                           
   882                           ;incstack = 0
   883  001660  0E00               	movlw	0
   884  001662  EC19  F00B         	call	_Latch_Inicializacao
   885                           
   886                           ;Base_1.c: 106: Varredura.Sequencia = 0;
   887  001666  0E00               	movlw	0
   888  001668  6E3E               	movwf	_Varredura,c
   889                           
   890                           ;Base_1.c: 107: Varredura.Buffer.Digito1 = 0;
   891  00166A  0E00               	movlw	0
   892  00166C  6E3F               	movwf	_Varredura+1,c
   893                           
   894                           ;Base_1.c: 108: Varredura.Buffer.Digito2 = 0;
   895  00166E  0E00               	movlw	0
   896  001670  6E40               	movwf	_Varredura+2,c
   897                           
   898                           ;Base_1.c: 109: Varredura.Buffer.Digito3 = 0;
   899  001672  0E00               	movlw	0
   900  001674  6E41               	movwf	_Varredura+3,c
   901                           
   902                           ;Base_1.c: 110: Varredura.Buffer.Digito4 = 0;
   903  001676  0E00               	movlw	0
   904  001678  6E42               	movwf	_Varredura+4,c
   905                           
   906                           ;Base_1.c: 111: Varredura.Buffer.Digito5 = 0;
   907  00167A  0E00               	movlw	0
   908  00167C  6E43               	movwf	_Varredura+5,c
   909                           
   910                           ;Base_1.c: 112: Varredura.Buffer.Digito6 = 0;
   911  00167E  0E00               	movlw	0
   912  001680  6E44               	movwf	_Varredura+6,c
   913                           
   914                           ;Base_1.c: 113: Varredura.Buffer.Leds = 0;
   915  001682  0E00               	movlw	0
   916  001684  6E45               	movwf	_Varredura+7,c
   917                           
   918                           ;Base_1.c: 115: Varredura.Opcoes.valor = 0;
   919  001686  0E00               	movlw	0
   920  001688  6E46               	movwf	_Varredura+8,c
   921  00168A  0012               	return		;funcret
   922  00168C                     __end_of_Display_InicializaVarredura:
   923                           	opt stack 0
   924                           tblptru	equ	0xFF8
   925                           intcon	equ	0xFF2
   926                           postinc0	equ	0xFEE
   927                           wreg	equ	0xFE8
   928                           
   929 ;; *************** function _Latch_Inicializacao *****************
   930 ;; Defined at:
   931 ;;		line 29 in file "Base_1.c"
   932 ;; Parameters:    Size  Location     Type
   933 ;;  Valor           1    wreg     unsigned char 
   934 ;; Auto vars:     Size  Location     Type
   935 ;;  Valor           1   19[COMRAM] unsigned char 
   936 ;; Return value:  Size  Location     Type
   937 ;;                  1    wreg      void 
   938 ;; Registers used:
   939 ;;		wreg, status,2, cstack
   940 ;; Tracked objects:
   941 ;;		On entry : 0/0
   942 ;;		On exit  : 0/0
   943 ;;		Unchanged: 0/0
   944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   945 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   946 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   948 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   949 ;;Total ram usage:        1 bytes
   950 ;; Hardware stack levels used:    1
   951 ;; Hardware stack levels required when called:    4
   952 ;; This function calls:
   953 ;;		_Latch_EscreveValor
   954 ;; This function is called by:
   955 ;;		_Display_Inicializacao
   956 ;;		_Display_InicializaVarredura
   957 ;; This function uses a non-reentrant model
   958 ;;
   959                           
   960                           	psect	text8
   961  001632                     __ptext8:
   962                           	opt stack 0
   963  001632                     _Latch_Inicializacao:
   964                           	opt stack 25
   965                           
   966                           ;incstack = 0
   967                           ;Latch_Inicializacao@Valor stored from wreg
   968  001632  6E14               	movwf	Latch_Inicializacao@Valor,c
   969                           
   970                           ;Base_1.c: 33: LATDbits.LATD3 = 1;
   971  001634  868C               	bsf	3980,3,c	;volatile
   972                           
   973                           ;Base_1.c: 34: TRISDbits.TRISD3 = 0;
   974  001636  9695               	bcf	3989,3,c	;volatile
   975                           
   976                           ;Base_1.c: 35: ANSELDbits.ANSD3 = 0;
   977  001638  010F               	movlb	15	; () banked
   978  00163A  973B               	bcf	59,3,b	;volatile
   979                           
   980                           ;Base_1.c: 39: LATDbits.LATD2 = 0;
   981  00163C  948C               	bcf	3980,2,c	;volatile
   982                           
   983                           ;Base_1.c: 40: TRISDbits.TRISD2 = 0;
   984  00163E  9495               	bcf	3989,2,c	;volatile
   985                           
   986                           ;Base_1.c: 41: ANSELDbits.ANSD2 = 0;
   987  001640  010F               	movlb	15	; () banked
   988  001642  953B               	bcf	59,2,b	;volatile
   989                           
   990                           ; BSR set to: 15
   991                           ;Base_1.c: 44: LATB = 0;
   992  001644  0E00               	movlw	0
   993  001646  6E8A               	movwf	3978,c	;volatile
   994                           
   995                           ;Base_1.c: 45: TRISB = 0;
   996  001648  0E00               	movlw	0
   997  00164A  6E93               	movwf	3987,c	;volatile
   998                           
   999                           ;Base_1.c: 46: ANSELB = 0;
  1000  00164C  0E00               	movlw	0
  1001  00164E  010F               	movlb	15	; () banked
  1002  001650  6F39               	movwf	57,b	;volatile
  1003                           
  1004                           ; BSR set to: 15
  1005                           ;Base_1.c: 48: Latch_EscreveValor(Valor);
  1006  001652  5014               	movf	Latch_Inicializacao@Valor,w,c
  1007  001654  ECA4  F00B         	call	_Latch_EscreveValor
  1008                           
  1009                           ;Base_1.c: 50: LATB = 0;
  1010  001658  0E00               	movlw	0
  1011  00165A  6E8A               	movwf	3978,c	;volatile
  1012                           
  1013                           ;Base_1.c: 51: LATDbits.LATD3 = 0;
  1014  00165C  968C               	bcf	3980,3,c	;volatile
  1015  00165E  0012               	return		;funcret
  1016  001660                     __end_of_Latch_Inicializacao:
  1017                           	opt stack 0
  1018                           tblptru	equ	0xFF8
  1019                           intcon	equ	0xFF2
  1020                           postinc0	equ	0xFEE
  1021                           wreg	equ	0xFE8
  1022                           
  1023 ;; *************** function _Display_ExibeNumero *****************
  1024 ;; Defined at:
  1025 ;;		line 154 in file "Base_1.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;  Numero          4   52[COMRAM] unsigned long 
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;  Contagem        6   12[BANK0 ] unsigned char [6]
  1030 ;;  i               1   18[BANK0 ] unsigned char 
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : 0/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1040 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1041 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1042 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1043 ;;      Totals:         5       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1044 ;;Total ram usage:       12 bytes
  1045 ;; Hardware stack levels used:    1
  1046 ;; Hardware stack levels required when called:    5
  1047 ;; This function calls:
  1048 ;;		_sprintf
  1049 ;; This function is called by:
  1050 ;;		_main
  1051 ;; This function uses a non-reentrant model
  1052 ;;
  1053                           
  1054                           	psect	text9
  1055  001306                     __ptext9:
  1056                           	opt stack 0
  1057  001306                     _Display_ExibeNumero:
  1058                           	opt stack 25
  1059                           
  1060                           ;Base_1.c: 156: Uchar Contagem[6];
  1061                           ;Base_1.c: 157: Uchar i;
  1062                           ;Base_1.c: 159: sprintf (&Contagem[0],"%6lu",Numero);
  1063                           
  1064                           ;incstack = 0
  1065  001306  0E6C               	movlw	low Display_ExibeNumero@Contagem
  1066  001308  6E29               	movwf	sprintf@sp,c
  1067  00130A  0E00               	movlw	high Display_ExibeNumero@Contagem
  1068  00130C  6E2A               	movwf	sprintf@sp+1,c
  1069  00130E  0E33               	movlw	low STR_1
  1070  001310  6E2B               	movwf	sprintf@f,c
  1071  001312  0E10               	movlw	high STR_1
  1072  001314  6E2C               	movwf	sprintf@f+1,c
  1073  001316  C035  F02D         	movff	Display_ExibeNumero@Numero,?_sprintf+4
  1074  00131A  C036  F02E         	movff	Display_ExibeNumero@Numero+1,?_sprintf+5
  1075  00131E  C037  F02F         	movff	Display_ExibeNumero@Numero+2,?_sprintf+6
  1076  001322  C038  F030         	movff	Display_ExibeNumero@Numero+3,?_sprintf+7
  1077  001326  EC1D  F008         	call	_sprintf	;wreg free
  1078                           
  1079                           ;Base_1.c: 161: for (i = 0; i < 6;i++)
  1080  00132A  0E00               	movlw	0
  1081  00132C  0100               	movlb	0	; () banked
  1082  00132E  6F72               	movwf	Display_ExibeNumero@i& (0+255),b
  1083  001330                     l1751:
  1084                           
  1085                           ; BSR set to: 0
  1086  001330  0E05               	movlw	5
  1087  001332  0100               	movlb	0	; () banked
  1088  001334  6572               	cpfsgt	Display_ExibeNumero@i& (0+255),b
  1089  001336  D001               	goto	l79
  1090  001338  D062               	goto	l80
  1091  00133A                     l79:
  1092                           
  1093                           ; BSR set to: 0
  1094                           ;Base_1.c: 162: {
  1095                           ;Base_1.c: 163: if (Varredura.Opcoes.OmiteZeros == 1)
  1096  00133A  A046               	btfss	_Varredura+8,0,c
  1097  00133C  D038               	goto	l1763
  1098                           
  1099                           ; BSR set to: 0
  1100                           ;Base_1.c: 164: {
  1101                           ;Base_1.c: 165: if (Contagem[i]== ' ')
  1102  00133E  0100               	movlb	0	; () banked
  1103  001340  5172               	movf	Display_ExibeNumero@i& (0+255),w,b
  1104  001342  0D01               	mullw	1
  1105  001344  0E6C               	movlw	low Display_ExibeNumero@Contagem
  1106  001346  24F3               	addwf	prodl,w,c
  1107  001348  6ED9               	movwf	fsr2l,c
  1108  00134A  0E00               	movlw	high Display_ExibeNumero@Contagem
  1109  00134C  20F4               	addwfc	prodh,w,c
  1110  00134E  6EDA               	movwf	fsr2h,c
  1111  001350  0E20               	movlw	32
  1112  001352  18DE               	xorwf	postinc2,w,c
  1113  001354  A4D8               	btfss	status,2,c
  1114  001356  D044               	goto	l1767
  1115                           
  1116                           ; BSR set to: 0
  1117                           ;Base_1.c: 166: {
  1118                           ;Base_1.c: 167: Varredura.Buffer.Digitos[i] = 0b00000000;
  1119  001358  0100               	movlb	0	; () banked
  1120  00135A  5172               	movf	Display_ExibeNumero@i& (0+255),w,b
  1121  00135C  0D01               	mullw	1
  1122  00135E  0E3F               	movlw	low (_Varredura+1)
  1123  001360  24F3               	addwf	prodl,w,c
  1124  001362  6ED9               	movwf	fsr2l,c
  1125  001364  0E00               	movlw	high (_Varredura+1)
  1126  001366  20F4               	addwfc	prodh,w,c
  1127  001368  6EDA               	movwf	fsr2h,c
  1128  00136A  0E00               	movlw	0
  1129  00136C  D037               	goto	L1
  1130  00136E                     l1761:
  1131                           
  1132                           ; BSR set to: 0
  1133                           ;Base_1.c: 172: Varredura.Buffer.Digitos[i] = Converte_Bcd_7seg[Contagem[i]];
  1134  00136E  0100               	movlb	0	; () banked
  1135  001370  5172               	movf	Display_ExibeNumero@i& (0+255),w,b
  1136  001372  0D01               	mullw	1
  1137  001374  0E6C               	movlw	low Display_ExibeNumero@Contagem
  1138  001376  24F3               	addwf	prodl,w,c
  1139  001378  6ED9               	movwf	fsr2l,c
  1140  00137A  0E00               	movlw	high Display_ExibeNumero@Contagem
  1141  00137C  20F4               	addwfc	prodh,w,c
  1142  00137E  6EDA               	movwf	fsr2h,c
  1143  001380  50DF               	movf	indf2,w,c
  1144  001382  6E39               	movwf	??_Display_ExibeNumero& (0+255),c
  1145  001384  5039               	movf	??_Display_ExibeNumero,w,c
  1146  001386  0D01               	mullw	1
  1147  001388  0E29               	movlw	low _Converte_Bcd_7seg
  1148  00138A  24F3               	addwf	prodl,w,c
  1149  00138C  6EF6               	movwf	tblptrl,c
  1150  00138E  0E10               	movlw	high _Converte_Bcd_7seg
  1151  001390  20F4               	addwfc	prodh,w,c
  1152  001392  6EF7               	movwf	tblptrh,c
  1153  001394                     	if	0	;There are less than 3 active tblptr bytes
  1154  001394                     	endif
  1155  001394  0100               	movlb	0	; () banked
  1156  001396  5172               	movf	Display_ExibeNumero@i& (0+255),w,b
  1157  001398  0D01               	mullw	1
  1158  00139A  0E3F               	movlw	low (_Varredura+1)
  1159  00139C  24F3               	addwf	prodl,w,c
  1160  00139E  6ED9               	movwf	fsr2l,c
  1161  0013A0  0E00               	movlw	high (_Varredura+1)
  1162  0013A2  20F4               	addwfc	prodh,w,c
  1163  0013A4  6EDA               	movwf	fsr2h,c
  1164  0013A6  0008               	tblrd		*
  1165  0013A8  CFF5 FFDF          	movff	tablat,indf2
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;Base_1.c: 173: }
  1169                           ;Base_1.c: 174: }
  1170  0013AC  D025               	goto	l1771
  1171  0013AE                     l1763:
  1172                           
  1173                           ; BSR set to: 0
  1174                           ;Base_1.c: 175: else
  1175                           ;Base_1.c: 176: {
  1176                           ;Base_1.c: 177: if (Contagem[i]== ' ')
  1177  0013AE  0100               	movlb	0	; () banked
  1178  0013B0  5172               	movf	Display_ExibeNumero@i& (0+255),w,b
  1179  0013B2  0D01               	mullw	1
  1180  0013B4  0E6C               	movlw	low Display_ExibeNumero@Contagem
  1181  0013B6  24F3               	addwf	prodl,w,c
  1182  0013B8  6ED9               	movwf	fsr2l,c
  1183  0013BA  0E00               	movlw	high Display_ExibeNumero@Contagem
  1184  0013BC  20F4               	addwfc	prodh,w,c
  1185  0013BE  6EDA               	movwf	fsr2h,c
  1186  0013C0  0E20               	movlw	32
  1187  0013C2  18DE               	xorwf	postinc2,w,c
  1188  0013C4  A4D8               	btfss	status,2,c
  1189  0013C6  D00C               	goto	l1767
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;Base_1.c: 178: {
  1193                           ;Base_1.c: 179: Varredura.Buffer.Digitos[i] = 0b00111111;
  1194  0013C8  0100               	movlb	0	; () banked
  1195  0013CA  5172               	movf	Display_ExibeNumero@i& (0+255),w,b
  1196  0013CC  0D01               	mullw	1
  1197  0013CE  0E3F               	movlw	low (_Varredura+1)
  1198  0013D0  24F3               	addwf	prodl,w,c
  1199  0013D2  6ED9               	movwf	fsr2l,c
  1200  0013D4  0E00               	movlw	high (_Varredura+1)
  1201  0013D6  20F4               	addwfc	prodh,w,c
  1202  0013D8  6EDA               	movwf	fsr2h,c
  1203  0013DA  0E3F               	movlw	63
  1204  0013DC                     L1:
  1205  0013DC  6EDF               	movwf	indf2,c
  1206                           
  1207                           ;Base_1.c: 180: }
  1208  0013DE  D00C               	goto	l1771
  1209  0013E0                     l1767:
  1210                           
  1211                           ; BSR set to: 0
  1212                           ;Base_1.c: 181: else
  1213                           ;Base_1.c: 182: {
  1214                           ;Base_1.c: 183: Contagem[i] -= 0x30;
  1215  0013E0  0100               	movlb	0	; () banked
  1216  0013E2  5172               	movf	Display_ExibeNumero@i& (0+255),w,b
  1217  0013E4  0D01               	mullw	1
  1218  0013E6  0E6C               	movlw	low Display_ExibeNumero@Contagem
  1219  0013E8  24F3               	addwf	prodl,w,c
  1220  0013EA  6ED9               	movwf	fsr2l,c
  1221  0013EC  0E00               	movlw	high Display_ExibeNumero@Contagem
  1222  0013EE  20F4               	addwfc	prodh,w,c
  1223  0013F0  6EDA               	movwf	fsr2h,c
  1224  0013F2  0E30               	movlw	48
  1225  0013F4  5EDF               	subwf	indf2,f,c
  1226  0013F6  D7BB               	goto	l1761
  1227  0013F8                     l1771:
  1228                           
  1229                           ; BSR set to: 0
  1230  0013F8  0100               	movlb	0	; () banked
  1231  0013FA  2B72               	incf	Display_ExibeNumero@i& (0+255),f,b
  1232  0013FC  D799               	goto	l1751
  1233  0013FE                     l80:
  1234                           
  1235                           ; BSR set to: 0
  1236                           ;Base_1.c: 185: }
  1237                           ;Base_1.c: 186: }
  1238                           ;Base_1.c: 187: }
  1239                           ;Base_1.c: 189: if (Varredura.Opcoes.ExibePonto1 == 1)
  1240  0013FE  B246               	btfsc	_Varredura+8,1,c
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;Base_1.c: 190: {
  1244                           ;Base_1.c: 191: Varredura.Buffer.Digito1 |= 0x80;
  1245  001400  8E3F               	bsf	_Varredura+1,7,c
  1246                           
  1247                           ; BSR set to: 0
  1248                           ;Base_1.c: 192: }
  1249                           ;Base_1.c: 193: if (Varredura.Opcoes.ExibePonto2 == 1)
  1250                           
  1251                           ; BSR set to: 0
  1252  001402  B446               	btfsc	_Varredura+8,2,c
  1253                           
  1254                           ; BSR set to: 0
  1255                           ;Base_1.c: 194: {
  1256                           ;Base_1.c: 195: Varredura.Buffer.Digito2 |= 0x80;
  1257  001404  8E40               	bsf	_Varredura+2,7,c
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;Base_1.c: 196: }
  1261                           ;Base_1.c: 197: if (Varredura.Opcoes.ExibePonto3 == 1)
  1262                           
  1263                           ; BSR set to: 0
  1264  001406  B646               	btfsc	_Varredura+8,3,c
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;Base_1.c: 198: {
  1268                           ;Base_1.c: 199: Varredura.Buffer.Digito3 |= 0x80;
  1269  001408  8E41               	bsf	_Varredura+3,7,c
  1270                           
  1271                           ; BSR set to: 0
  1272                           ;Base_1.c: 200: }
  1273                           ;Base_1.c: 201: if (Varredura.Opcoes.ExibePonto4 == 1)
  1274                           
  1275                           ; BSR set to: 0
  1276  00140A  B846               	btfsc	_Varredura+8,4,c
  1277                           
  1278                           ; BSR set to: 0
  1279                           ;Base_1.c: 202: {
  1280                           ;Base_1.c: 203: Varredura.Buffer.Digito4 |= 0x80;
  1281  00140C  8E42               	bsf	_Varredura+4,7,c
  1282                           
  1283                           ; BSR set to: 0
  1284                           ;Base_1.c: 204: }
  1285                           ;Base_1.c: 205: if (Varredura.Opcoes.ExibePonto5 == 1)
  1286                           
  1287                           ; BSR set to: 0
  1288  00140E  BA46               	btfsc	_Varredura+8,5,c
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;Base_1.c: 206: {
  1292                           ;Base_1.c: 207: Varredura.Buffer.Digito5 |= 0x80;
  1293  001410  8E43               	bsf	_Varredura+5,7,c
  1294                           
  1295                           ; BSR set to: 0
  1296                           ;Base_1.c: 208: }
  1297                           ;Base_1.c: 209: if (Varredura.Opcoes.ExibePonto6 == 1)
  1298                           
  1299                           ; BSR set to: 0
  1300  001412  AC46               	btfss	_Varredura+8,6,c
  1301  001414  0012               	return	
  1302                           
  1303                           ; BSR set to: 0
  1304                           ;Base_1.c: 210: {
  1305                           ;Base_1.c: 211: Varredura.Buffer.Digito6 |= 0x80;
  1306  001416  8E44               	bsf	_Varredura+6,7,c
  1307  001418  0012               	return	
  1308  00141A                     __end_of_Display_ExibeNumero:
  1309                           	opt stack 0
  1310                           tblptru	equ	0xFF8
  1311                           tblptrh	equ	0xFF7
  1312                           tblptrl	equ	0xFF6
  1313                           tablat	equ	0xFF5
  1314                           prodh	equ	0xFF4
  1315                           prodl	equ	0xFF3
  1316                           intcon	equ	0xFF2
  1317                           postinc0	equ	0xFEE
  1318                           wreg	equ	0xFE8
  1319                           indf2	equ	0xFDF
  1320                           postinc2	equ	0xFDE
  1321                           fsr2h	equ	0xFDA
  1322                           fsr2l	equ	0xFD9
  1323                           status	equ	0xFD8
  1324                           
  1325 ;; *************** function _sprintf *****************
  1326 ;; Defined at:
  1327 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\doprnt.c"
  1328 ;; Parameters:    Size  Location     Type
  1329 ;;  sp              2   40[COMRAM] PTR unsigned char 
  1330 ;;		 -> Display_ExibeNumero@Contagem(6), 
  1331 ;;  f               2   42[COMRAM] PTR const unsigned char 
  1332 ;;		 -> STR_1(5), 
  1333 ;; Auto vars:     Size  Location     Type
  1334 ;;  val             4    3[BANK0 ] unsigned long 
  1335 ;;  tmpval          4    0        struct .
  1336 ;;  cp              3    0        PTR const unsigned char 
  1337 ;;  width           2    9[BANK0 ] int 
  1338 ;;  ap              2    7[BANK0 ] PTR void [1]
  1339 ;;		 -> ?_sprintf(2), 
  1340 ;;  prec            2    1[BANK0 ] int 
  1341 ;;  len             2    0        unsigned int 
  1342 ;;  c               1   11[BANK0 ] char 
  1343 ;;  flag            1    0[BANK0 ] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  2   40[COMRAM] int 
  1346 ;; Registers used:
  1347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1353 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1354 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1355 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1356 ;;      Totals:        12      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1357 ;;Total ram usage:       24 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; Hardware stack levels required when called:    4
  1360 ;; This function calls:
  1361 ;;		___lldiv
  1362 ;;		___llmod
  1363 ;;		___wmul
  1364 ;;		_isdigit
  1365 ;; This function is called by:
  1366 ;;		_Display_ExibeNumero
  1367 ;; This function uses a non-reentrant model
  1368 ;;
  1369                           
  1370                           	psect	text10
  1371  00103A                     __ptext10:
  1372                           	opt stack 0
  1373  00103A                     _sprintf:
  1374                           	opt stack 25
  1375                           
  1376                           ;doprnt.c: 494: va_list ap;
  1377                           ;doprnt.c: 499: signed char c;
  1378                           ;doprnt.c: 501: int width;
  1379                           ;doprnt.c: 504: int prec;
  1380                           ;doprnt.c: 508: unsigned char flag;
  1381                           ;doprnt.c: 523: union {
  1382                           ;doprnt.c: 524: unsigned long vd;
  1383                           ;doprnt.c: 525: double integ;
  1384                           ;doprnt.c: 526: } tmpval;
  1385                           ;doprnt.c: 528: unsigned long val;
  1386                           ;doprnt.c: 529: unsigned len;
  1387                           ;doprnt.c: 530: const char * cp;
  1388                           ;doprnt.c: 533: *ap = __va_start();
  1389                           
  1390                           ; BSR set to: 0
  1391                           ;incstack = 0
  1392  00103A  0E2D               	movlw	low (?_sprintf+4)
  1393  00103C  0100               	movlb	0	; () banked
  1394  00103E  6F67               	movwf	sprintf@ap& (0+255),b
  1395  001040  0E00               	movlw	high (?_sprintf+4)
  1396  001042  0100               	movlb	0	; () banked
  1397  001044  6F68               	movwf	(sprintf@ap+1)& (0+255),b
  1398                           
  1399                           ;doprnt.c: 536: while(c = *f++) {
  1400  001046  D14B               	goto	l1683
  1401  001048                     l1609:
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;doprnt.c: 538: if(c != '%')
  1405  001048  0E25               	movlw	37
  1406  00104A  0100               	movlb	0	; () banked
  1407  00104C  196B               	xorwf	sprintf@c& (0+255),w,b
  1408  00104E  B4D8               	btfsc	status,2,c
  1409  001050  D009               	goto	l1615
  1410                           
  1411                           ; BSR set to: 0
  1412                           ;doprnt.c: 540: {
  1413                           ;doprnt.c: 541: ((*sp++ = (c)));
  1414  001052  C029  FFD9         	movff	sprintf@sp,fsr2l
  1415  001056  C02A  FFDA         	movff	sprintf@sp+1,fsr2h
  1416  00105A  C06B  FFDF         	movff	sprintf@c,indf2
  1417                           
  1418                           ; BSR set to: 0
  1419  00105E  4A29               	infsnz	sprintf@sp,f,c
  1420  001060  2A2A               	incf	sprintf@sp+1,f,c
  1421                           
  1422                           ;doprnt.c: 542: continue;
  1423  001062  D13D               	goto	l1683
  1424  001064                     l1615:
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;doprnt.c: 543: }
  1428                           ;doprnt.c: 546: width = 0;
  1429  001064  0E00               	movlw	0
  1430  001066  0100               	movlb	0	; () banked
  1431  001068  6F6A               	movwf	(sprintf@width+1)& (0+255),b
  1432  00106A  0E00               	movlw	0
  1433  00106C  6F69               	movwf	sprintf@width& (0+255),b
  1434                           
  1435                           ;doprnt.c: 548: flag = 0;
  1436  00106E  0E00               	movlw	0
  1437  001070  0100               	movlb	0	; () banked
  1438  001072  6F60               	movwf	sprintf@flag& (0+255),b
  1439                           
  1440                           ; BSR set to: 0
  1441                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1442  001074  C02B  FFF6         	movff	sprintf@f,tblptrl
  1443  001078  C02C  FFF7         	movff	sprintf@f+1,tblptrh
  1444  00107C                     	if	0	;tblptru may be non-zero
  1445  00107C                     	endif
  1446  00107C                     	if	0	;tblptru may be non-zero
  1447  00107C                     	endif
  1448  00107C  0008               	tblrd		*
  1449  00107E  50F5               	movf	tablat,w,c
  1450  001080  EC79  F00B         	call	_isdigit
  1451  001084  A0D8               	btfss	status,0,c
  1452  001086  D03D               	goto	l1635
  1453                           
  1454                           ;doprnt.c: 598: width = 0;
  1455  001088  0E00               	movlw	0
  1456  00108A  0100               	movlb	0	; () banked
  1457  00108C  6F6A               	movwf	(sprintf@width+1)& (0+255),b
  1458  00108E  0E00               	movlw	0
  1459  001090  6F69               	movwf	sprintf@width& (0+255),b
  1460  001092                     l1621:
  1461                           
  1462                           ;doprnt.c: 600: width *= 10;
  1463  001092  C069  F013         	movff	sprintf@width,___wmul@multiplier
  1464  001096  C06A  F014         	movff	sprintf@width+1,___wmul@multiplier+1
  1465  00109A  0E00               	movlw	0
  1466  00109C  6E16               	movwf	___wmul@multiplicand+1,c
  1467  00109E  0E0A               	movlw	10
  1468  0010A0  6E15               	movwf	___wmul@multiplicand,c
  1469  0010A2  EC46  F00B         	call	___wmul	;wreg free
  1470  0010A6  C013  F069         	movff	?___wmul,sprintf@width
  1471  0010AA  C014  F06A         	movff	?___wmul+1,sprintf@width+1
  1472                           
  1473                           ;doprnt.c: 601: width += *f++ - '0';
  1474  0010AE  0ED0               	movlw	208
  1475  0010B0  6E31               	movwf	??_sprintf& (0+255),c
  1476  0010B2  0EFF               	movlw	255
  1477  0010B4  6E32               	movwf	(??_sprintf+1)& (0+255),c
  1478  0010B6  C02B  FFF6         	movff	sprintf@f,tblptrl
  1479  0010BA  C02C  FFF7         	movff	sprintf@f+1,tblptrh
  1480  0010BE                     	if	0	;tblptru may be non-zero
  1481  0010BE                     	endif
  1482  0010BE                     	if	0	;tblptru may be non-zero
  1483  0010BE                     	endif
  1484  0010BE  0008               	tblrd		*
  1485  0010C0  50F5               	movf	tablat,w,c
  1486  0010C2  6E33               	movwf	(??_sprintf+2)& (0+255),c
  1487  0010C4  6A34               	clrf	(??_sprintf+3)& (0+255),c
  1488  0010C6  5031               	movf	??_sprintf,w,c
  1489  0010C8  2633               	addwf	??_sprintf+2,f,c
  1490  0010CA  5032               	movf	??_sprintf+1,w,c
  1491  0010CC  2234               	addwfc	??_sprintf+3,f,c
  1492  0010CE  5033               	movf	??_sprintf+2,w,c
  1493  0010D0  0100               	movlb	0	; () banked
  1494  0010D2  2769               	addwf	sprintf@width& (0+255),f,b
  1495  0010D4  5034               	movf	??_sprintf+3,w,c
  1496  0010D6  0100               	movlb	0	; () banked
  1497  0010D8  236A               	addwfc	(sprintf@width+1)& (0+255),f,b
  1498                           
  1499                           ; BSR set to: 0
  1500  0010DA  4A2B               	infsnz	sprintf@f,f,c
  1501  0010DC  2A2C               	incf	sprintf@f+1,f,c
  1502                           
  1503                           ; BSR set to: 0
  1504                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1505  0010DE  C02B  FFF6         	movff	sprintf@f,tblptrl
  1506  0010E2  C02C  FFF7         	movff	sprintf@f+1,tblptrh
  1507  0010E6                     	if	0	;tblptru may be non-zero
  1508  0010E6                     	endif
  1509  0010E6                     	if	0	;tblptru may be non-zero
  1510  0010E6                     	endif
  1511  0010E6  0008               	tblrd		*
  1512  0010E8  50F5               	movf	tablat,w,c
  1513  0010EA  EC79  F00B         	call	_isdigit
  1514  0010EE  A0D8               	btfss	status,0,c
  1515  0010F0  D008               	goto	l1635
  1516  0010F2  D7CF               	goto	l1621
  1517  0010F4                     l1629:
  1518                           
  1519                           ;doprnt.c: 643: flag |= 0x10;
  1520  0010F4  0100               	movlb	0	; () banked
  1521  0010F6  8960               	bsf	sprintf@flag& (0+255),4,b
  1522                           
  1523                           ;doprnt.c: 644: goto loop;
  1524  0010F8  D004               	goto	l1635
  1525  0010FA                     l1631:
  1526                           
  1527                           ; BSR set to: 0
  1528                           ;doprnt.c: 818: flag |= 0xC0;
  1529  0010FA  0EC0               	movlw	192
  1530  0010FC  0100               	movlb	0	; () banked
  1531  0010FE  1360               	iorwf	sprintf@flag& (0+255),f,b
  1532                           
  1533                           ; BSR set to: 0
  1534                           ;doprnt.c: 822: }
  1535                           
  1536                           ;doprnt.c: 819: break;
  1537  001100  D015               	goto	l181
  1538  001102                     l1635:
  1539  001102  C02B  FFF6         	movff	sprintf@f,tblptrl
  1540  001106  C02C  FFF7         	movff	sprintf@f+1,tblptrh
  1541  00110A  4A2B               	infsnz	sprintf@f,f,c
  1542  00110C  2A2C               	incf	sprintf@f+1,f,c
  1543  00110E                     	if	0	;tblptru may be non-zero
  1544  00110E                     	endif
  1545  00110E                     	if	0	;tblptru may be non-zero
  1546  00110E                     	endif
  1547  00110E  0008               	tblrd		*
  1548  001110  CFF5 F06B          	movff	tablat,sprintf@c
  1549  001114  0100               	movlb	0	; () banked
  1550  001116  516B               	movf	sprintf@c& (0+255),w,b
  1551                           
  1552                           ; Switch size 1, requested type "space"
  1553                           ; Number of cases is 3, Range of values is 0 to 117
  1554                           ; switch strategies available:
  1555                           ; Name         Instructions Cycles
  1556                           ; simple_byte           10     6 (average)
  1557                           ;	Chosen strategy is simple_byte
  1558  001118  0A00               	xorlw	0	; case 0
  1559  00111A  B4D8               	btfsc	status,2,c
  1560  00111C  D0ED               	goto	l1685
  1561  00111E  0A6C               	xorlw	108	; case 108
  1562  001120  B4D8               	btfsc	status,2,c
  1563  001122  D7E8               	goto	l1629
  1564  001124  0A19               	xorlw	25	; case 117
  1565  001126  B4D8               	btfsc	status,2,c
  1566  001128  D7E8               	goto	l1631
  1567  00112A  D0D9               	goto	l1683
  1568  00112C                     l181:
  1569                           
  1570                           ; BSR set to: 0
  1571                           ;doprnt.c: 1273: {
  1572                           ;doprnt.c: 1281: if(flag & 0x10)
  1573  00112C  0100               	movlb	0	; () banked
  1574  00112E  A960               	btfss	sprintf@flag& (0+255),4,b
  1575  001130  D00E               	goto	l1641
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;doprnt.c: 1282: val = (*(unsigned long *)__va_arg((*(unsigned long **)ap), (unsigned lo
      +                          ng)0));
  1579  001132  C067  FFD9         	movff	sprintf@ap,fsr2l
  1580  001136  C068  FFDA         	movff	sprintf@ap+1,fsr2h
  1581  00113A  CFDE F063          	movff	postinc2,sprintf@val
  1582  00113E  CFDE F064          	movff	postinc2,sprintf@val+1
  1583  001142  CFDE F065          	movff	postinc2,sprintf@val+2
  1584  001146  CFDE F066          	movff	postinc2,sprintf@val+3
  1585                           
  1586                           ; BSR set to: 0
  1587  00114A  0E04               	movlw	4
  1588  00114C  D010               	goto	L2
  1589  00114E                     l1641:
  1590                           
  1591                           ; BSR set to: 0
  1592                           ;doprnt.c: 1283: else
  1593                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1594  00114E  C067  FFD9         	movff	sprintf@ap,fsr2l
  1595  001152  C068  FFDA         	movff	sprintf@ap+1,fsr2h
  1596  001156  CFDE F031          	movff	postinc2,??_sprintf
  1597  00115A  CFDD F032          	movff	postdec2,??_sprintf+1
  1598  00115E  C031  F063         	movff	??_sprintf,sprintf@val
  1599  001162  C032  F064         	movff	??_sprintf+1,sprintf@val+1
  1600  001166  0100               	movlb	0	; () banked
  1601  001168  6B65               	clrf	(sprintf@val+2)& (0+255),b
  1602  00116A  6B66               	clrf	(sprintf@val+3)& (0+255),b
  1603                           
  1604                           ; BSR set to: 0
  1605  00116C  0E02               	movlw	2
  1606  00116E                     L2:
  1607  00116E  0100               	movlb	0	; () banked
  1608  001170  2767               	addwf	sprintf@ap& (0+255),f,b
  1609  001172  0E00               	movlw	0
  1610  001174  2368               	addwfc	(sprintf@ap+1)& (0+255),f,b
  1611                           
  1612                           ; BSR set to: 0
  1613                           ;doprnt.c: 1287: }
  1614                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1615                           
  1616                           ; BSR set to: 0
  1617  001176  0E01               	movlw	1
  1618  001178  0100               	movlb	0	; () banked
  1619  00117A  6F6B               	movwf	sprintf@c& (0+255),b
  1620  00117C                     l1647:
  1621                           
  1622                           ; BSR set to: 0
  1623  00117C  0E0A               	movlw	10
  1624  00117E  0100               	movlb	0	; () banked
  1625  001180  196B               	xorwf	sprintf@c& (0+255),w,b
  1626  001182  B4D8               	btfsc	status,2,c
  1627  001184  D01E               	goto	l1659
  1628                           
  1629                           ; BSR set to: 0
  1630                           ;doprnt.c: 1306: if(val < dpowers[c])
  1631                           
  1632                           ; BSR set to: 0
  1633                           
  1634                           ; BSR set to: 0
  1635  001186  0100               	movlb	0	; () banked
  1636  001188  516B               	movf	sprintf@c& (0+255),w,b
  1637  00118A  0D04               	mullw	4
  1638  00118C  0E01               	movlw	low _dpowers
  1639  00118E  24F3               	addwf	prodl,w,c
  1640  001190  6EF6               	movwf	tblptrl,c
  1641  001192  0E10               	movlw	high _dpowers
  1642  001194  20F4               	addwfc	prodh,w,c
  1643  001196  6EF7               	movwf	tblptrh,c
  1644  001198                     	if	0	;There are less than 3 active tblptr bytes
  1645  001198                     	endif
  1646  001198  0009               	tblrd		*+
  1647  00119A  50F5               	movf	tablat,w,c
  1648  00119C  0100               	movlb	0	; () banked
  1649  00119E  5D63               	subwf	sprintf@val& (0+255),w,b
  1650  0011A0  0009               	tblrd		*+
  1651  0011A2  50F5               	movf	tablat,w,c
  1652  0011A4  0100               	movlb	0	; () banked
  1653  0011A6  5964               	subwfb	(sprintf@val+1)& (0+255),w,b
  1654  0011A8  0009               	tblrd		*+
  1655  0011AA  50F5               	movf	tablat,w,c
  1656  0011AC  0100               	movlb	0	; () banked
  1657  0011AE  5965               	subwfb	(sprintf@val+2)& (0+255),w,b
  1658  0011B0  0009               	tblrd		*+
  1659  0011B2  50F5               	movf	tablat,w,c
  1660  0011B4  0100               	movlb	0	; () banked
  1661  0011B6  5966               	subwfb	(sprintf@val+3)& (0+255),w,b
  1662  0011B8  A0D8               	btfss	status,0,c
  1663  0011BA  D003               	goto	l1659
  1664                           
  1665                           ; BSR set to: 0
  1666                           
  1667                           ; BSR set to: 0
  1668                           
  1669                           ; BSR set to: 0
  1670                           ;doprnt.c: 1307: break;
  1671  0011BC  0100               	movlb	0	; () banked
  1672  0011BE  2B6B               	incf	sprintf@c& (0+255),f,b
  1673  0011C0  D7DD               	goto	l1647
  1674  0011C2                     l1659:
  1675                           
  1676                           ; BSR set to: 0
  1677                           ;doprnt.c: 1381: if(width > c)
  1678  0011C2  0E80               	movlw	128
  1679  0011C4  0100               	movlb	0	; () banked
  1680  0011C6  BF6B               	btfsc	sprintf@c& (0+255),7,b
  1681  0011C8  0E7F               	movlw	127
  1682  0011CA  6E31               	movwf	??_sprintf& (0+255),c
  1683  0011CC  0100               	movlb	0	; () banked
  1684  0011CE  5169               	movf	sprintf@width& (0+255),w,b
  1685  0011D0  0100               	movlb	0	; () banked
  1686  0011D2  5D6B               	subwf	sprintf@c& (0+255),w,b
  1687  0011D4  0100               	movlb	0	; () banked
  1688  0011D6  516A               	movf	(sprintf@width+1)& (0+255),w,b
  1689  0011D8  0A80               	xorlw	128
  1690  0011DA  5831               	subwfb	??_sprintf& (0+255),w,c
  1691  0011DC  B0D8               	btfsc	status,0,c
  1692  0011DE  D00B               	goto	l1663
  1693                           
  1694                           ; BSR set to: 0
  1695                           ;doprnt.c: 1382: width -= c;
  1696  0011E0  0100               	movlb	0	; () banked
  1697  0011E2  516B               	movf	sprintf@c& (0+255),w,b
  1698  0011E4  0100               	movlb	0	; () banked
  1699  0011E6  5F69               	subwf	sprintf@width& (0+255),f,b
  1700  0011E8  0E00               	movlw	0
  1701  0011EA  0100               	movlb	0	; () banked
  1702  0011EC  BF6B               	btfsc	sprintf@c& (0+255),7,b
  1703  0011EE  0EFF               	movlw	255
  1704  0011F0  0100               	movlb	0	; () banked
  1705  0011F2  5B6A               	subwfb	(sprintf@width+1)& (0+255),f,b
  1706  0011F4  D005               	goto	l1665
  1707  0011F6                     l1663:
  1708                           
  1709                           ; BSR set to: 0
  1710                           ;doprnt.c: 1383: else
  1711                           ;doprnt.c: 1384: width = 0;
  1712  0011F6  0E00               	movlw	0
  1713  0011F8  0100               	movlb	0	; () banked
  1714  0011FA  6F6A               	movwf	(sprintf@width+1)& (0+255),b
  1715  0011FC  0E00               	movlw	0
  1716  0011FE  6F69               	movwf	sprintf@width& (0+255),b
  1717  001200                     l1665:
  1718                           
  1719                           ; BSR set to: 0
  1720                           ;doprnt.c: 1422: {
  1721                           ;doprnt.c: 1424: if(width
  1722                           ;doprnt.c: 1428: )
  1723  001200  0100               	movlb	0	; () banked
  1724  001202  5169               	movf	sprintf@width& (0+255),w,b
  1725  001204  0100               	movlb	0	; () banked
  1726  001206  116A               	iorwf	(sprintf@width+1)& (0+255),w,b
  1727  001208  B4D8               	btfsc	status,2,c
  1728  00120A  D012               	goto	l1673
  1729  00120C                     l1667:
  1730                           
  1731                           ; BSR set to: 0
  1732                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  1733  00120C  C029  FFD9         	movff	sprintf@sp,fsr2l
  1734  001210  C02A  FFDA         	movff	sprintf@sp+1,fsr2h
  1735  001214  0E20               	movlw	32
  1736  001216  6EDF               	movwf	indf2,c
  1737                           
  1738                           ; BSR set to: 0
  1739  001218  4A29               	infsnz	sprintf@sp,f,c
  1740  00121A  2A2A               	incf	sprintf@sp+1,f,c
  1741                           
  1742                           ; BSR set to: 0
  1743                           ;doprnt.c: 1431: while(--width);
  1744  00121C  0100               	movlb	0	; () banked
  1745  00121E  0769               	decf	sprintf@width& (0+255),f,b
  1746  001220  A0D8               	btfss	status,0,c
  1747  001222  076A               	decf	(sprintf@width+1)& (0+255),f,b
  1748  001224  0100               	movlb	0	; () banked
  1749  001226  5169               	movf	sprintf@width& (0+255),w,b
  1750  001228  0100               	movlb	0	; () banked
  1751  00122A  116A               	iorwf	(sprintf@width+1)& (0+255),w,b
  1752  00122C  A4D8               	btfss	status,2,c
  1753  00122E  D7EE               	goto	l1667
  1754  001230                     l1673:
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;doprnt.c: 1469: }
  1758                           ;doprnt.c: 1472: prec = c;
  1759  001230  0100               	movlb	0	; () banked
  1760  001232  516B               	movf	sprintf@c& (0+255),w,b
  1761  001234  0100               	movlb	0	; () banked
  1762  001236  6F61               	movwf	sprintf@prec& (0+255),b
  1763  001238  6B62               	clrf	(sprintf@prec+1)& (0+255),b
  1764  00123A  BF61               	btfsc	sprintf@prec& (0+255),7,b
  1765  00123C  0762               	decf	(sprintf@prec+1)& (0+255),f,b
  1766                           
  1767                           ;doprnt.c: 1474: while(prec--) {
  1768  00123E  D044               	goto	l1681
  1769  001240                     l1675:
  1770                           
  1771                           ; BSR set to: 0
  1772                           ;doprnt.c: 1478: {
  1773                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1774  001240  C061  F031         	movff	sprintf@prec,??_sprintf
  1775  001244  C062  F032         	movff	sprintf@prec+1,??_sprintf+1
  1776  001248  90D8               	bcf	status,0,c
  1777  00124A  3631               	rlcf	??_sprintf,f,c
  1778  00124C  3632               	rlcf	??_sprintf+1,f,c
  1779  00124E  90D8               	bcf	status,0,c
  1780  001250  3631               	rlcf	??_sprintf,f,c
  1781  001252  3632               	rlcf	??_sprintf+1,f,c
  1782  001254  0E01               	movlw	low _dpowers
  1783  001256  2431               	addwf	??_sprintf,w,c
  1784  001258  6EF6               	movwf	tblptrl,c
  1785  00125A  0E10               	movlw	high _dpowers
  1786  00125C  2032               	addwfc	??_sprintf+1,w,c
  1787  00125E  6EF7               	movwf	tblptrh,c
  1788  001260                     	if	0	;There are less than 3 active tblptr bytes
  1789  001260                     	endif
  1790  001260  0009               	tblrd		*+
  1791  001262  CFF5 F017          	movff	tablat,___lldiv@divisor
  1792  001266  0009               	tblrd		*+
  1793  001268  CFF5 F018          	movff	tablat,___lldiv@divisor+1
  1794  00126C  0009               	tblrd		*+
  1795  00126E  CFF5 F019          	movff	tablat,___lldiv@divisor+2
  1796  001272  000A               	tblrd		*-
  1797  001274  CFF5 F01A          	movff	tablat,___lldiv@divisor+3
  1798  001278  C063  F013         	movff	sprintf@val,___lldiv@dividend
  1799  00127C  C064  F014         	movff	sprintf@val+1,___lldiv@dividend+1
  1800  001280  C065  F015         	movff	sprintf@val+2,___lldiv@dividend+2
  1801  001284  C066  F016         	movff	sprintf@val+3,___lldiv@dividend+3
  1802  001288  EC56  F00A         	call	___lldiv	;wreg free
  1803  00128C  C013  F020         	movff	?___lldiv,___llmod@dividend
  1804  001290  C014  F021         	movff	?___lldiv+1,___llmod@dividend+1
  1805  001294  C015  F022         	movff	?___lldiv+2,___llmod@dividend+2
  1806  001298  C016  F023         	movff	?___lldiv+3,___llmod@dividend+3
  1807  00129C  0E0A               	movlw	10
  1808  00129E  6E24               	movwf	___llmod@divisor,c
  1809  0012A0  0E00               	movlw	0
  1810  0012A2  6E25               	movwf	___llmod@divisor+1,c
  1811  0012A4  0E00               	movlw	0
  1812  0012A6  6E26               	movwf	___llmod@divisor+2,c
  1813  0012A8  0E00               	movlw	0
  1814  0012AA  6E27               	movwf	___llmod@divisor+3,c
  1815  0012AC  EC97  F00A         	call	___llmod	;wreg free
  1816  0012B0  5020               	movf	?___llmod,w,c
  1817  0012B2  0F30               	addlw	48
  1818  0012B4  0100               	movlb	0	; () banked
  1819  0012B6  6F6B               	movwf	sprintf@c& (0+255),b
  1820                           
  1821                           ; BSR set to: 0
  1822                           ;doprnt.c: 1523: }
  1823                           ;doprnt.c: 1524: ((*sp++ = (c)));
  1824  0012B8  C029  FFD9         	movff	sprintf@sp,fsr2l
  1825  0012BC  C02A  FFDA         	movff	sprintf@sp+1,fsr2h
  1826  0012C0  C06B  FFDF         	movff	sprintf@c,indf2
  1827                           
  1828                           ; BSR set to: 0
  1829  0012C4  4A29               	infsnz	sprintf@sp,f,c
  1830  0012C6  2A2A               	incf	sprintf@sp+1,f,c
  1831  0012C8                     l1681:
  1832                           
  1833                           ; BSR set to: 0
  1834  0012C8  0100               	movlb	0	; () banked
  1835  0012CA  0761               	decf	sprintf@prec& (0+255),f,b
  1836  0012CC  A0D8               	btfss	status,0,c
  1837  0012CE  0762               	decf	(sprintf@prec+1)& (0+255),f,b
  1838  0012D0  0100               	movlb	0	; () banked
  1839  0012D2  2961               	incf	sprintf@prec& (0+255),w,b
  1840  0012D4  E1B5               	bnz	l1675
  1841  0012D6  0100               	movlb	0	; () banked
  1842  0012D8  2962               	incf	(sprintf@prec+1)& (0+255),w,b
  1843  0012DA  A4D8               	btfss	status,2,c
  1844  0012DC  D7B1               	goto	l1675
  1845  0012DE                     l1683:
  1846                           
  1847                           ; BSR set to: 0
  1848  0012DE  C02B  FFF6         	movff	sprintf@f,tblptrl
  1849  0012E2  C02C  FFF7         	movff	sprintf@f+1,tblptrh
  1850  0012E6  4A2B               	infsnz	sprintf@f,f,c
  1851  0012E8  2A2C               	incf	sprintf@f+1,f,c
  1852  0012EA                     	if	0	;tblptru may be non-zero
  1853  0012EA                     	endif
  1854  0012EA                     	if	0	;tblptru may be non-zero
  1855  0012EA                     	endif
  1856  0012EA  0008               	tblrd		*
  1857  0012EC  CFF5 F06B          	movff	tablat,sprintf@c
  1858  0012F0  0100               	movlb	0	; () banked
  1859  0012F2  516B               	movf	sprintf@c& (0+255),w,b
  1860  0012F4  A4D8               	btfss	status,2,c
  1861  0012F6  D6A8               	goto	l1609
  1862  0012F8                     l1685:
  1863                           
  1864                           ;doprnt.c: 1538: *sp = 0;
  1865  0012F8  C029  FFD9         	movff	sprintf@sp,fsr2l
  1866  0012FC  C02A  FFDA         	movff	sprintf@sp+1,fsr2h
  1867  001300  0E00               	movlw	0
  1868  001302  6EDF               	movwf	indf2,c
  1869  001304  0012               	return	
  1870  001306                     __end_of_sprintf:
  1871                           	opt stack 0
  1872                           tblptru	equ	0xFF8
  1873                           tblptrh	equ	0xFF7
  1874                           tblptrl	equ	0xFF6
  1875                           tablat	equ	0xFF5
  1876                           prodh	equ	0xFF4
  1877                           prodl	equ	0xFF3
  1878                           intcon	equ	0xFF2
  1879                           postinc0	equ	0xFEE
  1880                           wreg	equ	0xFE8
  1881                           indf2	equ	0xFDF
  1882                           postinc2	equ	0xFDE
  1883                           postdec2	equ	0xFDD
  1884                           fsr2h	equ	0xFDA
  1885                           fsr2l	equ	0xFD9
  1886                           status	equ	0xFD8
  1887                           
  1888 ;; *************** function _isdigit *****************
  1889 ;; Defined at:
  1890 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\isdigit.c"
  1891 ;; Parameters:    Size  Location     Type
  1892 ;;  c               1    wreg     unsigned char 
  1893 ;; Auto vars:     Size  Location     Type
  1894 ;;  c               1   20[COMRAM] unsigned char 
  1895 ;; Return value:  Size  Location     Type
  1896 ;;		None               void
  1897 ;; Registers used:
  1898 ;;		wreg, status,2, status,0
  1899 ;; Tracked objects:
  1900 ;;		On entry : 0/0
  1901 ;;		On exit  : 0/0
  1902 ;;		Unchanged: 0/0
  1903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1905 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1906 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1907 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1908 ;;Total ram usage:        3 bytes
  1909 ;; Hardware stack levels used:    1
  1910 ;; Hardware stack levels required when called:    3
  1911 ;; This function calls:
  1912 ;;		Nothing
  1913 ;; This function is called by:
  1914 ;;		_sprintf
  1915 ;; This function uses a non-reentrant model
  1916 ;;
  1917                           
  1918                           	psect	text11
  1919  0016F2                     __ptext11:
  1920                           	opt stack 0
  1921  0016F2                     _isdigit:
  1922                           	opt stack 25
  1923                           
  1924                           ;incstack = 0
  1925                           ;isdigit@c stored from wreg
  1926  0016F2  6E15               	movwf	isdigit@c,c
  1927  0016F4  0E00               	movlw	0
  1928  0016F6  6E14               	movwf	_isdigit$839,c
  1929  0016F8  0E3A               	movlw	58
  1930  0016FA  6015               	cpfslt	isdigit@c,c
  1931  0016FC  D005               	goto	l1541
  1932  0016FE  0E2F               	movlw	47
  1933  001700  6415               	cpfsgt	isdigit@c,c
  1934  001702  D002               	goto	l1541
  1935  001704  0E01               	movlw	1
  1936  001706  6E14               	movwf	_isdigit$839,c
  1937  001708                     l1541:
  1938  001708  C014  F013         	movff	_isdigit$839,??_isdigit
  1939  00170C  3013               	rrcf	??_isdigit,w,c
  1940  00170E  0012               	return	
  1941  001710                     __end_of_isdigit:
  1942                           	opt stack 0
  1943                           tblptru	equ	0xFF8
  1944                           tblptrh	equ	0xFF7
  1945                           tblptrl	equ	0xFF6
  1946                           tablat	equ	0xFF5
  1947                           prodh	equ	0xFF4
  1948                           prodl	equ	0xFF3
  1949                           intcon	equ	0xFF2
  1950                           postinc0	equ	0xFEE
  1951                           wreg	equ	0xFE8
  1952                           indf2	equ	0xFDF
  1953                           postinc2	equ	0xFDE
  1954                           postdec2	equ	0xFDD
  1955                           fsr2h	equ	0xFDA
  1956                           fsr2l	equ	0xFD9
  1957                           status	equ	0xFD8
  1958                           
  1959 ;; *************** function ___wmul *****************
  1960 ;; Defined at:
  1961 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\Umul16.c"
  1962 ;; Parameters:    Size  Location     Type
  1963 ;;  multiplier      2   18[COMRAM] unsigned int 
  1964 ;;  multiplicand    2   20[COMRAM] unsigned int 
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  product         2   22[COMRAM] unsigned int 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  2   18[COMRAM] unsigned int 
  1969 ;; Registers used:
  1970 ;;		wreg, status,2, status,0, prodl, prodh
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1976 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1977 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1979 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1980 ;;Total ram usage:        6 bytes
  1981 ;; Hardware stack levels used:    1
  1982 ;; Hardware stack levels required when called:    3
  1983 ;; This function calls:
  1984 ;;		Nothing
  1985 ;; This function is called by:
  1986 ;;		_sprintf
  1987 ;; This function uses a non-reentrant model
  1988 ;;
  1989                           
  1990                           	psect	text12
  1991  00168C                     __ptext12:
  1992                           	opt stack 0
  1993  00168C                     ___wmul:
  1994                           	opt stack 25
  1995                           
  1996                           ;incstack = 0
  1997  00168C  5013               	movf	___wmul@multiplier,w,c
  1998  00168E  0215               	mulwf	___wmul@multiplicand,c
  1999  001690  CFF3 F017          	movff	prodl,___wmul@product
  2000  001694  CFF4 F018          	movff	prodh,___wmul@product+1
  2001  001698  5013               	movf	___wmul@multiplier,w,c
  2002  00169A  0216               	mulwf	___wmul@multiplicand+1,c
  2003  00169C  50F3               	movf	prodl,w,c
  2004  00169E  2618               	addwf	___wmul@product+1,f,c
  2005  0016A0  5014               	movf	___wmul@multiplier+1,w,c
  2006  0016A2  0215               	mulwf	___wmul@multiplicand,c
  2007  0016A4  50F3               	movf	prodl,w,c
  2008  0016A6  2618               	addwf	___wmul@product+1,f,c
  2009  0016A8  C017  F013         	movff	___wmul@product,?___wmul
  2010  0016AC  C018  F014         	movff	___wmul@product+1,?___wmul+1
  2011  0016B0  0012               	return	
  2012  0016B2                     __end_of___wmul:
  2013                           	opt stack 0
  2014                           tblptru	equ	0xFF8
  2015                           tblptrh	equ	0xFF7
  2016                           tblptrl	equ	0xFF6
  2017                           tablat	equ	0xFF5
  2018                           prodh	equ	0xFF4
  2019                           prodl	equ	0xFF3
  2020                           intcon	equ	0xFF2
  2021                           postinc0	equ	0xFEE
  2022                           wreg	equ	0xFE8
  2023                           indf2	equ	0xFDF
  2024                           postinc2	equ	0xFDE
  2025                           postdec2	equ	0xFDD
  2026                           fsr2h	equ	0xFDA
  2027                           fsr2l	equ	0xFD9
  2028                           status	equ	0xFD8
  2029                           
  2030 ;; *************** function ___llmod *****************
  2031 ;; Defined at:
  2032 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\llmod.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;  dividend        4   31[COMRAM] unsigned long 
  2035 ;;  divisor         4   35[COMRAM] unsigned long 
  2036 ;; Auto vars:     Size  Location     Type
  2037 ;;  counter         1   39[COMRAM] unsigned char 
  2038 ;; Return value:  Size  Location     Type
  2039 ;;                  4   31[COMRAM] unsigned long 
  2040 ;; Registers used:
  2041 ;;		wreg, status,2, status,0
  2042 ;; Tracked objects:
  2043 ;;		On entry : 0/0
  2044 ;;		On exit  : 0/0
  2045 ;;		Unchanged: 0/0
  2046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2047 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2048 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2050 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2051 ;;Total ram usage:        9 bytes
  2052 ;; Hardware stack levels used:    1
  2053 ;; Hardware stack levels required when called:    3
  2054 ;; This function calls:
  2055 ;;		Nothing
  2056 ;; This function is called by:
  2057 ;;		_sprintf
  2058 ;; This function uses a non-reentrant model
  2059 ;;
  2060                           
  2061                           	psect	text13
  2062  00152E                     __ptext13:
  2063                           	opt stack 0
  2064  00152E                     ___llmod:
  2065                           	opt stack 25
  2066                           
  2067                           ;incstack = 0
  2068  00152E  5024               	movf	___llmod@divisor,w,c
  2069  001530  1025               	iorwf	___llmod@divisor+1,w,c
  2070  001532  1026               	iorwf	___llmod@divisor+2,w,c
  2071  001534  1027               	iorwf	___llmod@divisor+3,w,c
  2072  001536  B4D8               	btfsc	status,2,c
  2073  001538  D024               	goto	l561
  2074  00153A  0E01               	movlw	1
  2075  00153C  6E28               	movwf	___llmod@counter,c
  2076  00153E  D006               	goto	l1579
  2077  001540                     l1577:
  2078  001540  90D8               	bcf	status,0,c
  2079  001542  3624               	rlcf	___llmod@divisor,f,c
  2080  001544  3625               	rlcf	___llmod@divisor+1,f,c
  2081  001546  3626               	rlcf	___llmod@divisor+2,f,c
  2082  001548  3627               	rlcf	___llmod@divisor+3,f,c
  2083  00154A  2A28               	incf	___llmod@counter,f,c
  2084  00154C                     l1579:
  2085  00154C  AE27               	btfss	___llmod@divisor+3,7,c
  2086  00154E  D7F8               	goto	l1577
  2087  001550                     l1581:
  2088  001550  5024               	movf	___llmod@divisor,w,c
  2089  001552  5C20               	subwf	___llmod@dividend,w,c
  2090  001554  5025               	movf	___llmod@divisor+1,w,c
  2091  001556  5821               	subwfb	___llmod@dividend+1,w,c
  2092  001558  5026               	movf	___llmod@divisor+2,w,c
  2093  00155A  5822               	subwfb	___llmod@dividend+2,w,c
  2094  00155C  5027               	movf	___llmod@divisor+3,w,c
  2095  00155E  5823               	subwfb	___llmod@dividend+3,w,c
  2096  001560  A0D8               	btfss	status,0,c
  2097  001562  D008               	goto	l1585
  2098  001564  5024               	movf	___llmod@divisor,w,c
  2099  001566  5E20               	subwf	___llmod@dividend,f,c
  2100  001568  5025               	movf	___llmod@divisor+1,w,c
  2101  00156A  5A21               	subwfb	___llmod@dividend+1,f,c
  2102  00156C  5026               	movf	___llmod@divisor+2,w,c
  2103  00156E  5A22               	subwfb	___llmod@dividend+2,f,c
  2104  001570  5027               	movf	___llmod@divisor+3,w,c
  2105  001572  5A23               	subwfb	___llmod@dividend+3,f,c
  2106  001574                     l1585:
  2107  001574  90D8               	bcf	status,0,c
  2108  001576  3227               	rrcf	___llmod@divisor+3,f,c
  2109  001578  3226               	rrcf	___llmod@divisor+2,f,c
  2110  00157A  3225               	rrcf	___llmod@divisor+1,f,c
  2111  00157C  3224               	rrcf	___llmod@divisor,f,c
  2112  00157E  2E28               	decfsz	___llmod@counter,f,c
  2113  001580  D7E7               	goto	l1581
  2114  001582                     l561:
  2115  001582  C020  F020         	movff	___llmod@dividend,?___llmod
  2116  001586  C021  F021         	movff	___llmod@dividend+1,?___llmod+1
  2117  00158A  C022  F022         	movff	___llmod@dividend+2,?___llmod+2
  2118  00158E  C023  F023         	movff	___llmod@dividend+3,?___llmod+3
  2119  001592  0012               	return		;funcret
  2120  001594                     __end_of___llmod:
  2121                           	opt stack 0
  2122                           tblptru	equ	0xFF8
  2123                           tblptrh	equ	0xFF7
  2124                           tblptrl	equ	0xFF6
  2125                           tablat	equ	0xFF5
  2126                           prodh	equ	0xFF4
  2127                           prodl	equ	0xFF3
  2128                           intcon	equ	0xFF2
  2129                           postinc0	equ	0xFEE
  2130                           wreg	equ	0xFE8
  2131                           indf2	equ	0xFDF
  2132                           postinc2	equ	0xFDE
  2133                           postdec2	equ	0xFDD
  2134                           fsr2h	equ	0xFDA
  2135                           fsr2l	equ	0xFD9
  2136                           status	equ	0xFD8
  2137                           
  2138 ;; *************** function ___lldiv *****************
  2139 ;; Defined at:
  2140 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.42\sources\common\lldiv.c"
  2141 ;; Parameters:    Size  Location     Type
  2142 ;;  dividend        4   18[COMRAM] unsigned long 
  2143 ;;  divisor         4   22[COMRAM] unsigned long 
  2144 ;; Auto vars:     Size  Location     Type
  2145 ;;  quotient        4   26[COMRAM] unsigned long 
  2146 ;;  counter         1   30[COMRAM] unsigned char 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  4   18[COMRAM] unsigned long 
  2149 ;; Registers used:
  2150 ;;		wreg, status,2, status,0
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2156 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2157 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2159 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2160 ;;Total ram usage:       13 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    3
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_sprintf
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           	psect	text14
  2171  0014AC                     __ptext14:
  2172                           	opt stack 0
  2173  0014AC                     ___lldiv:
  2174                           	opt stack 25
  2175                           
  2176                           ;incstack = 0
  2177  0014AC  0E00               	movlw	0
  2178  0014AE  6E1B               	movwf	___lldiv@quotient,c
  2179  0014B0  0E00               	movlw	0
  2180  0014B2  6E1C               	movwf	___lldiv@quotient+1,c
  2181  0014B4  0E00               	movlw	0
  2182  0014B6  6E1D               	movwf	___lldiv@quotient+2,c
  2183  0014B8  0E00               	movlw	0
  2184  0014BA  6E1E               	movwf	___lldiv@quotient+3,c
  2185  0014BC  5017               	movf	___lldiv@divisor,w,c
  2186  0014BE  1018               	iorwf	___lldiv@divisor+1,w,c
  2187  0014C0  1019               	iorwf	___lldiv@divisor+2,w,c
  2188  0014C2  101A               	iorwf	___lldiv@divisor+3,w,c
  2189  0014C4  B4D8               	btfsc	status,2,c
  2190  0014C6  D02A               	goto	l551
  2191  0014C8  0E01               	movlw	1
  2192  0014CA  6E1F               	movwf	___lldiv@counter,c
  2193  0014CC  D006               	goto	l1559
  2194  0014CE                     l1557:
  2195  0014CE  90D8               	bcf	status,0,c
  2196  0014D0  3617               	rlcf	___lldiv@divisor,f,c
  2197  0014D2  3618               	rlcf	___lldiv@divisor+1,f,c
  2198  0014D4  3619               	rlcf	___lldiv@divisor+2,f,c
  2199  0014D6  361A               	rlcf	___lldiv@divisor+3,f,c
  2200  0014D8  2A1F               	incf	___lldiv@counter,f,c
  2201  0014DA                     l1559:
  2202  0014DA  AE1A               	btfss	___lldiv@divisor+3,7,c
  2203  0014DC  D7F8               	goto	l1557
  2204  0014DE                     l1561:
  2205  0014DE  90D8               	bcf	status,0,c
  2206  0014E0  361B               	rlcf	___lldiv@quotient,f,c
  2207  0014E2  361C               	rlcf	___lldiv@quotient+1,f,c
  2208  0014E4  361D               	rlcf	___lldiv@quotient+2,f,c
  2209  0014E6  361E               	rlcf	___lldiv@quotient+3,f,c
  2210  0014E8  5017               	movf	___lldiv@divisor,w,c
  2211  0014EA  5C13               	subwf	___lldiv@dividend,w,c
  2212  0014EC  5018               	movf	___lldiv@divisor+1,w,c
  2213  0014EE  5814               	subwfb	___lldiv@dividend+1,w,c
  2214  0014F0  5019               	movf	___lldiv@divisor+2,w,c
  2215  0014F2  5815               	subwfb	___lldiv@dividend+2,w,c
  2216  0014F4  501A               	movf	___lldiv@divisor+3,w,c
  2217  0014F6  5816               	subwfb	___lldiv@dividend+3,w,c
  2218  0014F8  A0D8               	btfss	status,0,c
  2219  0014FA  D009               	goto	l1569
  2220  0014FC  5017               	movf	___lldiv@divisor,w,c
  2221  0014FE  5E13               	subwf	___lldiv@dividend,f,c
  2222  001500  5018               	movf	___lldiv@divisor+1,w,c
  2223  001502  5A14               	subwfb	___lldiv@dividend+1,f,c
  2224  001504  5019               	movf	___lldiv@divisor+2,w,c
  2225  001506  5A15               	subwfb	___lldiv@dividend+2,f,c
  2226  001508  501A               	movf	___lldiv@divisor+3,w,c
  2227  00150A  5A16               	subwfb	___lldiv@dividend+3,f,c
  2228  00150C  801B               	bsf	___lldiv@quotient,0,c
  2229  00150E                     l1569:
  2230  00150E  90D8               	bcf	status,0,c
  2231  001510  321A               	rrcf	___lldiv@divisor+3,f,c
  2232  001512  3219               	rrcf	___lldiv@divisor+2,f,c
  2233  001514  3218               	rrcf	___lldiv@divisor+1,f,c
  2234  001516  3217               	rrcf	___lldiv@divisor,f,c
  2235  001518  2E1F               	decfsz	___lldiv@counter,f,c
  2236  00151A  D7E1               	goto	l1561
  2237  00151C                     l551:
  2238  00151C  C01B  F013         	movff	___lldiv@quotient,?___lldiv
  2239  001520  C01C  F014         	movff	___lldiv@quotient+1,?___lldiv+1
  2240  001524  C01D  F015         	movff	___lldiv@quotient+2,?___lldiv+2
  2241  001528  C01E  F016         	movff	___lldiv@quotient+3,?___lldiv+3
  2242  00152C  0012               	return		;funcret
  2243  00152E                     __end_of___lldiv:
  2244                           	opt stack 0
  2245                           tblptru	equ	0xFF8
  2246                           tblptrh	equ	0xFF7
  2247                           tblptrl	equ	0xFF6
  2248                           tablat	equ	0xFF5
  2249                           prodh	equ	0xFF4
  2250                           prodl	equ	0xFF3
  2251                           intcon	equ	0xFF2
  2252                           postinc0	equ	0xFEE
  2253                           wreg	equ	0xFE8
  2254                           indf2	equ	0xFDF
  2255                           postinc2	equ	0xFDE
  2256                           postdec2	equ	0xFDD
  2257                           fsr2h	equ	0xFDA
  2258                           fsr2l	equ	0xFD9
  2259                           status	equ	0xFD8
  2260                           
  2261 ;; *************** function _Display_ExecutaVarredura *****************
  2262 ;; Defined at:
  2263 ;;		line 123 in file "Base_1.c"
  2264 ;; Parameters:    Size  Location     Type
  2265 ;;		None
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;		None
  2268 ;; Return value:  Size  Location     Type
  2269 ;;                  1    wreg      void 
  2270 ;; Registers used:
  2271 ;;		wreg, status,2, status,0, cstack
  2272 ;; Tracked objects:
  2273 ;;		On entry : 0/0
  2274 ;;		On exit  : 0/0
  2275 ;;		Unchanged: 0/0
  2276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2281 ;;Total ram usage:        0 bytes
  2282 ;; Hardware stack levels used:    1
  2283 ;; Hardware stack levels required when called:    5
  2284 ;; This function calls:
  2285 ;;		_Display_LigaDigito
  2286 ;; This function is called by:
  2287 ;;		_main
  2288 ;; This function uses a non-reentrant model
  2289 ;;
  2290                           
  2291                           	psect	text15
  2292  00141A                     __ptext15:
  2293                           	opt stack 0
  2294  00141A                     _Display_ExecutaVarredura:
  2295                           	opt stack 25
  2296                           
  2297                           ;Base_1.c: 125: switch (Varredura.Sequencia)
  2298                           
  2299                           ;incstack = 0
  2300  00141A  D02A               	goto	l1741
  2301  00141C                     l1727:
  2302                           
  2303                           ;Base_1.c: 128: Display_LigaDigito(Varredura.Buffer.Leds,0b01000000);
  2304  00141C  0E40               	movlw	64
  2305  00141E  6E14               	movwf	Display_LigaDigito@Digito,c
  2306  001420  5045               	movf	_Varredura+7,w,c
  2307  001422  ECBA  F00B         	call	_Display_LigaDigito
  2308                           
  2309                           ;Base_1.c: 129: break;
  2310  001426  D03A               	goto	l1743
  2311  001428                     l1729:
  2312                           
  2313                           ;Base_1.c: 131: Display_LigaDigito(Varredura.Buffer.Digito1,0b00000001);
  2314  001428  0E01               	movlw	1
  2315  00142A  6E14               	movwf	Display_LigaDigito@Digito,c
  2316  00142C  503F               	movf	_Varredura+1,w,c
  2317  00142E  ECBA  F00B         	call	_Display_LigaDigito
  2318                           
  2319                           ;Base_1.c: 132: break;
  2320  001432  D034               	goto	l1743
  2321  001434                     l1731:
  2322                           
  2323                           ;Base_1.c: 134: Display_LigaDigito(Varredura.Buffer.Digito2,0b00000010);
  2324  001434  0E02               	movlw	2
  2325  001436  6E14               	movwf	Display_LigaDigito@Digito,c
  2326  001438  5040               	movf	_Varredura+2,w,c
  2327  00143A  ECBA  F00B         	call	_Display_LigaDigito
  2328                           
  2329                           ;Base_1.c: 135: break;
  2330  00143E  D02E               	goto	l1743
  2331  001440                     l1733:
  2332                           
  2333                           ;Base_1.c: 137: Display_LigaDigito(Varredura.Buffer.Digito3,0b00000100);
  2334  001440  0E04               	movlw	4
  2335  001442  6E14               	movwf	Display_LigaDigito@Digito,c
  2336  001444  5041               	movf	_Varredura+3,w,c
  2337  001446  ECBA  F00B         	call	_Display_LigaDigito
  2338                           
  2339                           ;Base_1.c: 138: break;
  2340  00144A  D028               	goto	l1743
  2341  00144C                     l1735:
  2342                           
  2343                           ;Base_1.c: 140: Display_LigaDigito(Varredura.Buffer.Digito4,0b00001000);
  2344  00144C  0E08               	movlw	8
  2345  00144E  6E14               	movwf	Display_LigaDigito@Digito,c
  2346  001450  5042               	movf	_Varredura+4,w,c
  2347  001452  ECBA  F00B         	call	_Display_LigaDigito
  2348                           
  2349                           ;Base_1.c: 141: break;
  2350  001456  D022               	goto	l1743
  2351  001458                     l1737:
  2352                           
  2353                           ;Base_1.c: 143: Display_LigaDigito(Varredura.Buffer.Digito5,0b00010000);
  2354  001458  0E10               	movlw	16
  2355  00145A  6E14               	movwf	Display_LigaDigito@Digito,c
  2356  00145C  5043               	movf	_Varredura+5,w,c
  2357  00145E  ECBA  F00B         	call	_Display_LigaDigito
  2358                           
  2359                           ;Base_1.c: 144: break;
  2360  001462  D01C               	goto	l1743
  2361  001464                     l1739:
  2362                           
  2363                           ;Base_1.c: 146: Display_LigaDigito(Varredura.Buffer.Digito6,0b00100000);
  2364  001464  0E20               	movlw	32
  2365  001466  6E14               	movwf	Display_LigaDigito@Digito,c
  2366  001468  5044               	movf	_Varredura+6,w,c
  2367  00146A  ECBA  F00B         	call	_Display_LigaDigito
  2368                           
  2369                           ;Base_1.c: 147: }
  2370  00146E  D016               	goto	l1743
  2371  001470                     l1741:
  2372  001470  503E               	movf	_Varredura,w,c
  2373                           
  2374                           ; Switch size 1, requested type "space"
  2375                           ; Number of cases is 7, Range of values is 0 to 6
  2376                           ; switch strategies available:
  2377                           ; Name         Instructions Cycles
  2378                           ; simple_byte           22    12 (average)
  2379                           ;	Chosen strategy is simple_byte
  2380  001472  0A00               	xorlw	0	; case 0
  2381  001474  B4D8               	btfsc	status,2,c
  2382  001476  D7D2               	goto	l1727
  2383  001478  0A01               	xorlw	1	; case 1
  2384  00147A  B4D8               	btfsc	status,2,c
  2385  00147C  D7D5               	goto	l1729
  2386  00147E  0A03               	xorlw	3	; case 2
  2387  001480  B4D8               	btfsc	status,2,c
  2388  001482  D7D8               	goto	l1731
  2389  001484  0A01               	xorlw	1	; case 3
  2390  001486  B4D8               	btfsc	status,2,c
  2391  001488  D7DB               	goto	l1733
  2392  00148A  0A07               	xorlw	7	; case 4
  2393  00148C  B4D8               	btfsc	status,2,c
  2394  00148E  D7DE               	goto	l1735
  2395  001490  0A01               	xorlw	1	; case 5
  2396  001492  B4D8               	btfsc	status,2,c
  2397  001494  D7E1               	goto	l1737
  2398  001496  0A03               	xorlw	3	; case 6
  2399  001498  B4D8               	btfsc	status,2,c
  2400  00149A  D7E4               	goto	l1739
  2401  00149C                     l1743:
  2402                           
  2403                           ;Base_1.c: 148: if (++Varredura.Sequencia == 7) Varredura.Sequencia = 0;
  2404  00149C  2A3E               	incf	_Varredura,f,c
  2405  00149E  0E07               	movlw	7
  2406  0014A0  183E               	xorwf	_Varredura,w,c
  2407  0014A2  A4D8               	btfss	status,2,c
  2408  0014A4  0012               	return	
  2409  0014A6  0E00               	movlw	0
  2410  0014A8  6E3E               	movwf	_Varredura,c
  2411  0014AA  0012               	return	
  2412  0014AC                     __end_of_Display_ExecutaVarredura:
  2413                           	opt stack 0
  2414                           tblptru	equ	0xFF8
  2415                           tblptrh	equ	0xFF7
  2416                           tblptrl	equ	0xFF6
  2417                           tablat	equ	0xFF5
  2418                           prodh	equ	0xFF4
  2419                           prodl	equ	0xFF3
  2420                           intcon	equ	0xFF2
  2421                           postinc0	equ	0xFEE
  2422                           wreg	equ	0xFE8
  2423                           indf2	equ	0xFDF
  2424                           postinc2	equ	0xFDE
  2425                           postdec2	equ	0xFDD
  2426                           fsr2h	equ	0xFDA
  2427                           fsr2l	equ	0xFD9
  2428                           status	equ	0xFD8
  2429                           
  2430 ;; *************** function _Display_LigaDigito *****************
  2431 ;; Defined at:
  2432 ;;		line 88 in file "Base_1.c"
  2433 ;; Parameters:    Size  Location     Type
  2434 ;;  Valor           1    wreg     unsigned char 
  2435 ;;  Digito          1   19[COMRAM] unsigned char 
  2436 ;; Auto vars:     Size  Location     Type
  2437 ;;  Valor           1   20[COMRAM] unsigned char 
  2438 ;; Return value:  Size  Location     Type
  2439 ;;                  1    wreg      void 
  2440 ;; Registers used:
  2441 ;;		wreg, status,2, cstack
  2442 ;; Tracked objects:
  2443 ;;		On entry : 0/0
  2444 ;;		On exit  : 0/0
  2445 ;;		Unchanged: 0/0
  2446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2447 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2448 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2450 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2451 ;;Total ram usage:        2 bytes
  2452 ;; Hardware stack levels used:    1
  2453 ;; Hardware stack levels required when called:    4
  2454 ;; This function calls:
  2455 ;;		_Latch_EscreveValor
  2456 ;; This function is called by:
  2457 ;;		_Display_Inicializacao
  2458 ;;		_Display_ExecutaVarredura
  2459 ;; This function uses a non-reentrant model
  2460 ;;
  2461                           
  2462                           	psect	text16
  2463  001774                     __ptext16:
  2464                           	opt stack 0
  2465  001774                     _Display_LigaDigito:
  2466                           	opt stack 25
  2467                           
  2468                           ;incstack = 0
  2469                           ;Display_LigaDigito@Valor stored from wreg
  2470  001774  6E15               	movwf	Display_LigaDigito@Valor,c
  2471                           
  2472                           ;Base_1.c: 90: LATDbits.LATD3 = 1;
  2473  001776  868C               	bsf	3980,3,c	;volatile
  2474                           
  2475                           ;Base_1.c: 91: Latch_EscreveValor (Digito);
  2476  001778  5014               	movf	Display_LigaDigito@Digito,w,c
  2477  00177A  ECA4  F00B         	call	_Latch_EscreveValor
  2478                           
  2479                           ;Base_1.c: 92: LATB = Valor;
  2480  00177E  C015  FF8A         	movff	Display_LigaDigito@Valor,3978	;volatile
  2481                           
  2482                           ;Base_1.c: 93: LATDbits.LATD3 = 0;
  2483  001782  968C               	bcf	3980,3,c	;volatile
  2484  001784  0012               	return		;funcret
  2485  001786                     __end_of_Display_LigaDigito:
  2486                           	opt stack 0
  2487                           tblptru	equ	0xFF8
  2488                           tblptrh	equ	0xFF7
  2489                           tblptrl	equ	0xFF6
  2490                           tablat	equ	0xFF5
  2491                           prodh	equ	0xFF4
  2492                           prodl	equ	0xFF3
  2493                           intcon	equ	0xFF2
  2494                           postinc0	equ	0xFEE
  2495                           wreg	equ	0xFE8
  2496                           indf2	equ	0xFDF
  2497                           postinc2	equ	0xFDE
  2498                           postdec2	equ	0xFDD
  2499                           fsr2h	equ	0xFDA
  2500                           fsr2l	equ	0xFD9
  2501                           status	equ	0xFD8
  2502                           
  2503 ;; *************** function _Latch_EscreveValor *****************
  2504 ;; Defined at:
  2505 ;;		line 58 in file "Base_1.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  Valor           1    wreg     unsigned char 
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  Valor           1   18[COMRAM] unsigned char 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg, status,2
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2519 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2522 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2523 ;;Total ram usage:        1 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; Hardware stack levels required when called:    3
  2526 ;; This function calls:
  2527 ;;		Nothing
  2528 ;; This function is called by:
  2529 ;;		_Latch_Inicializacao
  2530 ;;		_Display_LigaDigito
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text17
  2535  001748                     __ptext17:
  2536                           	opt stack 0
  2537  001748                     _Latch_EscreveValor:
  2538                           	opt stack 25
  2539                           
  2540                           ;incstack = 0
  2541                           ;Latch_EscreveValor@Valor stored from wreg
  2542  001748  6E13               	movwf	Latch_EscreveValor@Valor,c
  2543                           
  2544                           ;Base_1.c: 60: LATB = Valor;
  2545  00174A  C013  FF8A         	movff	Latch_EscreveValor@Valor,3978	;volatile
  2546                           
  2547                           ;Base_1.c: 63: LATDbits.LATD2 = 1;
  2548  00174E  848C               	bsf	3980,2,c	;volatile
  2549                           
  2550                           ;Base_1.c: 64: __nop();
  2551  001750  F000               	nop	
  2552                           
  2553                           ;Base_1.c: 65: __nop();
  2554  001752  F000               	nop	
  2555                           
  2556                           ;Base_1.c: 66: __nop();
  2557  001754  F000               	nop	
  2558                           
  2559                           ;Base_1.c: 67: __nop();
  2560  001756  F000               	nop	
  2561                           
  2562                           ;Base_1.c: 68: LATDbits.LATD2 = 0;
  2563  001758  948C               	bcf	3980,2,c	;volatile
  2564                           
  2565                           ;Base_1.c: 70: LATB = 0;
  2566  00175A  0E00               	movlw	0
  2567  00175C  6E8A               	movwf	3978,c	;volatile
  2568  00175E  0012               	return		;funcret
  2569  001760                     __end_of_Latch_EscreveValor:
  2570                           	opt stack 0
  2571                           tblptru	equ	0xFF8
  2572                           tblptrh	equ	0xFF7
  2573                           tblptrl	equ	0xFF6
  2574                           tablat	equ	0xFF5
  2575                           prodh	equ	0xFF4
  2576                           prodl	equ	0xFF3
  2577                           intcon	equ	0xFF2
  2578                           postinc0	equ	0xFEE
  2579                           wreg	equ	0xFE8
  2580                           indf2	equ	0xFDF
  2581                           postinc2	equ	0xFDE
  2582                           postdec2	equ	0xFDD
  2583                           fsr2h	equ	0xFDA
  2584                           fsr2l	equ	0xFD9
  2585                           status	equ	0xFD8
  2586                           
  2587 ;; *************** function _InterrupcoesDeAltaPrioridade *****************
  2588 ;; Defined at:
  2589 ;;		line 101 in file "Interrupcoes.c"
  2590 ;; Parameters:    Size  Location     Type
  2591 ;;		None
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;		None
  2594 ;; Return value:  Size  Location     Type
  2595 ;;                  1    wreg      void 
  2596 ;; Registers used:
  2597 ;;		wreg, status,2, status,0, cstack
  2598 ;; Tracked objects:
  2599 ;;		On entry : 0/0
  2600 ;;		On exit  : 0/0
  2601 ;;		Unchanged: 0/0
  2602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2605 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2606 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2607 ;;Total ram usage:       14 bytes
  2608 ;; Hardware stack levels used:    1
  2609 ;; Hardware stack levels required when called:    2
  2610 ;; This function calls:
  2611 ;;		_Timer0_Interrupcao
  2612 ;; This function is called by:
  2613 ;;		Interrupt level 2
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           	psect	intcode
  2618  000008                     __pintcode:
  2619                           	opt stack 0
  2620  000008                     _InterrupcoesDeAltaPrioridade:
  2621                           	opt stack 25
  2622                           
  2623                           ;incstack = 0
  2624  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2625  00000A  CFFA F005          	movff	pclath,??_InterrupcoesDeAltaPrioridade
  2626  00000E  CFFB F006          	movff	pclatu,??_InterrupcoesDeAltaPrioridade+1
  2627  000012  CFE9 F007          	movff	fsr0l,??_InterrupcoesDeAltaPrioridade+2
  2628  000016  CFEA F008          	movff	fsr0h,??_InterrupcoesDeAltaPrioridade+3
  2629  00001A  CFE1 F009          	movff	fsr1l,??_InterrupcoesDeAltaPrioridade+4
  2630  00001E  CFE2 F00A          	movff	fsr1h,??_InterrupcoesDeAltaPrioridade+5
  2631  000022  CFD9 F00B          	movff	fsr2l,??_InterrupcoesDeAltaPrioridade+6
  2632  000026  CFDA F00C          	movff	fsr2h,??_InterrupcoesDeAltaPrioridade+7
  2633  00002A  CFF3 F00D          	movff	prodl,??_InterrupcoesDeAltaPrioridade+8
  2634  00002E  CFF4 F00E          	movff	prodh,??_InterrupcoesDeAltaPrioridade+9
  2635  000032  CFF6 F00F          	movff	tblptrl,??_InterrupcoesDeAltaPrioridade+10
  2636  000036  CFF7 F010          	movff	tblptrh,??_InterrupcoesDeAltaPrioridade+11
  2637  00003A  CFF8 F011          	movff	tblptru,??_InterrupcoesDeAltaPrioridade+12
  2638  00003E  CFF5 F012          	movff	tablat,??_InterrupcoesDeAltaPrioridade+13
  2639                           
  2640                           ;Interrupcoes.c: 108: Timer0_Interrupcao();
  2641  000042  ECF9  F00A         	call	_Timer0_Interrupcao	;wreg free
  2642  000046  C012  FFF5         	movff	??_InterrupcoesDeAltaPrioridade+13,tablat
  2643  00004A  C011  FFF8         	movff	??_InterrupcoesDeAltaPrioridade+12,tblptru
  2644  00004E  C010  FFF7         	movff	??_InterrupcoesDeAltaPrioridade+11,tblptrh
  2645  000052  C00F  FFF6         	movff	??_InterrupcoesDeAltaPrioridade+10,tblptrl
  2646  000056  C00E  FFF4         	movff	??_InterrupcoesDeAltaPrioridade+9,prodh
  2647  00005A  C00D  FFF3         	movff	??_InterrupcoesDeAltaPrioridade+8,prodl
  2648  00005E  C00C  FFDA         	movff	??_InterrupcoesDeAltaPrioridade+7,fsr2h
  2649  000062  C00B  FFD9         	movff	??_InterrupcoesDeAltaPrioridade+6,fsr2l
  2650  000066  C00A  FFE2         	movff	??_InterrupcoesDeAltaPrioridade+5,fsr1h
  2651  00006A  C009  FFE1         	movff	??_InterrupcoesDeAltaPrioridade+4,fsr1l
  2652  00006E  C008  FFEA         	movff	??_InterrupcoesDeAltaPrioridade+3,fsr0h
  2653  000072  C007  FFE9         	movff	??_InterrupcoesDeAltaPrioridade+2,fsr0l
  2654  000076  C006  FFFB         	movff	??_InterrupcoesDeAltaPrioridade+1,pclatu
  2655  00007A  C005  FFFA         	movff	??_InterrupcoesDeAltaPrioridade,pclath
  2656  00007E  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2657  000080  0011               	retfie		f
  2658  000082                     __end_of_InterrupcoesDeAltaPrioridade:
  2659                           	opt stack 0
  2660                           pclatu	equ	0xFFB
  2661                           pclath	equ	0xFFA
  2662                           tblptru	equ	0xFF8
  2663                           tblptrh	equ	0xFF7
  2664                           tblptrl	equ	0xFF6
  2665                           tablat	equ	0xFF5
  2666                           prodh	equ	0xFF4
  2667                           prodl	equ	0xFF3
  2668                           intcon	equ	0xFF2
  2669                           postinc0	equ	0xFEE
  2670                           fsr0h	equ	0xFEA
  2671                           fsr0l	equ	0xFE9
  2672                           wreg	equ	0xFE8
  2673                           fsr1h	equ	0xFE2
  2674                           fsr1l	equ	0xFE1
  2675                           indf2	equ	0xFDF
  2676                           postinc2	equ	0xFDE
  2677                           postdec2	equ	0xFDD
  2678                           fsr2h	equ	0xFDA
  2679                           fsr2l	equ	0xFD9
  2680                           status	equ	0xFD8
  2681                           
  2682 ;; *************** function _Timer0_Interrupcao *****************
  2683 ;; Defined at:
  2684 ;;		line 89 in file "Timer0.c"
  2685 ;; Parameters:    Size  Location     Type
  2686 ;;		None
  2687 ;; Auto vars:     Size  Location     Type
  2688 ;;		None
  2689 ;; Return value:  Size  Location     Type
  2690 ;;                  1    wreg      void 
  2691 ;; Registers used:
  2692 ;;		wreg, status,2, status,0, cstack
  2693 ;; Tracked objects:
  2694 ;;		On entry : 0/0
  2695 ;;		On exit  : 0/0
  2696 ;;		Unchanged: 0/0
  2697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2698 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2699 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2700 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2701 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2702 ;;Total ram usage:        0 bytes
  2703 ;; Hardware stack levels used:    1
  2704 ;; Hardware stack levels required when called:    1
  2705 ;; This function calls:
  2706 ;;		i2_Timer0_CarregaValor
  2707 ;; This function is called by:
  2708 ;;		_InterrupcoesDeAltaPrioridade
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text19
  2713  0015F2                     __ptext19:
  2714                           	opt stack 0
  2715  0015F2                     _Timer0_Interrupcao:
  2716                           	opt stack 25
  2717                           
  2718                           ;Timer0.c: 91: if (T0IE && T0IF)
  2719                           
  2720                           ;incstack = 0
  2721  0015F2  AAF2               	btfss	intcon,5,c	;volatile
  2722  0015F4  0012               	return	
  2723  0015F6  A4F2               	btfss	intcon,2,c	;volatile
  2724  0015F8  0012               	return	
  2725                           
  2726                           ;Timer0.c: 92: {
  2727                           ;Timer0.c: 93: Timer0_CarregaValor();
  2728  0015FA  EC96  F00B         	call	i2_Timer0_CarregaValor	;wreg free
  2729                           
  2730                           ;Timer0.c: 101: if (--Ctrl_Timer0.Temporizador10ms == 0)
  2731  0015FE  2E47               	decfsz	_Ctrl_Timer0,f,c
  2732  001600  D002               	goto	i2l1371
  2733                           
  2734                           ;Timer0.c: 102: {
  2735                           ;Timer0.c: 103: Ctrl_Timer0.Temporizador10ms = 10;
  2736  001602  0E0A               	movlw	10
  2737  001604  6E47               	movwf	_Ctrl_Timer0,c
  2738  001606                     i2l1371:
  2739                           
  2740                           ;Timer0.c: 108: }
  2741                           ;Timer0.c: 111: if (--Ctrl_Timer0.Temporizador100ms == 0)
  2742  001606  2E48               	decfsz	_Ctrl_Timer0+1,f,c
  2743  001608  D002               	goto	i2l1375
  2744                           
  2745                           ;Timer0.c: 112: {
  2746                           ;Timer0.c: 113: Ctrl_Timer0.Temporizador100ms = 100;
  2747  00160A  0E64               	movlw	100
  2748  00160C  6E48               	movwf	_Ctrl_Timer0+1,c
  2749  00160E                     i2l1375:
  2750                           
  2751                           ;Timer0.c: 118: }
  2752                           ;Timer0.c: 121: if (--Ctrl_Timer0.Temporizador250ms == 0)
  2753  00160E  2E49               	decfsz	_Ctrl_Timer0+2,f,c
  2754  001610  D002               	goto	i2l1379
  2755                           
  2756                           ;Timer0.c: 122: {
  2757                           ;Timer0.c: 123: Ctrl_Timer0.Temporizador250ms = 250;
  2758  001612  0EFA               	movlw	250
  2759  001614  6E49               	movwf	_Ctrl_Timer0+2,c
  2760  001616                     i2l1379:
  2761                           
  2762                           ;Timer0.c: 132: }
  2763                           ;Timer0.c: 134: if (--Ctrl_Timer0.Temporizador1s == 0)
  2764  001616  064A               	decf	_Ctrl_Timer0+3,f,c
  2765  001618  A0D8               	btfss	status,0,c
  2766  00161A  064B               	decf	_Ctrl_Timer0+4,f,c
  2767  00161C  504A               	movf	_Ctrl_Timer0+3,w,c
  2768  00161E  104B               	iorwf	_Ctrl_Timer0+4,w,c
  2769  001620  A4D8               	btfss	status,2,c
  2770  001622  0012               	return	
  2771                           
  2772                           ;Timer0.c: 135: {
  2773                           ;Timer0.c: 136: Ctrl_Timer0.Temporizador1s = 1000;
  2774  001624  0E03               	movlw	3
  2775  001626  6E4B               	movwf	_Ctrl_Timer0+4,c
  2776  001628  0EE8               	movlw	232
  2777  00162A  6E4A               	movwf	_Ctrl_Timer0+3,c
  2778                           
  2779                           ;Timer0.c: 139: Eventos1s.valor = 0xFF;
  2780  00162C  0100               	movlb	0	; () banked
  2781  00162E  6973               	setf	_Eventos1s& (0+255),b
  2782                           
  2783                           ; BSR set to: 0
  2784  001630  0012               	return	
  2785  001632                     __end_of_Timer0_Interrupcao:
  2786                           	opt stack 0
  2787                           pclatu	equ	0xFFB
  2788                           pclath	equ	0xFFA
  2789                           tblptru	equ	0xFF8
  2790                           tblptrh	equ	0xFF7
  2791                           tblptrl	equ	0xFF6
  2792                           tablat	equ	0xFF5
  2793                           prodh	equ	0xFF4
  2794                           prodl	equ	0xFF3
  2795                           intcon	equ	0xFF2
  2796                           postinc0	equ	0xFEE
  2797                           fsr0h	equ	0xFEA
  2798                           fsr0l	equ	0xFE9
  2799                           wreg	equ	0xFE8
  2800                           fsr1h	equ	0xFE2
  2801                           fsr1l	equ	0xFE1
  2802                           indf2	equ	0xFDF
  2803                           postinc2	equ	0xFDE
  2804                           postdec2	equ	0xFDD
  2805                           fsr2h	equ	0xFDA
  2806                           fsr2l	equ	0xFD9
  2807                           status	equ	0xFD8
  2808                           
  2809 ;; *************** function i2_Timer0_CarregaValor *****************
  2810 ;; Defined at:
  2811 ;;		line 46 in file "Timer0.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;		None
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  Timer0_Carre    4    0[COMRAM] struct .
  2816 ;; Return value:  Size  Location     Type
  2817 ;;                  1    wreg      void 
  2818 ;; Registers used:
  2819 ;;		wreg, status,2
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2826 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2828 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2829 ;;Total ram usage:        4 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; This function calls:
  2832 ;;		Nothing
  2833 ;; This function is called by:
  2834 ;;		_Timer0_Interrupcao
  2835 ;; This function uses a non-reentrant model
  2836 ;;
  2837                           
  2838                           	psect	text20
  2839  00172C                     __ptext20:
  2840                           	opt stack 0
  2841  00172C                     i2_Timer0_CarregaValor:
  2842                           	opt stack 25
  2843                           
  2844                           ;Timer0.c: 48: Uint32 ValorDeCarga;
  2845                           ;Timer0.c: 50: T0IF = 0;
  2846                           
  2847                           ;incstack = 0
  2848  00172C  94F2               	bcf	intcon,2,c	;volatile
  2849                           
  2850                           ;Timer0.c: 52: ValorDeCarga.valor = (65536 - (((8000000 * 4) / 4) / 2000));
  2851  00172E  0E60               	movlw	96
  2852  001730  6E01               	movwf	i2Timer0_CarregaValor@ValorDeCarga,c
  2853  001732  0EF0               	movlw	240
  2854  001734  6E02               	movwf	i2Timer0_CarregaValor@ValorDeCarga+1,c
  2855  001736  0E00               	movlw	0
  2856  001738  6E03               	movwf	i2Timer0_CarregaValor@ValorDeCarga+2,c
  2857  00173A  0E00               	movlw	0
  2858  00173C  6E04               	movwf	i2Timer0_CarregaValor@ValorDeCarga+3,c
  2859                           
  2860                           ;Timer0.c: 54: TMR0H = ValorDeCarga.bytes.byte1;
  2861  00173E  C002  FFD7         	movff	i2Timer0_CarregaValor@ValorDeCarga+1,4055	;volatile
  2862                           
  2863                           ;Timer0.c: 55: TMR0L = ValorDeCarga.bytes.byte0;
  2864  001742  C001  FFD6         	movff	i2Timer0_CarregaValor@ValorDeCarga,4054	;volatile
  2865  001746  0012               	return		;funcret
  2866  001748                     __end_ofi2_Timer0_CarregaValor:
  2867                           	opt stack 0
  2868                           pclatu	equ	0xFFB
  2869                           pclath	equ	0xFFA
  2870                           tblptru	equ	0xFF8
  2871                           tblptrh	equ	0xFF7
  2872                           tblptrl	equ	0xFF6
  2873                           tablat	equ	0xFF5
  2874                           prodh	equ	0xFF4
  2875                           prodl	equ	0xFF3
  2876                           intcon	equ	0xFF2
  2877                           postinc0	equ	0xFEE
  2878                           fsr0h	equ	0xFEA
  2879                           fsr0l	equ	0xFE9
  2880                           wreg	equ	0xFE8
  2881                           fsr1h	equ	0xFE2
  2882                           fsr1l	equ	0xFE1
  2883                           indf2	equ	0xFDF
  2884                           postinc2	equ	0xFDE
  2885                           postdec2	equ	0xFDD
  2886                           fsr2h	equ	0xFDA
  2887                           fsr2l	equ	0xFD9
  2888                           status	equ	0xFD8
  2889                           pclatu	equ	0xFFB
  2890                           pclath	equ	0xFFA
  2891                           tblptru	equ	0xFF8
  2892                           tblptrh	equ	0xFF7
  2893                           tblptrl	equ	0xFF6
  2894                           tablat	equ	0xFF5
  2895                           prodh	equ	0xFF4
  2896                           prodl	equ	0xFF3
  2897                           intcon	equ	0xFF2
  2898                           postinc0	equ	0xFEE
  2899                           fsr0h	equ	0xFEA
  2900                           fsr0l	equ	0xFE9
  2901                           wreg	equ	0xFE8
  2902                           fsr1h	equ	0xFE2
  2903                           fsr1l	equ	0xFE1
  2904                           indf2	equ	0xFDF
  2905                           postinc2	equ	0xFDE
  2906                           postdec2	equ	0xFDD
  2907                           fsr2h	equ	0xFDA
  2908                           fsr2l	equ	0xFD9
  2909                           status	equ	0xFD8
  2910                           
  2911                           	psect	rparam
  2912  0000                     pclatu	equ	0xFFB
  2913                           pclath	equ	0xFFA
  2914                           tblptru	equ	0xFF8
  2915                           tblptrh	equ	0xFF7
  2916                           tblptrl	equ	0xFF6
  2917                           tablat	equ	0xFF5
  2918                           prodh	equ	0xFF4
  2919                           prodl	equ	0xFF3
  2920                           intcon	equ	0xFF2
  2921                           postinc0	equ	0xFEE
  2922                           fsr0h	equ	0xFEA
  2923                           fsr0l	equ	0xFE9
  2924                           wreg	equ	0xFE8
  2925                           fsr1h	equ	0xFE2
  2926                           fsr1l	equ	0xFE1
  2927                           indf2	equ	0xFDF
  2928                           postinc2	equ	0xFDE
  2929                           postdec2	equ	0xFDD
  2930                           fsr2h	equ	0xFDA
  2931                           fsr2l	equ	0xFD9
  2932                           status	equ	0xFD8
  2933                           
  2934                           	psect	temp
  2935  00004C                     btemp:
  2936                           	opt stack 0
  2937  00004C                     	ds	1
  2938  0000                     int$flags	set	btemp
  2939                           pclatu	equ	0xFFB
  2940                           pclath	equ	0xFFA
  2941                           tblptru	equ	0xFF8
  2942                           tblptrh	equ	0xFF7
  2943                           tblptrl	equ	0xFF6
  2944                           tablat	equ	0xFF5
  2945                           prodh	equ	0xFF4
  2946                           prodl	equ	0xFF3
  2947                           intcon	equ	0xFF2
  2948                           postinc0	equ	0xFEE
  2949                           fsr0h	equ	0xFEA
  2950                           fsr0l	equ	0xFE9
  2951                           wreg	equ	0xFE8
  2952                           fsr1h	equ	0xFE2
  2953                           fsr1l	equ	0xFE1
  2954                           indf2	equ	0xFDF
  2955                           postinc2	equ	0xFDE
  2956                           postdec2	equ	0xFDD
  2957                           fsr2h	equ	0xFDA
  2958                           fsr2l	equ	0xFD9
  2959                           status	equ	0xFD8


Data Sizes:
    Strings     5
    Constant    50
    Data        0
    BSS         15
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      75
    BANK0           160     19      20
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_1(CODE[5]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 6
		 -> Display_ExibeNumero@Contagem(BANK0[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _main->_Display_ExibeNumero
    _Timer0_Inicializacao->_Timer0_CarregaValor
    _Display_Inicializacao->_Display_LigaDigito
    _Display_InicializaVarredura->_Latch_Inicializacao
    _Latch_Inicializacao->_Latch_EscreveValor
    _Display_ExibeNumero->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    _Display_ExecutaVarredura->_Display_LigaDigito
    _Display_LigaDigito->_Latch_EscreveValor

Critical Paths under _InterrupcoesDeAltaPrioridade in COMRAM

    _Timer0_Interrupcao->i2_Timer0_CarregaValor

Critical Paths under _main in BANK0

    _main->_Display_ExibeNumero
    _Display_ExibeNumero->_sprintf

Critical Paths under _InterrupcoesDeAltaPrioridade in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _InterrupcoesDeAltaPrioridade in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterrupcoesDeAltaPrioridade in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterrupcoesDeAltaPrioridade in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _InterrupcoesDeAltaPrioridade in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _InterrupcoesDeAltaPrioridade in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _InterrupcoesDeAltaPrioridade in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _InterrupcoesDeAltaPrioridade in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _InterrupcoesDeAltaPrioridade in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _InterrupcoesDeAltaPrioridade in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _InterrupcoesDeAltaPrioridade in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _InterrupcoesDeAltaPrioridade in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _InterrupcoesDeAltaPrioridade in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _InterrupcoesDeAltaPrioridade in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _InterrupcoesDeAltaPrioridade in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _InterrupcoesDeAltaPrioridade in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5269
                                             57 COMRAM     4     4      0
           _Display_ExecutaVarredura
                _Display_ExibeNumero
        _Display_InicializaVarredura
              _Display_Inicializacao
              _Habilita_Interrupcoes
            _Oscilador_Inicializacao
              _Teclado_Inicializacao
               _Timer0_Inicializacao
 ---------------------------------------------------------------------------------
 (1) _Timer0_Inicializacao                                 0     0      0      71
                _Timer0_CarregaValor
 ---------------------------------------------------------------------------------
 (2) _Timer0_CarregaValor                                  4     4      0      71
                                             18 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Teclado_Inicializacao                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Oscilador_Inicializacao                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Habilita_Interrupcoes                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display_Inicializacao                                2     1      1    1027
                                             21 COMRAM     2     1      1
                 _Display_LigaDigito
                _Latch_Inicializacao
 ---------------------------------------------------------------------------------
 (1) _Display_InicializaVarredura                          0     0      0      62
                _Latch_Inicializacao
 ---------------------------------------------------------------------------------
 (2) _Latch_Inicializacao                                  1     1      0      62
                                             19 COMRAM     1     1      0
                 _Latch_EscreveValor
 ---------------------------------------------------------------------------------
 (1) _Display_ExibeNumero                                 12     8      4    3259
                                             52 COMRAM     5     1      4
                                             12 BANK0      7     7      0
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             33    25      8    2495
                                             40 COMRAM    12     4      8
                                              0 BANK0     12    12      0
                            ___lldiv
                            ___llmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (3) _isdigit                                              3     3      0      99
                                             18 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     412
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___llmod                                              9     1      8     412
                                             31 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8     421
                                             18 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _Display_ExecutaVarredura                             0     0      0     813
                 _Display_LigaDigito
 ---------------------------------------------------------------------------------
 (2) _Display_LigaDigito                                   2     1      1     813
                                             19 COMRAM     2     1      1
                 _Latch_EscreveValor
 ---------------------------------------------------------------------------------
 (3) _Latch_EscreveValor                                   1     1      0      31
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _InterrupcoesDeAltaPrioridade                        14    14      0      45
                                              4 COMRAM    14    14      0
                 _Timer0_Interrupcao
 ---------------------------------------------------------------------------------
 (5) _Timer0_Interrupcao                                   0     0      0      45
              i2_Timer0_CarregaValor
 ---------------------------------------------------------------------------------
 (6) i2_Timer0_CarregaValor                                4     4      0      45
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Display_ExecutaVarredura
     _Display_LigaDigito
       _Latch_EscreveValor
   _Display_ExibeNumero
     _sprintf
       ___lldiv
       ___llmod
         ___lldiv (ARG)
       ___wmul
       _isdigit
   _Display_InicializaVarredura
     _Latch_Inicializacao
       _Latch_EscreveValor
   _Display_Inicializacao
     _Display_LigaDigito
       _Latch_EscreveValor
     _Latch_Inicializacao
       _Latch_EscreveValor
   _Habilita_Interrupcoes
   _Oscilador_Inicializacao
   _Teclado_Inicializacao
   _Timer0_Inicializacao
     _Timer0_CarregaValor

 _InterrupcoesDeAltaPrioridade (ROOT)
   _Timer0_Interrupcao
     i2_Timer0_CarregaValor

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     13      14       5       12.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      4B       1       79.8%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      5F      12        0.0%
DATA                 0      0      5F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Sep 17 18:50:19 2017

                                   l80 13FE                                     l79 133A  
                  ___wmul@multiplicand 0015                           __CFG_CP0$OFF 000000  
                         __CFG_CP1$OFF 000000                           __CFG_CP2$OFF 000000  
                         __CFG_CP3$OFF 000000                                    l181 112C  
                                  l551 151C                                    l561 1582  
                         __CFG_CPB$OFF 000000                           __CFG_CPD$OFF 000000  
         __size_of_Timer0_CarregaValor 001C                                    prod 000FF3  
          __size_of_Latch_EscreveValor 0018                                    wreg 000FE8  
                         __CFG_LVP$OFF 000000                                   l1541 1708  
                                 l1621 1092                                   l1631 10FA  
                                 l1615 1064                                   l1561 14DE  
                                 l1641 114E                                   l1609 1048  
                                 l1731 1434                                   l1635 1102  
                                 l1733 1440                                   l1741 1470  
                                 l1557 14CE                                   l1581 1550  
                                 l1629 10F4                                   l1735 144C  
                                 l1743 149C                                   l1727 141C  
                                 l1559 14DA                                   l1663 11F6  
                                 l1647 117C                                   l1751 1330  
                                 l1737 1458                                   l1729 1428  
                                 l1569 150E                                   l1585 1574  
                                 l1577 1540                                   l1681 12C8  
                                 l1673 1230                                   l1665 1200  
                                 l1761 136E                                   l1739 1464  
                                 l1579 154C                                   l1675 1240  
                                 l1667 120C                                   l1659 11C2  
                                 l1683 12DE                                   l1771 13F8  
                                 l1763 13AE                                   l1819 15C2  
                                 l1685 12F8                                   l1767 13E0  
                                 STR_1 1033                                   _T0IE 007F95  
                                 _T0IF 007F92                                   _LATB 000F8A  
          __end_of_Display_ExibeNumero 141A                                   _main 1594  
          Display_ExibeNumero@Contagem 006C                                   fsr0h 000FEA  
                                 fsr1h 000FE2                                   fsr2h 000FDA  
                                 fsr0l 000FE9                                   indf2 000FDF  
                                 fsr1l 000FE1                                   fsr2l 000FD9  
                                 btemp 004C                          __CFG_BORV$285 000000  
        ?_InterrupcoesDeAltaPrioridade 0001                                   prodh 000FF4  
                                 prodl 000FF3                                   start 0082  
                i2_Timer0_CarregaValor 172C                          __CFG_IESO$OFF 000000  
                         ___param_bank 000000                                  ?_main 0001  
                      __end_of___lldiv 152E         __size_of_Habilita_Interrupcoes 0006  
                                _T0CON 000FD5                        __end_of___llmod 1594  
        __end_of_Habilita_Interrupcoes 17A4                                  _TMR0H 000FD7  
                                _TMR0L 000FD6                                  _TRISB 000F93  
           Display_Inicializacao@Valor 0017                          __CFG_WRT0$OFF 000000  
                        __CFG_WRT1$OFF 000000                          __CFG_WRT2$OFF 000000  
                        __CFG_WRT3$OFF 000000                         __CFG_EBTR0$OFF 000000  
                       __CFG_FCMEN$OFF 000000                         __CFG_EBTR1$OFF 000000  
                       __CFG_EBTR2$OFF 000000                         __CFG_EBTR3$OFF 000000  
                        __CFG_WRTB$OFF 000000                          __CFG_WRTC$OFF 000000  
                        __CFG_WRTD$OFF 000000                   Display_ExibeNumero@i 0072  
                       __CFG_EBTRB$OFF 000000                        __end_of_dpowers 1029  
                      __end_of_isdigit 1710                     __CFG_MCLRE$EXTMCLR 000000  
                                pclath 000FFA                                  tablat 000FF5  
                                status 000FD8                   _Timer0_Inicializacao 16B2  
                      __end_of_sprintf 1306                         __CFG_HFOFST$ON 000000  
                       __CFG_PBADEN$ON 000000           __size_of_Latch_Inicializacao 002E  
             ?_Oscilador_Inicializacao 0001                        __initialization 16D4  
                         __end_of_main 15F2                                 ??_main 003A  
                        __activetblptr 000002                       ___llmod@dividend 0020  
                               _ANSELA 000F38                                 _ANSELB 000F39  
          __size_of_Display_LigaDigito 0012         __size_of_Display_Inicializacao 0014  
        __end_of_Display_Inicializacao 1774                                 i2l1371 1606  
                               i2l1375 160E                                 i2l1379 1616  
                       __CFG_WDTEN$OFF 000000                  ?_Timer0_Inicializacao 0001  
               ?i2_Timer0_CarregaValor 0001                  _Teclado_Inicializacao 1796  
                       __CFG_XINST$OFF 000000         ??_InterrupcoesDeAltaPrioridade 0005  
                               ___wmul 168C                         __CFG_STVREN$ON 000000  
                            ??___lldiv 001B                              ??___llmod 0028  
                               clear_0 16DE                              ??_isdigit 0013  
                         __mediumconst 0000                                 tblptrh 000FF7  
                               tblptrl 000FF6                                 tblptru 000FF8  
          __size_of_Timer0_Interrupcao 0040                              ??_sprintf 0031  
                          _Ctrl_Timer0 0047                             __accesstop 0060  
              __end_of__initialization 16E4        __end_of_Oscilador_Inicializacao 1796  
                        ___rparam_used 000001                    _Timer0_CarregaValor 1710  
                       __pcstackCOMRAM 0001                   ?_Timer0_CarregaValor 0001  
             Latch_Inicializacao@Valor 0014                           sprintf@width 0069  
               ??_Timer0_Inicializacao 0017                             __pbssBANK0 0073  
    __size_of_Display_ExecutaVarredura 0092        Timer0_CarregaValor@ValorDeCarga 0013  
    i2Timer0_CarregaValor@ValorDeCarga 0001              ?_Display_ExecutaVarredura 0001  
               ?_Teclado_Inicializacao 0001                     __CFG_CCP2MX$PORTC1 000000  
                              ?___wmul 0013                     __CFG_CCP3MX$PORTB5 000000  
  __end_of_Display_InicializaVarredura 168C            _Display_InicializaVarredura 1660  
           __end_of_Latch_EscreveValor 1760                  ??_Timer0_CarregaValor 0013  
                  _Latch_Inicializacao 1632                        __CFG_PWRTEN$OFF 000000  
                 ?_Latch_Inicializacao 0001                                __Hparam 0000  
                              __Lparam 0000           __size_of_Display_ExibeNumero 0114  
                              ___lldiv 14AC                        __size_of___wmul 0026  
                              ___llmod 152E                           __psmallconst 1000  
                              __pcinit 16D4                                __ramtop 1000  
                              __ptext0 1594                                __ptext1 16B2  
                              __ptext2 1710                                __ptext3 1796  
                              __ptext4 1786                                __ptext5 179E  
                              __ptext6 1760                                __ptext7 1660  
                              __ptext8 1632                                __ptext9 1306  
                            _T0CONbits 000FD5                                _dpowers 1001  
                              _isdigit 16F2                Display_LigaDigito@Valor 0015  
     __size_of_Oscilador_Inicializacao 0010                  _Habilita_Interrupcoes 179E  
                              _sprintf 103A                ??i2_Timer0_CarregaValor 0001  
                 end_of_initialization 16E4                          __Lmediumconst 0000  
                ??_Latch_Inicializacao 0014                        ___lldiv@divisor 0017  
                      ___lldiv@counter 001F                                postdec2 000FDD  
                              postinc0 000FEE                                postinc2 000FDE  
                            _TRISDbits 000F95             __end_of_Display_LigaDigito 1786  
                _Display_Inicializacao 1760                             main@numero 003A  
                       __end_of___wmul 16B2             __end_of_Timer0_Interrupcao 1632  
               ?_Habilita_Interrupcoes 0001       __end_of_Display_ExecutaVarredura 14AC  
                  start_initialization 16D4                              _Eventos1s 0073  
              ??_Teclado_Inicializacao 0013                      _Converte_Bcd_7seg 1029  
                      ___llmod@divisor 0024                        ___llmod@counter 0028  
                             ??___wmul 0017                              _Varredura 003E  
              _Oscilador_Inicializacao 1786                            __pbssCOMRAM 003E  
                        __pcstackBANK0 0060                    _Display_ExibeNumero 1306  
 __size_of_Display_InicializaVarredura 002C              __end_of_Converte_Bcd_7seg 1033  
                   _Latch_EscreveValor 1748                 ?_Display_Inicializacao 0016  
                          sprintf@flag 0060          __size_of_Timer0_Inicializacao 0022  
                          sprintf@prec 0061                    ?_Latch_EscreveValor 0001  
                 ?_Display_ExibeNumero 0035                              __pintcode 0008  
                             ?___lldiv 0013                               ?___llmod 0020  
          __end_of_Timer0_CarregaValor 172C                            __smallconst 1000  
                             ?_isdigit 0001                   ??_Latch_EscreveValor 0013  
                             ?_sprintf 0029               _Display_ExecutaVarredura 141A  
       __size_ofi2_Timer0_CarregaValor 001C          __end_ofi2_Timer0_CarregaValor 1748  
                       ___wmul@product 0017                               _LATDbits 000F8C  
                ??_Display_ExibeNumero 0039                       __CFG_WDTPS$32768 000000  
            ??_Oscilador_Inicializacao 0013                      ___wmul@multiplier 0013  
          Display_Inicializacao@Digito 0016            __end_of_Latch_Inicializacao 1660  
                   _Display_LigaDigito 1774                               __Hrparam 0000  
                             __Lrparam 0000                     __CFG_BOREN$SBORDIS 000000  
                    __CFG_P2BMX$PORTD2 000000                    ?_Display_LigaDigito 0014  
                     __size_of___lldiv 0082                       __size_of___llmod 0066  
              ??_Habilita_Interrupcoes 0013                            _isdigit$839 0014  
                           _ANSELDbits 000F3B                             sprintf@val 0063  
                     __size_of_isdigit 001E                               __ptext10 103A  
                             __ptext11 16F2                               __ptext20 172C  
                             __ptext12 168C                               __ptext13 152E  
                             __ptext14 14AC                               __ptext15 141A  
                             __ptext16 1774                               __ptext17 1748  
                             __ptext19 15F2                   ??_Display_LigaDigito 0015  
                     __size_of_sprintf 02CC               Display_LigaDigito@Digito 0014  
       __size_of_Teclado_Inicializacao 0008                     _Timer0_Interrupcao 15F2  
        __end_of_Teclado_Inicializacao 179E                          __size_of_main 005E  
                  ?_Timer0_Interrupcao 0001              Display_ExibeNumero@Numero 0035  
                             int$flags 004C           ?_Display_InicializaVarredura 0001  
                          _OSCTUNEbits 000F9B                             _INTCONbits 000FF2  
              Latch_EscreveValor@Valor 0013                   ??_Timer0_Interrupcao 0005  
                             isdigit@c 0015                ??_Display_Inicializacao 0017  
                             intlevel2 0000                              sprintf@ap 0067  
                            sprintf@sp 0029                       ___lldiv@dividend 0013  
                           _OSCCONbits 000FD3           __end_of_Timer0_Inicializacao 16D4  
        ??_Display_InicializaVarredura 0015             ??_Display_ExecutaVarredura 0016  
                             sprintf@c 006B                               sprintf@f 002B  
                     ___lldiv@quotient 001B                      __CFG_T3CMX$PORTC0 000000  
 __end_of_InterrupcoesDeAltaPrioridade 0082  __size_of_InterrupcoesDeAltaPrioridade 007A  
         _InterrupcoesDeAltaPrioridade 0008                      __CFG_FOSC$INTIO67 000000  
